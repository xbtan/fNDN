!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTIVE_FACE_FETCH_INTERVAL	rib/rib-manager.cpp	/^const time::seconds RibManager::ACTIVE_FACE_FETCH_INTERVAL = time::seconds(300);$/;"	m	class:nfd::rib::RibManager	file:
ACTIVE_FACE_FETCH_INTERVAL	rib/rib-manager.hpp	/^  static const time::seconds ACTIVE_FACE_FETCH_INTERVAL;$/;"	m	class:nfd::rib::RibManager
ADD_NEXTHOP	rib/fib-update.hpp	/^    ADD_NEXTHOP    = 0,$/;"	e	enum:nfd::rib::FibUpdate::Action
ADD_NEXTHOP_VERB	tests/rib/rib-manager.t.cpp	/^  const Name::Component ADD_NEXTHOP_VERB;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
ADJUST_PREDICT_DOWN_SHIFT	daemon/fw/ncc-strategy.hpp	/^    static const int ADJUST_PREDICT_DOWN_SHIFT = 7;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
ADJUST_PREDICT_UP_SHIFT	daemon/fw/ncc-strategy.hpp	/^    static const int ADJUST_PREDICT_UP_SHIFT = 3;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
APPLICATION	websocketpp/websocketpp/processors/hybi13.hpp	/^        APPLICATION = 3,$/;"	e	enum:websocketpp::processor::hybi13::state
AR	build/c4che/_cache.py	/^AR = ['\/usr\/bin\/ar']$/;"	v
ARFLAGS	build/c4che/_cache.py	/^ARFLAGS = ['rcs']$/;"	v
AcceptorWithCleanup	tests/daemon/face/unix-stream-transport.t.cpp	/^  AcceptorWithCleanup(const std::string& path = "")$/;"	f	class:nfd::face::tests::AcceptorWithCleanup
AcceptorWithCleanup	tests/daemon/face/unix-stream-transport.t.cpp	/^class AcceptorWithCleanup : public unix_stream::acceptor$/;"	c	namespace:nfd::face::tests	file:
AccessStrategy	daemon/fw/access-strategy.cpp	/^AccessStrategy::AccessStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::AccessStrategy
AccessStrategy	daemon/fw/access-strategy.hpp	/^class AccessStrategy : public Strategy$/;"	c	namespace:nfd::fw
Action	rib/fib-update.hpp	/^  enum Action {$/;"	g	class:nfd::rib::FibUpdate
Action	rib/rib-update.hpp	/^  enum Action {$/;"	g	class:nfd::rib::RibUpdate
AnyEntry	daemon/table/measurements.hpp	/^class AnyEntry$/;"	c	namespace:nfd::measurements
AnyEntry	daemon/table/name-tree.hpp	/^struct AnyEntry {$/;"	s	namespace:nfd::name_tree
AnyEntrySubTree	daemon/table/name-tree.hpp	/^struct AnyEntrySubTree {$/;"	s	namespace:nfd::name_tree
AuthorizedRibManager	tests/rib/rib-manager.t.cpp	/^  AuthorizedRibManager()$/;"	f	class:nfd::rib::tests::AuthorizedRibManager
AuthorizedRibManager	tests/rib/rib-manager.t.cpp	/^class AuthorizedRibManager : public RibManagerFixture$/;"	c	namespace:nfd::rib::tests	file:
AutoPrefixPropagator	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::AutoPrefixPropagator(ndn::nfd::Controller& controller,$/;"	f	class:nfd::rib::AutoPrefixPropagator
AutoPrefixPropagator	rib/auto-prefix-propagator.hpp	/^class AutoPrefixPropagator : noncopyable$/;"	c	namespace:nfd::rib
AutoPrefixPropagatorFixture	tests/rib/auto-prefix-propagator.t.cpp	/^  AutoPrefixPropagatorFixture()$/;"	f	class:nfd::rib::tests::AutoPrefixPropagatorFixture
AutoPrefixPropagatorFixture	tests/rib/auto-prefix-propagator.t.cpp	/^class AutoPrefixPropagatorFixture : public nfd::tests::IdentityManagementFixture$/;"	c	namespace:nfd::rib::tests	file:
AutoregServer	tools/nfd-autoreg.cpp	/^  AutoregServer()$/;"	f	class:ndn::nfd_autoreg::AutoregServer
AutoregServer	tools/nfd-autoreg.cpp	/^class AutoregServer : boost::noncopyable$/;"	c	namespace:ndn::nfd_autoreg	file:
BAD_REQUEST	websocketpp/websocketpp/processors/base.hpp	/^    BAD_REQUEST = 0, \/\/ Error was the result of improperly formatted user input$/;"	e	enum:websocketpp::processor::error_cat::value
BASH	build/c4che/_cache.py	/^BASH = ['\/bin\/bash']$/;"	v
BASIC_HEADER_LENGTH	websocketpp/websocketpp/frame.hpp	/^static unsigned int const BASIC_HEADER_LENGTH = 2;$/;"	m	namespace:websocketpp::frame
BHB0_FIN	websocketpp/websocketpp/frame.hpp	/^static uint8_t const BHB0_FIN = 0x80;$/;"	m	namespace:websocketpp::frame
BHB0_OPCODE	websocketpp/websocketpp/frame.hpp	/^static uint8_t const BHB0_OPCODE = 0x0F;$/;"	m	namespace:websocketpp::frame
BHB0_RSV1	websocketpp/websocketpp/frame.hpp	/^static uint8_t const BHB0_RSV1 = 0x40;$/;"	m	namespace:websocketpp::frame
BHB0_RSV2	websocketpp/websocketpp/frame.hpp	/^static uint8_t const BHB0_RSV2 = 0x20;$/;"	m	namespace:websocketpp::frame
BHB0_RSV3	websocketpp/websocketpp/frame.hpp	/^static uint8_t const BHB0_RSV3 = 0x10;$/;"	m	namespace:websocketpp::frame
BHB1_MASK	websocketpp/websocketpp/frame.hpp	/^static uint8_t const BHB1_MASK = 0x80;$/;"	m	namespace:websocketpp::frame
BHB1_PAYLOAD	websocketpp/websocketpp/frame.hpp	/^static uint8_t const BHB1_PAYLOAD = 0x7F;$/;"	m	namespace:websocketpp::frame
BINARY	websocketpp/websocketpp/frame.hpp	/^        BINARY = 0x2,$/;"	e	enum:websocketpp::frame::opcode::value
BINDIR	build/c4che/_cache.py	/^BINDIR = '\/usr\/local\/bin'$/;"	v
BODY	websocketpp/websocketpp/http/response.hpp	/^        BODY = 2,$/;"	e	enum:websocketpp::http::parser::response::state
BOOST_AUTO_TEST_CASE	tests/core/algorithm.t.cpp	/^BOOST_AUTO_TEST_CASE(FindLastIf)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigCoveredByPartialSubscribers)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigFilename)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigFilenameDryRun)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigFilenameMalformed)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigFilenameNoFile)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigReplaceSubscriber)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigSection)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigStream)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigStreamDryRun)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigStreamEmptyStream)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigString)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigStringDryRun)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigStringEmpty)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_AUTO_TEST_CASE(OnConfigStringMalformed)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/global-io.t.cpp	/^BOOST_AUTO_TEST_CASE(ThreadLocalGlobalIoService)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/ndebug.t.cpp	/^BOOST_AUTO_TEST_CASE(AssertFalse)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/ndebug.t.cpp	/^BOOST_AUTO_TEST_CASE(SideEffect)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/network-interface.t.cpp	/^BOOST_AUTO_TEST_CASE(ListRealNetworkInterfaces)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/network.t.cpp	/^BOOST_AUTO_TEST_CASE(Comparisons)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/network.t.cpp	/^BOOST_AUTO_TEST_CASE(Empty)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/network.t.cpp	/^BOOST_AUTO_TEST_CASE(MaxRangeV4)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/network.t.cpp	/^BOOST_AUTO_TEST_CASE(MaxRangeV6)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/network.t.cpp	/^BOOST_AUTO_TEST_CASE(RangeV4)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/network.t.cpp	/^BOOST_AUTO_TEST_CASE(RangeV6)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/privilege-helper.t.cpp	/^BOOST_AUTO_TEST_CASE(DropRaise)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/random.t.cpp	/^BOOST_AUTO_TEST_CASE(ThreadLocalRandon)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_AUTO_TEST_CASE(CancelEmptyEvent)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_AUTO_TEST_CASE(ThreadLocalScheduler)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/version.t.cpp	/^BOOST_AUTO_TEST_CASE(Version)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/core/version.t.cpp	/^BOOST_AUTO_TEST_CASE(VersionString)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ethernet.t.cpp	/^BOOST_AUTO_TEST_CASE(GetChannels)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ethernet.t.cpp	/^BOOST_AUTO_TEST_CASE(MulticastFacesMap)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ethernet.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessIncomingPacket)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ethernet.t.cpp	/^BOOST_AUTO_TEST_CASE(SendPacket)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ethernet.t.cpp	/^BOOST_AUTO_TEST_CASE(UnsupportedFaceCreate)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/face-counters.t.cpp	/^BOOST_AUTO_TEST_CASE(ByteCnt)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/face-counters.t.cpp	/^BOOST_AUTO_TEST_CASE(Counters)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/face-counters.t.cpp	/^BOOST_AUTO_TEST_CASE(PacketCnt)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/face.t.cpp	/^BOOST_AUTO_TEST_CASE(Description)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/face.t.cpp	/^BOOST_AUTO_TEST_CASE(FailTwice)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/face.t.cpp	/^BOOST_AUTO_TEST_CASE(LocalControlHeaderEnabled)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReassemblyDisabledDropFragCount)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReassemblyDisabledDropFragIndex)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveBareData)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveBareInterest)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveCacheControl)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveCacheControlDisabled)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveCacheControlDropInterest)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveCacheControlDropNack)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveData)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveIdlePacket)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveIncomingFaceIdIgnoreData)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveIncomingFaceIdIgnoreInterest)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveIncomingFaceIdIgnoreNack)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveInterest)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveNack)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveNextHopFaceId)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveNextHopFaceIdDisabled)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveNextHopFaceIdDropData)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveNextHopFaceIdDropNack)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(SendData)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(SendIncomingFaceId)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(SendIncomingFaceIdDisabled)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(SendInterest)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(SendNack)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(Unparsable)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/generic-link-service.t.cpp	/^BOOST_AUTO_TEST_CASE(WrongTlvType)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/internal-face.t.cpp	/^BOOST_AUTO_TEST_CASE(CloseClientFace)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/internal-face.t.cpp	/^BOOST_AUTO_TEST_CASE(CloseForwarderFace)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/internal-face.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveInterestSendData)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/internal-face.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveInterestSendNack)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/internal-face.t.cpp	/^BOOST_AUTO_TEST_CASE(ReceiveInterestTimeout)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/internal-face.t.cpp	/^BOOST_AUTO_TEST_CASE(SendInterestReceiveData)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/internal-face.t.cpp	/^BOOST_AUTO_TEST_CASE(SendInterestReceiveNack)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/lp-face-wrapper.t.cpp	/^BOOST_AUTO_TEST_CASE(FailSignal)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/lp-face-wrapper.t.cpp	/^BOOST_AUTO_TEST_CASE(SendReceive)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/lp-face-wrapper.t.cpp	/^BOOST_AUTO_TEST_CASE(SetId)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/lp-face-wrapper.t.cpp	/^BOOST_AUTO_TEST_CASE(SetPersistency)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/multicast-udp-transport.t.cpp	/^BOOST_AUTO_TEST_CASE(StaticPropertiesIpv4)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_AUTO_TEST_CASE(SequenceBlock)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_AUTO_TEST_CASE(SequenceBlockWrap)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_AUTO_TEST_CASE(SequenceGenerator)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_AUTO_TEST_CASE(Slice1)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_AUTO_TEST_CASE(Slice4)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/null-face.t.cpp	/^BOOST_AUTO_TEST_CASE(Send)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/packet-datasets.cpp	/^BOOST_AUTO_TEST_CASE(Corrupted)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_AUTO_TEST_CASE(ChannelMap)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_AUTO_TEST_CASE(GetChannels)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/udp.t.cpp	/^BOOST_AUTO_TEST_CASE(GetChannels)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/udp.t.cpp	/^BOOST_AUTO_TEST_CASE(UnsupportedFaceCreate)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/unicast-udp-transport.t.cpp	/^BOOST_AUTO_TEST_CASE(StaticPropertiesIpv4)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/unicast-udp-transport.t.cpp	/^BOOST_AUTO_TEST_CASE(StaticPropertiesIpv6)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/unix-stream-transport.t.cpp	/^BOOST_AUTO_TEST_CASE(StaticProperties)$/;"	f	namespace:nfd::face::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/unix-stream.t.cpp	/^BOOST_AUTO_TEST_CASE(ChannelMap)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/unix-stream.t.cpp	/^BOOST_AUTO_TEST_CASE(GetChannels)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/unix-stream.t.cpp	/^BOOST_AUTO_TEST_CASE(UnsupportedFaceCreate)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/websocket.t.cpp	/^BOOST_AUTO_TEST_CASE(GetChannels)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/face/websocket.t.cpp	/^BOOST_AUTO_TEST_CASE(UnsupportedFaceCreate)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/best-route-strategy2.t.cpp	/^BOOST_AUTO_TEST_CASE(Forward)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/best-route-strategy2.t.cpp	/^BOOST_AUTO_TEST_CASE(OneUpstream) \/\/ one upstream, send Nack when Nack arrives$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/best-route-strategy2.t.cpp	/^BOOST_AUTO_TEST_CASE(Timeout) \/\/ two upstreams, one times out, don't send Nack$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/best-route-strategy2.t.cpp	/^BOOST_AUTO_TEST_CASE(TwoUpstreams) \/\/ two upstreams, send Nack when both Nacks arrive$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/broadcast-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(Registry)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/broadcast-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(StrategyName)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/client-control-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(Forward3)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/face-table.t.cpp	/^BOOST_AUTO_TEST_CASE(AddRemove)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/face-table.t.cpp	/^BOOST_AUTO_TEST_CASE(AddReserved)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/face-table.t.cpp	/^BOOST_AUTO_TEST_CASE(Enumerate)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(BadLink)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(CsMatched)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(IncomingData)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(IncomingInterestStrategyDispatch)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(IncomingNack)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(InterestLoopNack)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(LinkDelegation)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(OutgoingNack)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(ScopeLocalhopOutgoing)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(ScopeLocalhostIncoming)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(ScopeLocalhostOutgoing)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_AUTO_TEST_CASE(SimpleExchange)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/multicast-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(Forward2)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/multicast-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(RejectLoopback)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/multicast-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(RejectScope)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/ncc-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(Bug1853)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/ncc-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(Bug1961)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/ncc-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(Bug1971)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/ncc-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(Bug1998)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/ncc-strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(FavorRespondingUpstream)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/retx-suppression.t.cpp	/^BOOST_AUTO_TEST_CASE(Exponential)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/retx-suppression.t.cpp	/^BOOST_AUTO_TEST_CASE(Fixed)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/rtt-estimator.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/fw/strategy.t.cpp	/^BOOST_AUTO_TEST_CASE(FaceTableAccess)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(InvalidCertfile)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(InvalidCertfileDryRun)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(MalformedCert)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(MalformedCertDryRun)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(NoAuthorizeSections)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(NoAuthorizeSectionsDryRun)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(NoCertfile)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(NoCertfileDryRun)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_AUTO_TEST_CASE(NoPrivilegesSections)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionEther)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionEtherBadMcast)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionEtherBadMcastGroup)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionEtherMulticastReinit)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionEtherUnknownOption)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionTcp)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionTcpBadListen)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionTcpChannelsDisabled)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionTcpUnknownOption)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdp)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpBadIdleTimeout)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpBadMcast)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpBadMcastGroup)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpBadMcastGroupV6)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpChannelsDisabled)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpConflictingMcast)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpMulticastReinit)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUdpUnknownOption)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUnix)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^BOOST_AUTO_TEST_CASE(ProcessSectionUnixUnknownOption)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(ChannelDataset)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(EnableDisableLocalControl)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(Existing)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(FaceDataset)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(FaceEvents)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(FaceQuery)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/face-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(NonExisting)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(AddToExisting)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(FibDataset)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(ImplicitCost)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(ImplicitFaceId)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(InitialAdd)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(PrefixNotFound)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(RecordNotExist)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/fib-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(UnknownFaceId)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/forwarder-status-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(Status)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/general-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(DefaultConfig)$/;"	f	namespace:nfd::general::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/general-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(InvalidGroupConfig)$/;"	f	namespace:nfd::general::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/general-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(InvalidUserConfig)$/;"	f	namespace:nfd::general::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/general-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(NoGroupConfig)$/;"	f	namespace:nfd::general::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/general-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(NoUserConfig)$/;"	f	namespace:nfd::general::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/general-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(UserAndGroupConfig)$/;"	f	namespace:nfd::general::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(AddSupportedPrivilegeInConstructor)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(CommandAuthorization)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(ExtractRequester)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(MakeRelPrefix)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(RegisterCommandHandler)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(RegisterNotificationStream)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(RegisterStatusDataset)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/manager-base.t.cpp	/^BOOST_AUTO_TEST_CASE(ValidateParameters)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(ListChoices)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(SetStrategy)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^BOOST_AUTO_TEST_CASE(UnsetStrategy)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(ConfigureTablesWithDefaults)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(Duplicate)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(EmptyTablesSection)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(InvalidValueCsMaxPackets)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(MissingPrefix)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(MissingTablesSection)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(MissingValueCsMaxPackets)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(NonExisting)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(Reload)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(Unversioned)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(ValidCsMaxPackets)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/mgmt/tables-config-section.t.cpp	/^BOOST_AUTO_TEST_CASE(Versioned)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(CachingPolicyNoCache)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(DigestExclude)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(DigestOrder)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(EmptyDataName)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(EmptyInterestName)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(Enumeration)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(ExactName)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(FullName)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(Leftmost)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(MaxSuffixComponents)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(MinSuffixComponents)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/cs.t.cpp	/^BOOST_AUTO_TEST_CASE(Rightmost)$/;"	f	namespace:nfd::cs::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/dead-nonce-list.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/dead-nonce-list.t.cpp	/^BOOST_AUTO_TEST_CASE(MinLifetime)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(Entry)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(Erase)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(EraseNameTreeEntry)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(FindExactMatch)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(Insert_LongestPrefixMatch)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(Iterator)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(RemoveNextHopFromAllEntries)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/fib.t.cpp	/^BOOST_AUTO_TEST_CASE(RemoveNextHopFromManyEntries)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/measurements-accessor.t.cpp	/^BOOST_AUTO_TEST_CASE(FindExactMatch)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/measurements-accessor.t.cpp	/^BOOST_AUTO_TEST_CASE(FindLongestPrefixMatch)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/measurements-accessor.t.cpp	/^BOOST_AUTO_TEST_CASE(Get)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/measurements-accessor.t.cpp	/^BOOST_AUTO_TEST_CASE(GetParent)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/measurements.t.cpp	/^BOOST_AUTO_TEST_CASE(FindLongestPrefixMatch)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/measurements.t.cpp	/^BOOST_AUTO_TEST_CASE(FindLongestPrefixMatchWithPitEntry)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/measurements.t.cpp	/^BOOST_AUTO_TEST_CASE(Get_Parent)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(Empty)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(Entry)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(Example)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(ExceptA)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(Hash)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(HashTableResizeShrink)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(NoNameANoSubTreeAB)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(NoNameANoSubTreeAC)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(NoSubTreeA)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(NotIn)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(OnlyA)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(SurvivedIteratorAfterErase)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_AUTO_TEST_CASE(SurvivedIteratorAfterLookup)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/network-region-table.t.cpp	/^BOOST_AUTO_TEST_CASE(InProducerRegion)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(CanForwardTo)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(Erase)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(EraseNameTreeEntry)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(FindAllDataMatches)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(InOutRecords)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(Insert)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(Iterator)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(Lifetime)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(Nonce)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/pit.t.cpp	/^BOOST_AUTO_TEST_CASE(OutRecordNack)$/;"	f	namespace:nfd::pit::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-choice.t.cpp	/^BOOST_AUTO_TEST_CASE(ClearStrategyInfo)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-choice.t.cpp	/^BOOST_AUTO_TEST_CASE(Effective)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-choice.t.cpp	/^BOOST_AUTO_TEST_CASE(Enumerate)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-choice.t.cpp	/^BOOST_AUTO_TEST_CASE(EraseNameTreeEntry)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-choice.t.cpp	/^BOOST_AUTO_TEST_CASE(Get)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-choice.t.cpp	/^BOOST_AUTO_TEST_CASE(Versioning)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-info-host.t.cpp	/^BOOST_AUTO_TEST_CASE(Create)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-info-host.t.cpp	/^BOOST_AUTO_TEST_CASE(SetGetClear)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/daemon/table/strategy-info-host.t.cpp	/^BOOST_AUTO_TEST_CASE(Types)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/other/cs-benchmark.cpp	/^BOOST_AUTO_TEST_CASE(FindMissInsert)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/other/cs-benchmark.cpp	/^BOOST_AUTO_TEST_CASE(InsertFindHit)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/other/cs-benchmark.cpp	/^BOOST_AUTO_TEST_CASE(Leftmost)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/other/cs-benchmark.cpp	/^BOOST_AUTO_TEST_CASE(Rightmost)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(AfterHubConnectDisconnect)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(AfterPropagateFail)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(AfterPropagateSucceed)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(AfterRevokeSucceed)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(AfterRibErase)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(AfterRibInsert)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(BackOffRetryPolicy)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(CheckCurrentPropagatedPrefix)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(EnableDisable)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(GetPrefixPropagationParameters)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(InvalidPropagationParameters)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(LoadConfiguration)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(LocalPrefix)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(NoHubConnectivity)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(PropagatedEntryExists)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(PropagatedEntryShouldKeep)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/auto-prefix-propagator.t.cpp	/^BOOST_AUTO_TEST_CASE(RedoPropagation)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(BothFlags_CaptureChange_NoCaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(BothFlags_NoCaptureChange_CaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(Capture_CaptureChange_NoCaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(Capture_NoCaptureChange_CaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(ChildInherit_NoCaptureChange_CaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(ChildInherit_NoCaptureChange_NoCaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(EraseFaceById)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(MakeRibEmpty)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(MultipleFaces)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(NoFlags_NoCaptureChange_CaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(NoFlags_NoCaptureChange_NoCaptureOnRoute)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(RemoveNamespaceWithAncestorFace) \/\/ Bug #2757$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(WithInheritedFace)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-erase-face.t.cpp	/^BOOST_AUTO_TEST_CASE(WithInheritedFace_Root)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-face.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-face.t.cpp	/^BOOST_AUTO_TEST_CASE(CaptureTurnedOnWithChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-face.t.cpp	/^BOOST_AUTO_TEST_CASE(CaptureTurnedOnWithoutChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-face.t.cpp	/^BOOST_AUTO_TEST_CASE(NoCaptureChangeWithChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-face.t.cpp	/^BOOST_AUTO_TEST_CASE(NoCaptureChangeWithoutChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-face.t.cpp	/^BOOST_AUTO_TEST_CASE(UpdateOnLowerCostNoChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-face.t.cpp	/^BOOST_AUTO_TEST_CASE(UpdateOnLowerCostOnly)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-namespace.t.cpp	/^BOOST_AUTO_TEST_CASE(BothFlags)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-namespace.t.cpp	/^BOOST_AUTO_TEST_CASE(Capture)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-namespace.t.cpp	/^BOOST_AUTO_TEST_CASE(ChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-new-namespace.t.cpp	/^BOOST_AUTO_TEST_CASE(NoFlags)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(ChangeCost)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(NoChangeInCost)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(TurnOffCapture)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(TurnOffChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(TurnOffChildInheritLowerCost)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(TurnOnCapture)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(TurnOnChildInherit)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/fib-updates-update-face.t.cpp	/^BOOST_AUTO_TEST_CASE(UpdateOnLowerCostOnly)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/propagated-entry.t.cpp	/^BOOST_AUTO_TEST_CASE(Fail)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/propagated-entry.t.cpp	/^BOOST_AUTO_TEST_CASE(Identity)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/propagated-entry.t.cpp	/^BOOST_AUTO_TEST_CASE(Initialize)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/propagated-entry.t.cpp	/^BOOST_AUTO_TEST_CASE(Start)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/propagated-entry.t.cpp	/^BOOST_AUTO_TEST_CASE(Succeed)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib-status-publisher.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib-update.cpp	/^BOOST_AUTO_TEST_CASE(BatchBasic)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib.t.cpp	/^BOOST_AUTO_TEST_CASE(Basic)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib.t.cpp	/^BOOST_AUTO_TEST_CASE(Children)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib.t.cpp	/^BOOST_AUTO_TEST_CASE(EraseFace)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib.t.cpp	/^BOOST_AUTO_TEST_CASE(EraseRibEntry)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib.t.cpp	/^BOOST_AUTO_TEST_CASE(Parent)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	tests/rib/rib.t.cpp	/^BOOST_AUTO_TEST_CASE(RibEntry)$/;"	f	namespace:nfd::rib::tests
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( basic_client_websocket ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( basic_http_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( basic_websocket_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_timeout_race1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_timeout_race2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( connection_extensions ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( http_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( request_no_server_header ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( request_no_server_header_override ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( server_handshake_timeout_race1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( server_handshake_timeout_race2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( set_max_message_size ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( websocket_fail_invalid_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( websocket_fail_parse_error ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( websocket_fail_unsupported_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/connection/connection.cpp	/^BOOST_AUTO_TEST_CASE( websocket_fail_upgrade_required ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/endpoint/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( construct_server_asio_plain ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/endpoint/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( construct_server_asio_tls ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/endpoint/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( construct_server_iostream ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/endpoint/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( endpoint_extensions ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/endpoint/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( initialize_server_asio ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/endpoint/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( initialize_server_asio_external ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/endpoint/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( listen_after_listen_failure ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/extension.cpp	/^BOOST_AUTO_TEST_CASE( blank ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( disabled_is_disabled ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( disabled_is_off ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( enabled_is_enabled ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( enabled_starts_disabled ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( invalid_set_c2s_max_window_bits ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( invalid_set_s2c_max_window_bits ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_max_window_bits_accept ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_max_window_bits_decline ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_max_window_bits_invalid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_max_window_bits_largest ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_max_window_bits_smallest ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_max_window_bits_valid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_no_context_takeover ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_no_context_takeover_invalid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_c2s_no_context_takeover_server_initiated ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_four_client_initiated ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_max_window_bits_accept ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_max_window_bits_decline ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_max_window_bits_invalid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_max_window_bits_largest ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_max_window_bits_smallest ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_max_window_bits_valid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_no_context_takeover ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_no_context_takeover_invalid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_s2c_no_context_takeover_server_initiated ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_three_client_initiated1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_three_client_initiated2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_three_client_initiated3 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_three_client_initiated4 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_two_client_initiated1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_two_client_initiated2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_two_client_initiated3 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_two_client_initiated4 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_two_client_initiated5 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiate_two_client_initiated6 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiation_empty_attr ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/extension/permessage_deflate.cpp	/^BOOST_AUTO_TEST_CASE( negotiation_invalid_attr ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( bad_header_name ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( bad_method ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( bad_request_no_host ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( basic_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( basic_request_with_body ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( basic_request_with_body_split ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( basic_split1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( basic_split2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( blank_consume ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( blank_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( case_insensitive_headers ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( case_insensitive_headers_overwrite ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( extract_all_lws ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( extract_attributes_blank ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( extract_attributes_simple ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( extract_parameters ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( extract_quoted_string ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( extract_token ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( firefox_full_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( header_aggregation ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( header_whitespace1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( header_whitespace2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( is_token_char ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( max_body_len ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( max_header_len ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( max_header_len_split ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( new_http_version1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( new_http_version2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( old_http_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( parse_istream ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( plain_http_response ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( response_with_non_standard_lws ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( strip_lws ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( trailing_body_characters ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( trailing_body_characters_beyond_max_lenth ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( wikipedia_example_response ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( wikipedia_example_response_trailing ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( wikipedia_example_response_trailing_large ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( write_request_basic ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( write_request_with_body ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/http/parser.cpp	/^BOOST_AUTO_TEST_CASE( write_request_with_header ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/logger/basic.cpp	/^BOOST_AUTO_TEST_CASE( access_clear ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/logger/basic.cpp	/^BOOST_AUTO_TEST_CASE( basic_concurrency ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/logger/basic.cpp	/^BOOST_AUTO_TEST_CASE( is_token_char ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/alloc.cpp	/^BOOST_AUTO_TEST_CASE( basic_get_manager ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/alloc.cpp	/^BOOST_AUTO_TEST_CASE( basic_get_message ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/message.cpp	/^BOOST_AUTO_TEST_CASE( basic_size_check ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/message.cpp	/^BOOST_AUTO_TEST_CASE( recycle ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/pool.cpp	/^BOOST_AUTO_TEST_CASE( bad_host ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/pool.cpp	/^BOOST_AUTO_TEST_CASE( exact_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/pool.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/pool.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/pool.cpp	/^BOOST_AUTO_TEST_CASE( non_get_method ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/message_buffer/pool.cpp	/^BOOST_AUTO_TEST_CASE( old_http_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/extension_permessage_compress.cpp	/^BOOST_AUTO_TEST_CASE( deflate_init ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( bad_host ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( empty_consume ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( empty_frame ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( exact_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( extract_subprotocols ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( non_get_method ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( old_http_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( prepare_data_frame ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( prepare_data_frame_null ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi00.cpp	/^BOOST_AUTO_TEST_CASE( short_frame ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi07.cpp	/^BOOST_AUTO_TEST_CASE( bad_host ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi07.cpp	/^BOOST_AUTO_TEST_CASE( exact_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi07.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi07.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi07.cpp	/^BOOST_AUTO_TEST_CASE( non_get_method ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi07.cpp	/^BOOST_AUTO_TEST_CASE( old_http_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi08.cpp	/^BOOST_AUTO_TEST_CASE( bad_host ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi08.cpp	/^BOOST_AUTO_TEST_CASE( exact_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi08.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi08.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi08.cpp	/^BOOST_AUTO_TEST_CASE( non_get_method ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi08.cpp	/^BOOST_AUTO_TEST_CASE( old_http_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( bad_host ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_response ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_response_404 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_response_no_accept ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_response_no_connection ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( client_handshake_response_no_upgrade ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( control_frame_too_large ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( exact_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extension_negotiation_blank ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extension_negotiation_permessage_deflate ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extension_negotiation_unknown ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extensions_disabled ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extract_subprotocols_empty ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extract_subprotocols_invalid) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extract_subprotocols_multiple ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( extract_subprotocols_one ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( fragmented_binary_message ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( fragmented_control_message ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( frame_empty_binary_unmasked ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( frame_extended_binary_unmasked ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( frame_jumbo_binary_unmasked ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( frame_small_binary_masked ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( frame_small_binary_unmasked ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( masked_fragmented_binary_message ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( masked_server_frame ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( missing_handshake_key2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( multiple_frame_message_too_large ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( non_get_method ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( old_http_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( prepare_data_frame ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( reserved_opcode_used ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( rsv_bits_used ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( single_frame_message_too_large ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/hybi13.cpp	/^BOOST_AUTO_TEST_CASE( unmasked_client_frame ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( ci_exact_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( exact_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( non_exact_match1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( non_exact_match2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( non_match ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( version_13 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( version_7 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( version_8 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( version_blank ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/processors/processor.cpp	/^BOOST_AUTO_TEST_CASE( version_non_numeric ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/random/none.cpp	/^BOOST_AUTO_TEST_CASE( does_it_compile ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/random/random_device.cpp	/^BOOST_AUTO_TEST_CASE( compiles ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/client.cpp	/^BOOST_AUTO_TEST_CASE( add_subprotocols ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/client.cpp	/^BOOST_AUTO_TEST_CASE( add_subprotocols_invalid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/client.cpp	/^BOOST_AUTO_TEST_CASE( connect_con ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/client.cpp	/^BOOST_AUTO_TEST_CASE( get_connection ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/client.cpp	/^BOOST_AUTO_TEST_CASE( invalid_uri ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/client.cpp	/^BOOST_AUTO_TEST_CASE( select_subprotocol ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/client.cpp	/^BOOST_AUTO_TEST_CASE( unsecure_endpoint ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( accept_subprotocol_invalid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( accept_subprotocol_one ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( accept_subprotocol_two ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( basic_websocket_request ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( invalid_websocket_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( list_subprotocol_empty ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( list_subprotocol_one ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/roles/server.cpp	/^BOOST_AUTO_TEST_CASE( unimplemented_websocket_version ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/asio/base.cpp	/^BOOST_AUTO_TEST_CASE( asio_error ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/asio/base.cpp	/^BOOST_AUTO_TEST_CASE( blank_error ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/asio/timers.cpp	/^BOOST_AUTO_TEST_CASE( tls_handshake_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/hybi_util.cpp	/^BOOST_AUTO_TEST_CASE( circshift_0 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/hybi_util.cpp	/^BOOST_AUTO_TEST_CASE( circshift_1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/hybi_util.cpp	/^BOOST_AUTO_TEST_CASE( circshift_2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/hybi_util.cpp	/^BOOST_AUTO_TEST_CASE( circshift_3 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( client_failed_connection ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( client_is_perpetual ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( client_open_handshake_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( client_peer_initiated_close_handshake_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( client_runs_out_of_work ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( client_self_initiated_close_handshake_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( pause_reading ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( pong_no_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( pong_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( server_connection_cleanup ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( server_open_handshake_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( server_self_initiated_close_handshake_timeout ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/integration.cpp	/^BOOST_AUTO_TEST_CASE( stop_listening ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/base.cpp	/^BOOST_AUTO_TEST_CASE( placeholder ) {}$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_read_at_least ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_read_at_least2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_read_at_least_double_read ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_read_at_least_read_all ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_read_at_least_read_some ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_read_at_least_read_some_indef ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_read_at_least_too_much ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_handler ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_handler_error ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_ostream ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_vector_0_ostream ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_vector_0_write_handler ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_vector_1_ostream ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_vector_1_write_handler ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_vector_2_ostream ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( async_write_vector_2_write_handler ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( const_methods ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( eof_flag ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( fatal_error_flag ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( set_timer ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( shared_pointer_memory_cleanup ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( shutdown ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( shutdown_handler ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/connection.cpp	/^BOOST_AUTO_TEST_CASE( write_before_output_method_set ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/transport/iostream/endpoint.cpp	/^BOOST_AUTO_TEST_CASE( placeholder ) {}$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/close.cpp	/^BOOST_AUTO_TEST_CASE( extract_empty ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/close.cpp	/^BOOST_AUTO_TEST_CASE( extract_reason ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/close.cpp	/^BOOST_AUTO_TEST_CASE( extract_short ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/close.cpp	/^BOOST_AUTO_TEST_CASE( invalid_values ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/close.cpp	/^BOOST_AUTO_TEST_CASE( reserved_values ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/close.cpp	/^BOOST_AUTO_TEST_CASE( value_extraction ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/error.cpp	/^BOOST_AUTO_TEST_CASE( constructing_exceptions ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( basic_bits ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( basic_constructors ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( basic_header_length ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( basic_opcode ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( basic_size ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( block_byte_mask ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( block_byte_mask_inplace ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( block_word_mask ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( block_word_mask_inplace ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( circshift ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( continuous_byte_mask ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( continuous_byte_mask_inplace ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( continuous_word_mask ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( continuous_word_mask2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( continuous_word_mask_inplace ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( extended_header_basics ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( extended_header_extractors ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( header_preparation ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( prepare_masking_key ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/frame.cpp	/^BOOST_AUTO_TEST_CASE( prepare_masking_key2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/sha1.cpp	/^BOOST_AUTO_TEST_CASE( sha1_test_a ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/sha1.cpp	/^BOOST_AUTO_TEST_CASE( sha1_test_b ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/sha1.cpp	/^BOOST_AUTO_TEST_CASE( sha1_test_c ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_http_scheme ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_bad_v6_literal_1 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_bad_v6_literal_2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_fragment ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_gt_16_bit_port ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_long_port ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_method_separator ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_no_scheme ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_invalid_scheme ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_2 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_3 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_4 ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_ipv4_literal ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_ipv6_literal ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_no_port_secure ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_no_port_unsecure ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_no_resource ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_v4_mapped ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/uri.cpp	/^BOOST_AUTO_TEST_CASE( uri_valid_v6_mixed_case ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/utilities.cpp	/^BOOST_AUTO_TEST_CASE( string_replace_all ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/utilities.cpp	/^BOOST_AUTO_TEST_CASE( substr_found ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/utilities.cpp	/^BOOST_AUTO_TEST_CASE( substr_found_ci ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/utilities.cpp	/^BOOST_AUTO_TEST_CASE( substr_not_found ) {$/;"	f
BOOST_AUTO_TEST_CASE	websocketpp/test/utility/utilities.cpp	/^BOOST_AUTO_TEST_CASE( to_lower ) {$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	tests/daemon/face/udp.t.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(EndToEnd, A, EndToEndAddresses)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE_TEMPLATE	tests/daemon/face/udp.t.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(IdleClose, A, EndToEndAddresses)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE_TEMPLATE	tests/daemon/face/udp.t.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(ManualClose, A, EndToEndAddresses)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE_TEMPLATE	tests/daemon/face/udp.t.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(MultipleAccepts, A, EndToEndAddresses)$/;"	f	namespace:nfd::tests
BOOST_AUTO_TEST_CASE_TEMPLATE	tests/daemon/fw/best-route-strategy2.t.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(CombineReasons, Combination, NackReasonCombinations)$/;"	f	namespace:nfd::fw::tests
BOOST_AUTO_TEST_CASE_TEMPLATE	tests/daemon/fw/best-route-strategy2.t.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(IncomingInterest, Scenario, NoRouteScenarios)$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/core/config-file.t.cpp	/^BOOST_FIXTURE_TEST_CASE(OnConfigUncoveredSections, MissingCallbackFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Basic, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ConfigureFactory, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ExplicitlySetModule, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(GenericInTemplatedClass, InClassTemplateLogger<bool>)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(InClass, InClassLogger)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(LimitModules, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(LoggerFactoryListModules, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(SpecializedInTemplatedClass, InClassTemplateLogger<int>)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(TestNumberLevel, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(UnknownLevelString, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/logger.t.cpp	/^BOOST_FIXTURE_TEST_CASE(UnknownModule, LoggerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/network-interface.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ListFakeNetworkInterfaces, FakeNetworkInterfaceFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Events, SchedulerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ScopedEventIdAssign, UnitTestTimeFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ScopedEventIdDestruct, UnitTestTimeFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ScopedEventIdMove, UnitTestTimeFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ScopedEventIdRelease, UnitTestTimeFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/core/scheduler.t.cpp	/^BOOST_FIXTURE_TEST_CASE(SelfCancel, SelfCancelFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Reassemble1, ReassembleFixture)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Reassemble4and2, ReassembleFixture)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/ndnlp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ReassembleTimeout, ReassembleFixture)$/;"	f	namespace:nfd::ndnlp::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Bug1856, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Bug2292, FakeNetworkInterfaceFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(EndToEnd4, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(EndToEnd6, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(FaceClosing, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(FaceCreate, FaceCreateFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(FaceCreateTimeout, FaceCreateTimeoutFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(MultipleAccepts, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(UnsupportedFaceCreate, FaceCreateFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/udp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Bug2292, FakeNetworkInterfaceFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/udp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ChannelMapUdp, FactoryErrorCheck)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/udp.t.cpp	/^BOOST_FIXTURE_TEST_CASE(FaceCreate, FaceCreateFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/unix-stream.t.cpp	/^BOOST_FIXTURE_TEST_CASE(EndToEnd, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/unix-stream.t.cpp	/^BOOST_FIXTURE_TEST_CASE(MultipleAccepts, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/face/websocket.t.cpp	/^BOOST_FIXTURE_TEST_CASE(EndToEnd4, EndToEndFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/access-strategy.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Bidirectional, TwoLaptopsFixture)$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/access-strategy.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Bug2831, TwoLaptopsFixture)$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/access-strategy.t.cpp	/^BOOST_FIXTURE_TEST_CASE(FastSlowProducer, TwoLaptopsFixture)$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/access-strategy.t.cpp	/^BOOST_FIXTURE_TEST_CASE(OneProducer, TwoLaptopsFixture)$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/access-strategy.t.cpp	/^BOOST_FIXTURE_TEST_CASE(PacketLoss, TwoLaptopsFixture)$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/access-strategy.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ProducerMobility, TwoLaptopsFixture)$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/best-route-strategy2.t.cpp	/^BOOST_FIXTURE_TEST_CASE(LiveDeadlock, UnitTestTimeFixture) \/\/ #3033 note-7$/;"	f	namespace:nfd::fw::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/fw/forwarder.t.cpp	/^BOOST_FIXTURE_TEST_CASE(InterestLoopWithShortLifetime, UnitTestTimeFixture) \/\/ Bug 1953$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_FIXTURE_TEST_CASE(NoPrivilegesSectionsDryRun, TwoValidatorFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_FIXTURE_TEST_CASE(TwoKeys, TwoValidatorFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_FIXTURE_TEST_CASE(TwoKeysDryRun, TwoValidatorFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/mgmt/command-validator.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Wildcard, TwoValidatorFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/cs-policy-lru.t.cpp	/^BOOST_FIXTURE_TEST_CASE(EvictOneLRU, UnitTestTimeFixture)$/;"	f	namespace:nfd::cs::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/cs-policy-priority-fifo.t.cpp	/^BOOST_FIXTURE_TEST_CASE(EvictOne, UnitTestTimeFixture)$/;"	f	namespace:nfd::cs::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/cs-policy-priority-fifo.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Refresh, UnitTestTimeFixture)$/;"	f	namespace:nfd::cs::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/dead-nonce-list.t.cpp	/^BOOST_FIXTURE_TEST_CASE(CapacityDown, PeriodicalInsertionFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/dead-nonce-list.t.cpp	/^BOOST_FIXTURE_TEST_CASE(CapacityUp, PeriodicalInsertionFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/dead-nonce-list.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Lifetime, PeriodicalInsertionFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/measurements.t.cpp	/^BOOST_FIXTURE_TEST_CASE(EraseNameTreeEntry, UnitTestTimeFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/measurements.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Lifetime, UnitTestTimeFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_FIXTURE_TEST_CASE(IteratorFindAllMatches, EnumerationFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/daemon/table/name-tree.t.cpp	/^BOOST_FIXTURE_TEST_CASE(IteratorFullEnumerate, EnumerationFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Basic, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(CancelExpirationEvent, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(FaceDestroyEvent, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(LocalHopInherit, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Register, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(RemoveInvalidFaces, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(RibStatusRequest, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(RouteExpiration, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(ShortName, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(UnauthorizedCommand, UnauthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE	tests/rib/rib-manager.t.cpp	/^BOOST_FIXTURE_TEST_CASE(Unregister, AuthorizedRibManager)$/;"	f	namespace:nfd::rib::tests
BOOST_FIXTURE_TEST_CASE_TEMPLATE	tests/core/segment-publisher.t.cpp	/^BOOST_FIXTURE_TEST_CASE_TEMPLATE(Generate, T, DatasetSizes, SegmentPublisherFixture<T::value>)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE_TEMPLATE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE_TEMPLATE(FaceCorruptedInput, Dataset,$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE_TEMPLATE	tests/daemon/face/tcp.t.cpp	/^BOOST_FIXTURE_TEST_CASE_TEMPLATE(LocalFaceCorruptedInput, Dataset,$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE_TEMPLATE	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^BOOST_FIXTURE_TEST_CASE_TEMPLATE(ExistingFace, T, FaceTransitions, FaceManagerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE_TEMPLATE	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^BOOST_FIXTURE_TEST_CASE_TEMPLATE(ExistingFaceOnDemand, T, OnDemandFaceTransitions, FaceManagerFixture)$/;"	f	namespace:nfd::tests
BOOST_FIXTURE_TEST_CASE_TEMPLATE	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^BOOST_FIXTURE_TEST_CASE_TEMPLATE(NewFace, T, Faces, FaceManagerFixture)$/;"	f	namespace:nfd::tests
BOOST_TEST_DYN_LINK	tests/main.cpp	26;"	d	file:
BOOST_TEST_MAIN	tests/main.cpp	25;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/connection/connection.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/endpoint/endpoint.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/extension/extension.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/extension/permessage_deflate.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/http/parser.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/logger/basic.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/message_buffer/alloc.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/message_buffer/message.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/message_buffer/pool.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/processors/extension_permessage_compress.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/processors/hybi00.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/processors/hybi07.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/processors/hybi08.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/processors/hybi13.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/processors/processor.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/random/none.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/random/random_device.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/roles/client.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/roles/server.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/transport/asio/base.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/transport/asio/timers.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/transport/hybi_util.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/transport/integration.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/transport/iostream/base.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/transport/iostream/connection.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/transport/iostream/endpoint.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/utility/close.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/utility/error.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/utility/frame.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/utility/sha1.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/utility/uri.cpp	28;"	d	file:
BOOST_TEST_MODULE	websocketpp/test/utility/utilities.cpp	28;"	d	file:
BOOST_VERSION	build/c4che/_cache.py	/^BOOST_VERSION = '1_54'$/;"	v
BOOST_VERSION_NUMBER	build/c4che/_cache.py	/^BOOST_VERSION_NUMBER = 105400$/;"	v
Base	tools/ndn-autoconfig/base.cpp	/^Base::Base(Face& face, KeyChain& keyChain, const NextStageCallback& nextStageOnFailure)$/;"	f	class:ndn::tools::autoconfig::Base
Base	tools/ndn-autoconfig/base.hpp	/^class Base : boost::noncopyable$/;"	c	namespace:ndn::tools::autoconfig
BaseDns	tools/ndn-autoconfig/base-dns.cpp	/^BaseDns::BaseDns(Face& face, KeyChain& keyChain, const NextStageCallback& nextStageOnFailure)$/;"	f	class:ndn::tools::autoconfig::BaseDns
BaseDns	tools/ndn-autoconfig/base-dns.hpp	/^class BaseDns : public Base$/;"	c	namespace:ndn::tools::autoconfig
BaseFixture	tests/test-common.hpp	/^  BaseFixture()$/;"	f	class:nfd::tests::BaseFixture
BaseFixture	tests/test-common.hpp	/^class BaseFixture$/;"	c	namespace:nfd::tests
BestRouteStrategy	daemon/fw/best-route-strategy.cpp	/^BestRouteStrategy::BestRouteStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::BestRouteStrategy
BestRouteStrategy	daemon/fw/best-route-strategy.hpp	/^class BestRouteStrategy : public Strategy$/;"	c	namespace:nfd::fw
BestRouteStrategy2	daemon/fw/best-route-strategy2.cpp	/^BestRouteStrategy2::BestRouteStrategy2(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::BestRouteStrategy2
BestRouteStrategy2	daemon/fw/best-route-strategy2.hpp	/^class BestRouteStrategy2 : public Strategy$/;"	c	namespace:nfd::fw
BestRouteStrategy2Fixture	tests/daemon/fw/best-route-strategy2.t.cpp	/^  BestRouteStrategy2Fixture()$/;"	f	class:nfd::fw::tests::BestRouteStrategy2Fixture
BestRouteStrategy2Fixture	tests/daemon/fw/best-route-strategy2.t.cpp	/^class BestRouteStrategy2Fixture : public UnitTestTimeFixture$/;"	c	namespace:nfd::fw::tests	file:
BroadcastStrategy	daemon/fw/broadcast-strategy.cpp	/^BroadcastStrategy::BroadcastStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::BroadcastStrategy
BroadcastStrategy	daemon/fw/broadcast-strategy.hpp	/^class BroadcastStrategy : public MulticastStrategy$/;"	c	namespace:nfd::fw
ByteCounter	daemon/face/face-counters.hpp	/^  ByteCounter()$/;"	f	class:nfd::ByteCounter
ByteCounter	daemon/face/face-counters.hpp	/^class ByteCounter : noncopyable$/;"	c	namespace:nfd
C1	waf	/^C1='#-'$/;"	v
C2	waf	/^C2='#+'$/;"	v
C3	waf	/^C3='#)'$/;"	v
CAPACITY_DOWN	daemon/table/dead-nonce-list.cpp	/^const double DeadNonceList::CAPACITY_DOWN = 0.9;$/;"	m	class:nfd::DeadNonceList	file:
CAPACITY_DOWN	daemon/table/dead-nonce-list.hpp	/^  static const double CAPACITY_DOWN;$/;"	m	class:nfd::DeadNonceList
CAPACITY_UP	daemon/table/dead-nonce-list.cpp	/^const double DeadNonceList::CAPACITY_UP = 1.2;$/;"	m	class:nfd::DeadNonceList	file:
CAPACITY_UP	daemon/table/dead-nonce-list.hpp	/^  static const double CAPACITY_UP;$/;"	m	class:nfd::DeadNonceList
CC_VERSION	build/c4che/_cache.py	/^CC_VERSION = ('4', '8', '4')$/;"	v
CHANNEL_PATH1	tests/daemon/face/unix-stream.t.cpp	41;"	d	file:
CHANNEL_PATH2	tests/daemon/face/unix-stream.t.cpp	42;"	d	file:
CHECK_CS_FIND	tests/daemon/table/cs.t.cpp	31;"	d	file:
CITY_HASH_HPP	core/city-hash.hpp	63;"	d
CLOSE	websocketpp/websocketpp/frame.hpp	/^        CLOSE = 0x8,$/;"	e	enum:websocketpp::frame::opcode::value
CLOSING	daemon/face/transport.hpp	/^  CLOSING, \/\/\/< the transport is requested to be closed$/;"	m	class:nfd::face::TransportState
COMMAND_PREFIX	rib/rib-manager.cpp	/^const Name RibManager::COMMAND_PREFIX = "\/localhost\/nfd\/rib";$/;"	m	class:nfd::rib::RibManager	file:
COMMAND_PREFIX	rib/rib-manager.hpp	/^  static const Name COMMAND_PREFIX; \/\/ \/localhost\/nrd$/;"	m	class:nfd::rib::RibManager
COMMAND_PREFIX	tests/rib/rib-manager.t.cpp	/^  const Name COMMAND_PREFIX;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
COMMAND_SIGNED_NCOMPS	rib/rib-manager.cpp	/^const size_t RibManager::COMMAND_SIGNED_NCOMPS =$/;"	m	class:nfd::rib::RibManager	file:
COMMAND_SIGNED_NCOMPS	rib/rib-manager.hpp	/^  static const size_t COMMAND_SIGNED_NCOMPS;$/;"	m	class:nfd::rib::RibManager
COMMAND_UNSIGNED_NCOMPS	rib/rib-manager.cpp	/^const size_t RibManager::COMMAND_UNSIGNED_NCOMPS =$/;"	m	class:nfd::rib::RibManager	file:
COMMAND_UNSIGNED_NCOMPS	rib/rib-manager.hpp	/^  static const size_t COMMAND_UNSIGNED_NCOMPS;$/;"	m	class:nfd::rib::RibManager
COMPILER_CXX	build/c4che/_cache.py	/^COMPILER_CXX = 'g++'$/;"	v
CONFIG	tests/core/config-file.t.cpp	/^const std::string CONFIG =$/;"	m	namespace:nfd::tests	file:
CONFIG	tests/daemon/mgmt/command-validator.t.cpp	/^const std::string CONFIG =$/;"	m	namespace:nfd::tests	file:
CONFIG_N_A_SECTIONS	tests/core/config-file.t.cpp	/^const int CONFIG_N_A_SECTIONS = 1;$/;"	m	namespace:nfd::tests	file:
CONFIG_N_B_SECTIONS	tests/core/config-file.t.cpp	/^const int CONFIG_N_B_SECTIONS = 1;$/;"	m	namespace:nfd::tests	file:
CONFIG_PATH	tests/daemon/mgmt/command-validator.t.cpp	/^const boost::filesystem::path CONFIG_PATH =$/;"	m	namespace:nfd::tests	file:
CONTINUATION	websocketpp/websocketpp/frame.hpp	/^        CONTINUATION = 0x0,$/;"	e	enum:websocketpp::frame::opcode::value
CONTROL_RSVB	websocketpp/websocketpp/frame.hpp	/^        CONTROL_RSVB = 0xB,$/;"	e	enum:websocketpp::frame::opcode::value
CONTROL_RSVC	websocketpp/websocketpp/frame.hpp	/^        CONTROL_RSVC = 0xC,$/;"	e	enum:websocketpp::frame::opcode::value
CONTROL_RSVD	websocketpp/websocketpp/frame.hpp	/^        CONTROL_RSVD = 0xD,$/;"	e	enum:websocketpp::frame::opcode::value
CONTROL_RSVE	websocketpp/websocketpp/frame.hpp	/^        CONTROL_RSVE = 0xE,$/;"	e	enum:websocketpp::frame::opcode::value
CONTROL_RSVF	websocketpp/websocketpp/frame.hpp	/^        CONTROL_RSVF = 0xF$/;"	e	enum:websocketpp::frame::opcode::value
CPPPATH_ST	build/c4che/_cache.py	/^CPPPATH_ST = '-I%s'$/;"	v
CS_CAPACITY	tests/other/cs-benchmark.cpp	/^  static const size_t CS_CAPACITY = 50000;$/;"	m	class:nfd::tests::CsBenchmarkFixture	file:
CXX	build/c4che/_cache.py	/^CXX = ['\/usr\/bin\/g++']$/;"	v
CXXFLAGS_MACBUNDLE	build/c4che/_cache.py	/^CXXFLAGS_MACBUNDLE = ['-fPIC']$/;"	v
CXXFLAGS_PCAP_SET_IMMEDIATE_MODE	build/c4che/_cache.py	/^CXXFLAGS_PCAP_SET_IMMEDIATE_MODE = ['-Wno-error']$/;"	v
CXXFLAGS_cxxshlib	build/c4che/_cache.py	/^CXXFLAGS_cxxshlib = ['-fPIC']$/;"	v
CXXLNK_SRC_F	build/c4che/_cache.py	/^CXXLNK_SRC_F = []$/;"	v
CXXLNK_TGT_F	build/c4che/_cache.py	/^CXXLNK_TGT_F = ['-o']$/;"	v
CXXPCH_EXT	build/c4che/_cache.py	/^CXXPCH_EXT = '.gch'$/;"	v
CXXPCH_F	build/c4che/_cache.py	/^CXXPCH_F = ['-include']$/;"	v
CXXPCH_FLAGS	build/c4che/_cache.py	/^CXXPCH_FLAGS = ['-x', 'c++-header']$/;"	v
CXX_NAME	build/c4che/_cache.py	/^CXX_NAME = 'gcc'$/;"	v
CXX_SRC_F	build/c4che/_cache.py	/^CXX_SRC_F = []$/;"	v
CXX_TGT_F	build/c4che/_cache.py	/^CXX_TGT_F = ['-c', '-o']$/;"	v
Channel	daemon/face/channel.hpp	/^class Channel : noncopyable$/;"	c	namespace:nfd
CheckNextHopResult	tests/daemon/mgmt/fib-manager.t.cpp	/^  enum class CheckNextHopResult$/;"	c	class:nfd::tests::FibManagerFixture	file:
CheckRequestResult	tests/rib/auto-prefix-propagator.t.cpp	/^  enum class CheckRequestResult {$/;"	c	class:nfd::rib::tests::AutoPrefixPropagatorFixture	file:
CheckResponseResult	tests/daemon/mgmt/manager-common-fixture.hpp	/^  enum class CheckResponseResult$/;"	c	class:nfd::tests::ManagerCommonFixture
CityHash	daemon/table/name-tree.cpp	/^typedef boost::mpl::if_c<sizeof(size_t) >= 8, Hash64, Hash32>::type CityHash;$/;"	t	namespace:nfd::name_tree	file:
CityHash128	core/city-hash.cpp	/^uint128 CityHash128(const char *s, size_t len) {$/;"	f
CityHash128WithSeed	core/city-hash.cpp	/^uint128 CityHash128WithSeed(const char *s, size_t len, uint128 seed) {$/;"	f
CityHash32	core/city-hash.cpp	/^uint32 CityHash32(const char *s, size_t len) {$/;"	f
CityHash64	core/city-hash.cpp	/^uint64 CityHash64(const char *s, size_t len) {$/;"	f
CityHash64WithSeed	core/city-hash.cpp	/^uint64 CityHash64WithSeed(const char *s, size_t len, uint64 seed) {$/;"	f
CityHash64WithSeeds	core/city-hash.cpp	/^uint64 CityHash64WithSeeds(const char *s, size_t len,$/;"	f
CityMurmur	core/city-hash.cpp	/^static uint128 CityMurmur(const char *s, size_t len, uint128 seed) {$/;"	f	file:
Client	tests/daemon/face/websocket.t.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> Client;$/;"	t	file:
ClientControlStrategy	daemon/fw/client-control-strategy.cpp	/^ClientControlStrategy::ClientControlStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::ClientControlStrategy
ClientControlStrategy	daemon/fw/client-control-strategy.hpp	/^class ClientControlStrategy : public BestRouteStrategy$/;"	c	namespace:nfd::fw
CommandValidator	daemon/mgmt/command-validator.cpp	/^CommandValidator::CommandValidator()$/;"	f	class:nfd::CommandValidator
CommandValidator	daemon/mgmt/command-validator.hpp	/^class CommandValidator$/;"	c	namespace:nfd
CommandValidatorTester	tests/daemon/mgmt/command-validator.t.cpp	/^  CommandValidatorTester()$/;"	f	class:nfd::tests::CommandValidatorTester
CommandValidatorTester	tests/daemon/mgmt/command-validator.t.cpp	/^class CommandValidatorTester$/;"	c	namespace:nfd::tests	file:
ConfigFile	core/config-file.cpp	/^ConfigFile::ConfigFile(UnknownConfigSectionHandler unknownSectionCallback)$/;"	f	class:nfd::ConfigFile
ConfigFile	core/config-file.hpp	/^class ConfigFile : noncopyable$/;"	c	namespace:nfd
ConfigSection	core/config-file.hpp	/^typedef boost::property_tree::ptree ConfigSection;$/;"	t	namespace:nfd
ConfigSectionHandler	core/config-file.hpp	/^                      const std::string& \/*filename*\/)> ConfigSectionHandler;$/;"	t	namespace:nfd
ConnectFailedCallback	daemon/face/channel.hpp	/^  typedef function<void(const std::string& reason)> ConnectFailedCallback;$/;"	t	class:nfd::Channel
Container	tests/daemon/face/packet-datasets.hpp	/^  typedef std::vector<ndn::Buffer> Container;$/;"	t	class:nfd::tests::CorruptedInterest
Container	tests/daemon/face/packet-datasets.hpp	/^  typedef std::vector<ndn::Buffer> Container;$/;"	t	class:nfd::tests::CorruptedInterestWithLocalControlHeader
ControlCommandHandler	daemon/mgmt/manager-base.hpp	/^                        const ndn::mgmt::CommandContinuation done)> ControlCommandHandler;$/;"	t	class:nfd::ManagerBase
CorruptedInterest	tests/daemon/face/packet-datasets.hpp	/^  CorruptedInterest()$/;"	f	class:nfd::tests::CorruptedInterest
CorruptedInterest	tests/daemon/face/packet-datasets.hpp	/^class CorruptedInterest$/;"	c	namespace:nfd::tests
CorruptedInterestWithLocalControlHeader	tests/daemon/face/packet-datasets.hpp	/^  CorruptedInterestWithLocalControlHeader()$/;"	f	class:nfd::tests::CorruptedInterestWithLocalControlHeader
CorruptedInterestWithLocalControlHeader	tests/daemon/face/packet-datasets.hpp	/^class CorruptedInterestWithLocalControlHeader$/;"	c	namespace:nfd::tests
CorruptedPackets	tests/daemon/face/packet-datasets.hpp	/^                            CorruptedInterest> CorruptedPackets;$/;"	t	namespace:nfd::tests
Cs	daemon/table/cs.cpp	/^Cs::Cs(size_t nMaxPackets, unique_ptr<Policy> policy)$/;"	f	class:nfd::cs::Cs
Cs	daemon/table/cs.hpp	/^class Cs : noncopyable$/;"	c	namespace:nfd::cs
CsBenchmarkFixture	tests/other/cs-benchmark.cpp	/^  CsBenchmarkFixture()$/;"	f	class:nfd::tests::CsBenchmarkFixture
CsBenchmarkFixture	tests/other/cs-benchmark.cpp	/^class CsBenchmarkFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
DATADIR	build/c4che/_cache.py	/^DATADIR = '\/usr\/local\/share'$/;"	v
DATAROOTDIR	build/c4che/_cache.py	/^DATAROOTDIR = '\/usr\/local\/share'$/;"	v
DECL_CLASS_FINAL	common.hpp	68;"	d
DECL_CLASS_FINAL	common.hpp	70;"	d
DECL_CLASS_FINAL	daemon/face/lp-face.hpp	/^DECL_CLASS_FINAL$/;"	c	namespace:nfd::face
DECL_FINAL	common.hpp	58;"	d
DECL_FINAL	common.hpp	60;"	d
DECL_OVERRIDE	common.hpp	48;"	d
DECL_OVERRIDE	common.hpp	50;"	d
DECL_OVERRIDE	daemon/face/datagram-transport.hpp	/^  doClose() DECL_OVERRIDE;$/;"	m	class:nfd::face::DatagramTransport
DECL_OVERRIDE	daemon/face/datagram-transport.hpp	/^  doSend(Transport::Packet&& packet) DECL_OVERRIDE;$/;"	m	class:nfd::face::DatagramTransport
DECL_OVERRIDE	daemon/face/ethernet-face.hpp	/^  close() DECL_OVERRIDE;$/;"	m	class:nfd::EthernetFace
DECL_OVERRIDE	daemon/face/ethernet-face.hpp	/^  sendData(const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::EthernetFace
DECL_OVERRIDE	daemon/face/ethernet-face.hpp	/^  sendInterest(const Interest& interest) DECL_OVERRIDE;$/;"	m	class:nfd::EthernetFace
DECL_OVERRIDE	daemon/face/ethernet-factory.hpp	/^             const FaceCreationFailedCallback& onConnectFailed) DECL_OVERRIDE;$/;"	m	class:nfd::EthernetFactory
DECL_OVERRIDE	daemon/face/ethernet-factory.hpp	/^  getChannels() const DECL_OVERRIDE;$/;"	m	class:nfd::EthernetFactory
DECL_OVERRIDE	daemon/face/generic-link-service.hpp	/^  doReceivePacket(Transport::Packet&& packet) DECL_OVERRIDE;$/;"	m	class:nfd::face::GenericLinkService
DECL_OVERRIDE	daemon/face/generic-link-service.hpp	/^  doSendData(const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::face::GenericLinkService
DECL_OVERRIDE	daemon/face/generic-link-service.hpp	/^  doSendInterest(const Interest& interest) DECL_OVERRIDE;$/;"	m	class:nfd::face::GenericLinkService
DECL_OVERRIDE	daemon/face/generic-link-service.hpp	/^  doSendNack(const ndn::lp::Nack& nack) DECL_OVERRIDE;$/;"	m	class:nfd::face::GenericLinkService
DECL_OVERRIDE	daemon/face/internal-transport.hpp	/^  doClose() DECL_OVERRIDE;$/;"	m	class:nfd::face::InternalForwarderTransport
DECL_OVERRIDE	daemon/face/internal-transport.hpp	/^  doSend(Packet&& packet) DECL_OVERRIDE;$/;"	m	class:nfd::face::InternalForwarderTransport
DECL_OVERRIDE	daemon/face/internal-transport.hpp	/^  receiveFromLink(const Block& packet) DECL_OVERRIDE;$/;"	m	class:nfd::face::InternalClientTransport
DECL_OVERRIDE	daemon/face/internal-transport.hpp	/^  receiveFromLink(const Block& packet) DECL_OVERRIDE;$/;"	m	class:nfd::face::InternalForwarderTransport
DECL_OVERRIDE	daemon/face/internal-transport.hpp	/^  send(const Block& header, const Block& payload) DECL_OVERRIDE;$/;"	m	class:nfd::face::InternalClientTransport
DECL_OVERRIDE	daemon/face/internal-transport.hpp	/^  send(const Block& wire) DECL_OVERRIDE;$/;"	m	class:nfd::face::InternalClientTransport
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  close() DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  getCounters() const DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  isUp() const DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  sendData(const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  sendInterest(const Interest& interest) DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  sendNack(const lp::Nack& nack) DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  setId(nfd::FaceId faceId) DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/lp-face-wrapper.hpp	/^  setPersistency(ndn::nfd::FacePersistency persistency) DECL_OVERRIDE;$/;"	m	class:nfd::face::LpFaceWrapper
DECL_OVERRIDE	daemon/face/multicast-udp-transport.hpp	/^  doClose() DECL_OVERRIDE;$/;"	m	class:nfd::face::MulticastUdpTransport
DECL_OVERRIDE	daemon/face/multicast-udp-transport.hpp	/^  doSend(Transport::Packet&& packet) DECL_OVERRIDE;$/;"	m	class:nfd::face::MulticastUdpTransport
DECL_OVERRIDE	daemon/face/null-face.hpp	/^  close() DECL_OVERRIDE;$/;"	m	class:nfd::NullFace
DECL_OVERRIDE	daemon/face/null-face.hpp	/^  sendData(const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::NullFace
DECL_OVERRIDE	daemon/face/null-face.hpp	/^  sendInterest(const Interest& interest) DECL_OVERRIDE;$/;"	m	class:nfd::NullFace
DECL_OVERRIDE	daemon/face/stream-face.hpp	/^  close() DECL_OVERRIDE;$/;"	m	class:nfd::StreamFace
DECL_OVERRIDE	daemon/face/stream-face.hpp	/^  sendData(const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::StreamFace
DECL_OVERRIDE	daemon/face/stream-face.hpp	/^  sendInterest(const Interest& interest) DECL_OVERRIDE;$/;"	m	class:nfd::StreamFace
DECL_OVERRIDE	daemon/face/stream-transport.hpp	/^  doClose() DECL_OVERRIDE;$/;"	m	class:nfd::face::StreamTransport
DECL_OVERRIDE	daemon/face/stream-transport.hpp	/^  doSend(Transport::Packet&& packet) DECL_OVERRIDE;$/;"	m	class:nfd::face::StreamTransport
DECL_OVERRIDE	daemon/face/tcp-factory.hpp	/^             const FaceCreationFailedCallback& onConnectFailed) DECL_OVERRIDE;$/;"	m	class:nfd::TcpFactory
DECL_OVERRIDE	daemon/face/tcp-factory.hpp	/^  getChannels() const DECL_OVERRIDE;$/;"	m	class:nfd::TcpFactory
DECL_OVERRIDE	daemon/face/udp-factory.hpp	/^             const FaceCreationFailedCallback& onConnectFailed) DECL_OVERRIDE;$/;"	m	class:nfd::UdpFactory
DECL_OVERRIDE	daemon/face/udp-factory.hpp	/^  getChannels() const DECL_OVERRIDE;$/;"	m	class:nfd::UdpFactory
DECL_OVERRIDE	daemon/face/unix-stream-channel.hpp	/^  ~UnixStreamChannel() DECL_OVERRIDE;$/;"	m	class:nfd::UnixStreamChannel
DECL_OVERRIDE	daemon/face/unix-stream-factory.hpp	/^             const FaceCreationFailedCallback& onConnectFailed) DECL_OVERRIDE;$/;"	m	class:nfd::UnixStreamFactory
DECL_OVERRIDE	daemon/face/unix-stream-factory.hpp	/^  getChannels() const DECL_OVERRIDE;$/;"	m	class:nfd::UnixStreamFactory
DECL_OVERRIDE	daemon/face/websocket-face.hpp	/^  close() DECL_OVERRIDE;$/;"	m	class:nfd::WebSocketFace
DECL_OVERRIDE	daemon/face/websocket-face.hpp	/^  sendData(const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::WebSocketFace
DECL_OVERRIDE	daemon/face/websocket-face.hpp	/^  sendInterest(const Interest& interest) DECL_OVERRIDE;$/;"	m	class:nfd::WebSocketFace
DECL_OVERRIDE	daemon/face/websocket-factory.hpp	/^             const FaceCreationFailedCallback& onConnectFailed) DECL_OVERRIDE;$/;"	m	class:nfd::WebSocketFactory
DECL_OVERRIDE	daemon/face/websocket-factory.hpp	/^  getChannels() const DECL_OVERRIDE;$/;"	m	class:nfd::WebSocketFactory
DECL_OVERRIDE	daemon/fw/access-strategy.hpp	/^                        const Face& inFace, const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::fw::AccessStrategy
DECL_OVERRIDE	daemon/fw/access-strategy.hpp	/^                       shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::AccessStrategy
DECL_OVERRIDE	daemon/fw/best-route-strategy.hpp	/^                       shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::BestRouteStrategy
DECL_OVERRIDE	daemon/fw/best-route-strategy2.hpp	/^                       shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::BestRouteStrategy2
DECL_OVERRIDE	daemon/fw/best-route-strategy2.hpp	/^                   shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::BestRouteStrategy2
DECL_OVERRIDE	daemon/fw/broadcast-strategy.hpp	/^                       shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::BroadcastStrategy
DECL_OVERRIDE	daemon/fw/client-control-strategy.hpp	/^                       shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::ClientControlStrategy
DECL_OVERRIDE	daemon/fw/multicast-strategy.hpp	/^                       shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::MulticastStrategy
DECL_OVERRIDE	daemon/fw/ncc-strategy.hpp	/^                        const Face& inFace, const Data& data) DECL_OVERRIDE;$/;"	m	class:nfd::fw::NccStrategy
DECL_OVERRIDE	daemon/fw/ncc-strategy.hpp	/^                       shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::NccStrategy
DECL_OVERRIDE	daemon/fw/retx-suppression-exponential.hpp	/^         pit::Entry& pitEntry) const DECL_OVERRIDE;$/;"	m	class:nfd::fw::RetxSuppressionExponential
DECL_OVERRIDE	daemon/fw/retx-suppression-fixed.hpp	/^         pit::Entry& pitEntry) const DECL_OVERRIDE;$/;"	m	class:nfd::fw::RetxSuppressionFixed
DECL_OVERRIDE	daemon/table/cs-policy-lru.hpp	/^  doAfterInsert(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::lru::LruPolicy
DECL_OVERRIDE	daemon/table/cs-policy-lru.hpp	/^  doAfterRefresh(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::lru::LruPolicy
DECL_OVERRIDE	daemon/table/cs-policy-lru.hpp	/^  doBeforeErase(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::lru::LruPolicy
DECL_OVERRIDE	daemon/table/cs-policy-lru.hpp	/^  doBeforeUse(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::lru::LruPolicy
DECL_OVERRIDE	daemon/table/cs-policy-lru.hpp	/^  evictEntries() DECL_OVERRIDE;$/;"	m	class:nfd::cs::lru::LruPolicy
DECL_OVERRIDE	daemon/table/cs-policy-priority-fifo.hpp	/^  doAfterInsert(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
DECL_OVERRIDE	daemon/table/cs-policy-priority-fifo.hpp	/^  doAfterRefresh(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
DECL_OVERRIDE	daemon/table/cs-policy-priority-fifo.hpp	/^  doBeforeErase(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
DECL_OVERRIDE	daemon/table/cs-policy-priority-fifo.hpp	/^  doBeforeUse(iterator i) DECL_OVERRIDE;$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
DECL_OVERRIDE	daemon/table/cs-policy-priority-fifo.hpp	/^  evictEntries() DECL_OVERRIDE;$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
DECL_OVERRIDE	tests/daemon/fw/strategy-tester.hpp	/^               bool wantNewNonce = false) DECL_OVERRIDE;$/;"	m	class:nfd::fw::tests::StrategyTester
DECL_OVERRIDE	tests/daemon/fw/strategy-tester.hpp	/^           const lp::NackHeader& header) DECL_OVERRIDE;$/;"	m	class:nfd::fw::tests::StrategyTester
DECL_OVERRIDE	tests/daemon/fw/strategy-tester.hpp	/^  rejectPendingInterest(shared_ptr<pit::Entry> pitEntry) DECL_OVERRIDE;$/;"	m	class:nfd::fw::tests::StrategyTester
DECL_OVERRIDE	tools/ndn-autoconfig/guess-from-identity-name.hpp	/^  start() DECL_OVERRIDE;$/;"	m	class:ndn::tools::autoconfig::GuessFromIdentityName
DECL_OVERRIDE	tools/ndn-autoconfig/guess-from-search-domains.hpp	/^  start() DECL_OVERRIDE;$/;"	m	class:ndn::tools::autoconfig::GuessFromSearchDomains
DECL_OVERRIDE	tools/ndn-autoconfig/multicast-discovery.hpp	/^  start() DECL_OVERRIDE;$/;"	m	class:ndn::tools::autoconfig::MulticastDiscovery
DEFAULT_CONFIG_FILE	build/config.hpp	21;"	d
DEFAULT_COST	tools/nfdc.cpp	/^const uint64_t Nfdc::DEFAULT_COST = 0;$/;"	m	class:nfdc::Nfdc	file:
DEFAULT_COST	tools/nfdc.hpp	/^  static const uint64_t DEFAULT_COST;$/;"	m	class:nfdc::Nfdc
DEFAULT_CS_MAX_PACKETS	daemon/mgmt/tables-config-section.cpp	/^const size_t TablesConfigSection::DEFAULT_CS_MAX_PACKETS = 65536;$/;"	m	class:nfd::TablesConfigSection	file:
DEFAULT_CS_MAX_PACKETS	daemon/mgmt/tables-config-section.hpp	/^  static const size_t DEFAULT_CS_MAX_PACKETS;$/;"	m	class:nfd::TablesConfigSection
DEFAULT_EXPIRATION_PERIOD	tools/nfdc.cpp	/^const ndn::time::milliseconds Nfdc::DEFAULT_EXPIRATION_PERIOD = ndn::time::milliseconds::max();$/;"	m	class:nfdc::Nfdc	file:
DEFAULT_EXPIRATION_PERIOD	tools/nfdc.hpp	/^  static const ndn::time::milliseconds DEFAULT_EXPIRATION_PERIOD;$/;"	m	class:nfdc::Nfdc
DEFAULT_INITIAL_INTERVAL	daemon/fw/retx-suppression-exponential.cpp	/^const RetxSuppressionExponential::Duration RetxSuppressionExponential::DEFAULT_INITIAL_INTERVAL =$/;"	m	class:nfd::fw::RetxSuppressionExponential	file:
DEFAULT_INITIAL_INTERVAL	daemon/fw/retx-suppression-exponential.hpp	/^  static const Duration DEFAULT_INITIAL_INTERVAL;$/;"	m	class:nfd::fw::RetxSuppressionExponential
DEFAULT_LIFETIME	daemon/table/dead-nonce-list.cpp	/^const time::nanoseconds DeadNonceList::DEFAULT_LIFETIME = time::seconds(6);$/;"	m	class:nfd::DeadNonceList	file:
DEFAULT_LIFETIME	daemon/table/dead-nonce-list.hpp	/^  static const time::nanoseconds DEFAULT_LIFETIME;$/;"	m	class:nfd::DeadNonceList
DEFAULT_MAX_INTERVAL	daemon/fw/retx-suppression-exponential.cpp	/^const RetxSuppressionExponential::Duration RetxSuppressionExponential::DEFAULT_MAX_INTERVAL =$/;"	m	class:nfd::fw::RetxSuppressionExponential	file:
DEFAULT_MAX_INTERVAL	daemon/fw/retx-suppression-exponential.hpp	/^  static const Duration DEFAULT_MAX_INTERVAL;$/;"	m	class:nfd::fw::RetxSuppressionExponential
DEFAULT_MIN_RETX_INTERVAL	daemon/fw/retx-suppression-fixed.hpp	/^  static const time::milliseconds DEFAULT_MIN_RETX_INTERVAL;$/;"	m	class:nfd::fw::RetxSuppressionFixed
DEFAULT_MULTIPLIER	daemon/fw/retx-suppression-exponential.cpp	/^const float RetxSuppressionExponential::DEFAULT_MULTIPLIER = 2.0;$/;"	m	class:nfd::fw::RetxSuppressionExponential	file:
DEFAULT_MULTIPLIER	daemon/fw/retx-suppression-exponential.hpp	/^  static const float DEFAULT_MULTIPLIER;$/;"	m	class:nfd::fw::RetxSuppressionExponential
DEFER_FIRST_WITHOUT_BEST_FACE	daemon/fw/ncc-strategy.cpp	/^const time::microseconds NccStrategy::DEFER_FIRST_WITHOUT_BEST_FACE = time::microseconds(4000);$/;"	m	class:nfd::fw::NccStrategy	file:
DEFER_FIRST_WITHOUT_BEST_FACE	daemon/fw/ncc-strategy.hpp	/^  static const time::microseconds DEFER_FIRST_WITHOUT_BEST_FACE;$/;"	m	class:nfd::fw::NccStrategy
DEFER_RANGE_WITHOUT_BEST_FACE	daemon/fw/ncc-strategy.cpp	/^const time::microseconds NccStrategy::DEFER_RANGE_WITHOUT_BEST_FACE = time::microseconds(75000);$/;"	m	class:nfd::fw::NccStrategy	file:
DEFER_RANGE_WITHOUT_BEST_FACE	daemon/fw/ncc-strategy.hpp	/^  static const time::microseconds DEFER_RANGE_WITHOUT_BEST_FACE;$/;"	m	class:nfd::fw::NccStrategy
DEFINES	build/c4che/_cache.py	/^DEFINES = ['NDEBUG']$/;"	v
DEFINES_ST	build/c4che/_cache.py	/^DEFINES_ST = '-D%s'$/;"	v
DEST_BINFMT	build/c4che/_cache.py	/^DEST_BINFMT = 'elf'$/;"	v
DEST_CPU	build/c4che/_cache.py	/^DEST_CPU = 'x86'$/;"	v
DEST_OS	build/c4che/_cache.py	/^DEST_OS = 'linux'$/;"	v
DOCDIR	build/c4che/_cache.py	/^DOCDIR = '\/usr\/local\/share\/doc\/nfd'$/;"	v
DONE	websocketpp/websocketpp/http/response.hpp	/^        DONE = 3$/;"	e	enum:websocketpp::http::parser::response::state
DOWN	daemon/face/transport.hpp	/^  DOWN, \/\/\/< the transport is down temporarily, and is being recovered$/;"	m	class:nfd::face::TransportState
DOXYGEN	build/c4che/_cache.py	/^DOXYGEN = ['\/usr\/bin\/doxygen']$/;"	v
DUPLICATE_NONCE_IN_OTHER	daemon/table/pit-entry.hpp	/^  DUPLICATE_NONCE_IN_OTHER  = (1 << 1),$/;"	e	enum:nfd::pit::DuplicateNonceWhere
DUPLICATE_NONCE_IN_SAME	daemon/table/pit-entry.hpp	/^  DUPLICATE_NONCE_IN_SAME   = (1 << 0),$/;"	e	enum:nfd::pit::DuplicateNonceWhere
DUPLICATE_NONCE_NONE	daemon/table/pit-entry.hpp	/^  DUPLICATE_NONCE_NONE      = 0,$/;"	e	enum:nfd::pit::DuplicateNonceWhere
DUPLICATE_NONCE_OUT_OTHER	daemon/table/pit-entry.hpp	/^  DUPLICATE_NONCE_OUT_OTHER = (1 << 3)$/;"	e	enum:nfd::pit::DuplicateNonceWhere
DUPLICATE_NONCE_OUT_SAME	daemon/table/pit-entry.hpp	/^  DUPLICATE_NONCE_OUT_SAME  = (1 << 2),$/;"	e	enum:nfd::pit::DuplicateNonceWhere
DVIDIR	build/c4che/_cache.py	/^DVIDIR = '\/usr\/local\/share\/doc\/nfd'$/;"	v
DataMatchResult	daemon/table/pit.hpp	/^typedef std::vector<shared_ptr<pit::Entry>> DataMatchResult;$/;"	t	namespace:nfd::pit
DatagramTransport	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::DatagramTransport(typename DatagramTransport::protocol::socket&& socket)$/;"	f	class:nfd::face::DatagramTransport
DatagramTransport	daemon/face/datagram-transport.hpp	/^class DatagramTransport : public Transport$/;"	c	namespace:nfd::face
DatasetSizes	tests/core/segment-publisher.t.cpp	/^typedef boost::mpl::vector<int_<10000>, int_<100>, int_<10>, int_<0> > DatasetSizes;$/;"	t	namespace:nfd::tests	file:
DeadNonceList	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::DeadNonceList(const time::nanoseconds& lifetime)$/;"	f	class:nfd::DeadNonceList
DeadNonceList	daemon/table/dead-nonce-list.hpp	/^class DeadNonceList : noncopyable$/;"	c	namespace:nfd
DummyAllSubscriber	tests/core/config-file.t.cpp	/^  DummyAllSubscriber(ConfigFile& config, bool expectDryRun=false)$/;"	f	class:nfd::tests::DummyAllSubscriber
DummyAllSubscriber	tests/core/config-file.t.cpp	/^class DummyAllSubscriber : public DummySubscriber$/;"	c	namespace:nfd::tests	file:
DummyFace	tests/daemon/face/dummy-face.hpp	/^typedef DummyFaceImpl<Face> DummyFace;$/;"	t	namespace:nfd::tests
DummyFaceImpl	tests/daemon/face/dummy-face.hpp	/^  DummyFaceImpl()$/;"	f	class:nfd::tests::DummyFaceImpl
DummyFaceImpl	tests/daemon/face/dummy-face.hpp	/^  DummyFaceImpl(const std::string& remoteUri, const std::string& localUri)$/;"	f	class:nfd::tests::DummyFaceImpl
DummyFaceImpl	tests/daemon/face/dummy-face.hpp	/^class DummyFaceImpl : public FaceBase$/;"	c	namespace:nfd::tests
DummyLocalFace	tests/daemon/face/dummy-face.hpp	/^typedef DummyFaceImpl<LocalFace> DummyLocalFace;$/;"	t	namespace:nfd::tests
DummyLpFace	tests/daemon/face/dummy-lp-face.cpp	/^DummyLpFace::DummyLpFace(const std::string& localUri, const std::string& remoteUri,$/;"	f	class:nfd::face::tests::DummyLpFace
DummyLpFace	tests/daemon/face/dummy-lp-face.hpp	/^class DummyLpFace : public LpFace$/;"	c	namespace:nfd::face::tests
DummyNoSubscriber	tests/core/config-file.t.cpp	/^  DummyNoSubscriber(ConfigFile& config, bool expectDryRun)$/;"	f	class:nfd::tests::DummyNoSubscriber
DummyNoSubscriber	tests/core/config-file.t.cpp	/^class DummyNoSubscriber : public DummySubscriber$/;"	c	namespace:nfd::tests	file:
DummyOneSubscriber	tests/core/config-file.t.cpp	/^  DummyOneSubscriber(ConfigFile& config,$/;"	f	class:nfd::tests::DummyOneSubscriber
DummyOneSubscriber	tests/core/config-file.t.cpp	/^class DummyOneSubscriber : public DummySubscriber$/;"	c	namespace:nfd::tests	file:
DummyStrategy	tests/daemon/fw/dummy-strategy.hpp	/^  DummyStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::tests::DummyStrategy
DummyStrategy	tests/daemon/fw/dummy-strategy.hpp	/^class DummyStrategy : public fw::Strategy$/;"	c	namespace:nfd::tests
DummyStrategyInfo	tests/daemon/table/strategy-info-host.t.cpp	/^  DummyStrategyInfo(int id)$/;"	f	class:nfd::tests::DummyStrategyInfo
DummyStrategyInfo	tests/daemon/table/strategy-info-host.t.cpp	/^class DummyStrategyInfo : public StrategyInfo$/;"	c	namespace:nfd::tests	file:
DummyStrategyInfo1	tests/daemon/table/measurements.t.cpp	/^class DummyStrategyInfo1 : public fw::StrategyInfo$/;"	c	namespace:nfd::tests	file:
DummyStrategyInfo2	tests/daemon/table/measurements.t.cpp	/^class DummyStrategyInfo2 : public fw::StrategyInfo$/;"	c	namespace:nfd::tests	file:
DummyStrategyInfo2	tests/daemon/table/strategy-info-host.t.cpp	/^  DummyStrategyInfo2(int id)$/;"	f	class:nfd::tests::DummyStrategyInfo2
DummyStrategyInfo2	tests/daemon/table/strategy-info-host.t.cpp	/^class DummyStrategyInfo2 : public StrategyInfo$/;"	c	namespace:nfd::tests	file:
DummyStreamSender	tests/daemon/face/dummy-stream-sender.hpp	/^  DummyStreamSender()$/;"	f	class:nfd::tests::DummyStreamSender
DummyStreamSender	tests/daemon/face/dummy-stream-sender.hpp	/^class DummyStreamSender : public Dataset$/;"	c	namespace:nfd::tests
DummySubscriber	tests/core/config-file.t.cpp	/^  DummySubscriber(ConfigFile& config,$/;"	f	class:nfd::tests::DummySubscriber
DummySubscriber	tests/core/config-file.t.cpp	/^class DummySubscriber$/;"	c	namespace:nfd::tests	file:
DummyTransport	tests/daemon/face/dummy-transport.hpp	/^  DummyTransport(const std::string& localUri = "dummy:\/\/",$/;"	f	class:nfd::face::tests::DummyTransport
DummyTransport	tests/daemon/face/dummy-transport.hpp	/^class DummyTransport : public Transport$/;"	c	namespace:nfd::face::tests
DuplicateNonceWhere	daemon/table/pit-entry.hpp	/^enum DuplicateNonceWhere {$/;"	g	namespace:nfd::pit
Duration	daemon/fw/retx-suppression-exponential.hpp	/^  typedef time::microseconds Duration;$/;"	t	class:nfd::fw::RetxSuppressionExponential
Duration	daemon/fw/rtt-estimator.hpp	/^  typedef time::microseconds Duration;$/;"	t	class:nfd::RttEstimator
ERROR_FACE_NOT_FOUND	rib/fib-updater.cpp	/^const uint32_t FibUpdater::ERROR_FACE_NOT_FOUND = 410;$/;"	m	class:nfd::rib::FibUpdater	file:
ERROR_FACE_NOT_FOUND	rib/fib-updater.hpp	/^  static const uint32_t ERROR_FACE_NOT_FOUND;$/;"	m	class:nfd::rib::FibUpdater
EVICT_LIMIT	daemon/table/dead-nonce-list.cpp	/^const size_t DeadNonceList::EVICT_LIMIT = (1 << 6);$/;"	m	class:nfd::DeadNonceList	file:
EVICT_LIMIT	daemon/table/dead-nonce-list.hpp	/^  static const size_t EVICT_LIMIT;$/;"	m	class:nfd::DeadNonceList
EXCEED_OPS	tests/limited-io.hpp	/^    EXCEED_OPS,$/;"	e	enum:nfd::tests::LimitedIo::StopReason
EXCEED_TIME	tests/limited-io.hpp	/^    EXCEED_TIME,$/;"	e	enum:nfd::tests::LimitedIo::StopReason
EXCEPTION	tests/limited-io.hpp	/^    EXCEPTION$/;"	e	enum:nfd::tests::LimitedIo::StopReason
EXEC_PREFIX	build/c4che/_cache.py	/^EXEC_PREFIX = '\/usr\/local'$/;"	v
EXPECTED_MARK_COUNT	daemon/table/dead-nonce-list.cpp	/^const size_t DeadNonceList::EXPECTED_MARK_COUNT = 5;$/;"	m	class:nfd::DeadNonceList	file:
EXPECTED_MARK_COUNT	daemon/table/dead-nonce-list.hpp	/^  static const size_t EXPECTED_MARK_COUNT;$/;"	m	class:nfd::DeadNonceList
EXTENSION	websocketpp/websocketpp/processors/hybi13.hpp	/^        EXTENSION = 2,$/;"	e	enum:websocketpp::processor::hybi13::state
EmptyNextHopList	tests/daemon/fw/best-route-strategy2.t.cpp	/^class EmptyNextHopList$/;"	c	namespace:nfd::fw::tests	file:
EndToEndAddresses	tests/daemon/face/udp.t.cpp	/^typedef boost::mpl::list<EndToEndIpv4, EndToEndIpv6> EndToEndAddresses;$/;"	t	namespace:nfd::tests	file:
EndToEndFixture	tests/daemon/face/tcp.t.cpp	/^class EndToEndFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
EndToEndFixture	tests/daemon/face/unix-stream.t.cpp	/^class EndToEndFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
EndToEndFixture	tests/daemon/face/websocket.t.cpp	/^class EndToEndFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
EndToEndIpv4	tests/daemon/face/udp.t.cpp	/^class EndToEndIpv4$/;"	c	namespace:nfd::tests	file:
EndToEndIpv6	tests/daemon/face/udp.t.cpp	/^class EndToEndIpv6$/;"	c	namespace:nfd::tests	file:
Endpoint	daemon/face/tcp-channel.hpp	/^typedef boost::asio::ip::tcp::endpoint Endpoint;$/;"	t	namespace:nfd::tcp
Endpoint	daemon/face/udp-channel.hpp	/^typedef boost::asio::ip::udp::endpoint Endpoint;$/;"	t	namespace:nfd::udp
Endpoint	daemon/face/unix-stream-channel.hpp	/^typedef boost::asio::local::stream_protocol::endpoint Endpoint;$/;"	t	namespace:nfd::unix_stream
Endpoint	daemon/face/websocket-channel.hpp	/^typedef boost::asio::ip::tcp::endpoint Endpoint;$/;"	t	namespace:nfd::websocket
Endpoint	tests/daemon/face/dummy-stream-sender.hpp	/^  typedef typename Protocol::endpoint Endpoint;$/;"	t	class:nfd::tests::DummyStreamSender
EndpointId	daemon/face/transport.hpp	/^  typedef uint64_t EndpointId;$/;"	t	class:nfd::face::Transport
Entry	daemon/table/cs-entry.hpp	/^class Entry$/;"	c	namespace:nfd::cs
Entry	daemon/table/dead-nonce-list.hpp	/^  typedef uint64_t Entry;$/;"	t	class:nfd::DeadNonceList
Entry	daemon/table/fib-entry.cpp	/^Entry::Entry(const Name& prefix)$/;"	f	class:nfd::fib::Entry
Entry	daemon/table/fib-entry.hpp	/^class Entry : noncopyable$/;"	c	namespace:nfd::fib
Entry	daemon/table/measurements-entry.cpp	/^Entry::Entry(const Name& name)$/;"	f	class:nfd::measurements::Entry
Entry	daemon/table/measurements-entry.hpp	/^class Entry : public StrategyInfoHost, noncopyable$/;"	c	namespace:nfd::measurements
Entry	daemon/table/name-tree-entry.cpp	/^Entry::Entry(const Name& name)$/;"	f	class:nfd::name_tree::Entry
Entry	daemon/table/name-tree-entry.hpp	/^class Entry : public enable_shared_from_this<Entry>, noncopyable$/;"	c	namespace:nfd::name_tree
Entry	daemon/table/pit-entry.cpp	/^Entry::Entry(const Interest& interest)$/;"	f	class:nfd::pit::Entry
Entry	daemon/table/pit-entry.hpp	/^class Entry : public StrategyInfoHost, noncopyable$/;"	c	namespace:nfd::pit
Entry	daemon/table/strategy-choice-entry.cpp	/^Entry::Entry(const Name& prefix)$/;"	f	class:nfd::strategy_choice::Entry
Entry	daemon/table/strategy-choice-entry.hpp	/^class Entry : noncopyable$/;"	c	namespace:nfd::strategy_choice
EntryFromEntryImpl	daemon/table/cs.hpp	/^  struct EntryFromEntryImpl$/;"	s	class:nfd::cs::Cs
EntryImpl	daemon/table/cs-entry-impl.cpp	/^EntryImpl::EntryImpl(const Name& name)$/;"	f	class:nfd::cs::EntryImpl
EntryImpl	daemon/table/cs-entry-impl.cpp	/^EntryImpl::EntryImpl(shared_ptr<const Data> data, bool isUnsolicited)$/;"	f	class:nfd::cs::EntryImpl
EntryImpl	daemon/table/cs-entry-impl.hpp	/^class EntryImpl : public Entry$/;"	c	namespace:nfd::cs
EntryInfo	daemon/table/cs-policy-priority-fifo.hpp	/^struct EntryInfo$/;"	s	namespace:nfd::cs::priority_fifo
EntryInfoMapFifo	daemon/table/cs-policy-priority-fifo.hpp	/^typedef std::map<iterator, EntryInfo*, EntryItComparator> EntryInfoMapFifo;$/;"	t	namespace:nfd::cs::priority_fifo
EntryItComparator	daemon/table/cs-policy-lru.hpp	/^struct EntryItComparator$/;"	s	namespace:nfd::cs::lru
EntryItComparator	daemon/table/cs-policy-priority-fifo.hpp	/^struct EntryItComparator$/;"	s	namespace:nfd::cs::priority_fifo
EntryPredicate	daemon/table/measurements.hpp	/^typedef std::function<bool(const Entry&)> EntryPredicate;$/;"	t	namespace:nfd::measurements
EntrySelector	daemon/table/name-tree.hpp	/^typedef function<bool (const Entry& entry)> EntrySelector;$/;"	t	namespace:nfd::name_tree
EntrySubTreeSelector	daemon/table/name-tree.hpp	/^typedef function<std::pair<bool,bool> (const Entry& entry)> EntrySubTreeSelector;$/;"	t	namespace:nfd::name_tree
EntryWithStrategyInfo	daemon/table/measurements.hpp	/^class EntryWithStrategyInfo$/;"	c	namespace:nfd::measurements
EnumerationFixture	tests/daemon/table/name-tree.t.cpp	/^  EnumerationFixture()$/;"	f	class:nfd::tests::EnumerationFixture
EnumerationFixture	tests/daemon/table/name-tree.t.cpp	/^class EnumerationFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
EnumerationVerifier	tests/daemon/table/name-tree.t.cpp	/^  EnumerationVerifier(Enumerable&& enumerable)$/;"	f	class:nfd::tests::EnumerationVerifier
EnumerationVerifier	tests/daemon/table/name-tree.t.cpp	/^class EnumerationVerifier : noncopyable$/;"	c	namespace:nfd::tests	file:
Error	core/config-file.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::ConfigFile::Error
Error	core/config-file.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::ConfigFile
Error	core/logger-factory.hpp	/^    Error(const std::string& error)$/;"	f	class:nfd::LoggerFactory::Error
Error	core/logger-factory.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::LoggerFactory
Error	core/privilege-helper.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::PrivilegeHelper::Error
Error	core/privilege-helper.hpp	/^  class Error$/;"	c	class:nfd::PrivilegeHelper
Error	daemon/face/ethernet-face.hpp	/^    Error(const std::string& what) : Face::Error(what) {}$/;"	f	struct:nfd::EthernetFace::Error
Error	daemon/face/ethernet-face.hpp	/^  struct Error : public Face::Error$/;"	s	class:nfd::EthernetFace
Error	daemon/face/ethernet-factory.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::EthernetFactory::Error
Error	daemon/face/ethernet-factory.hpp	/^  class Error : public ProtocolFactory::Error$/;"	c	class:nfd::EthernetFactory
Error	daemon/face/face.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::Face::Error
Error	daemon/face/face.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::Face
Error	daemon/face/protocol-factory.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::ProtocolFactory::Error
Error	daemon/face/protocol-factory.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::ProtocolFactory
Error	daemon/face/tcp-factory.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::TcpFactory::Error
Error	daemon/face/tcp-factory.hpp	/^  class Error : public ProtocolFactory::Error$/;"	c	class:nfd::TcpFactory
Error	daemon/face/udp-factory.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::UdpFactory::Error
Error	daemon/face/udp-factory.hpp	/^  class Error : public ProtocolFactory::Error$/;"	c	class:nfd::UdpFactory
Error	daemon/face/unix-stream-channel.hpp	/^    Error(const std::string& what) : std::runtime_error(what) {}$/;"	f	struct:nfd::UnixStreamChannel::Error
Error	daemon/face/unix-stream-channel.hpp	/^  struct Error : public std::runtime_error$/;"	s	class:nfd::UnixStreamChannel
Error	daemon/face/unix-stream-factory.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::UnixStreamFactory::Error
Error	daemon/face/unix-stream-factory.hpp	/^  class Error : public ProtocolFactory::Error$/;"	c	class:nfd::UnixStreamFactory
Error	daemon/face/websocket-factory.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::WebSocketFactory::Error
Error	daemon/face/websocket-factory.hpp	/^  class Error : public ProtocolFactory::Error$/;"	c	class:nfd::WebSocketFactory
Error	daemon/mgmt/command-validator.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::CommandValidator::Error
Error	daemon/mgmt/command-validator.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::CommandValidator
Error	daemon/mgmt/manager-base.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::ManagerBase::Error
Error	daemon/mgmt/manager-base.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::ManagerBase
Error	rib/auto-prefix-propagator.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::rib::AutoPrefixPropagator::Error
Error	rib/auto-prefix-propagator.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::rib::AutoPrefixPropagator
Error	rib/fib-updater.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::rib::FibUpdater::Error
Error	rib/fib-updater.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::rib::FibUpdater
Error	rib/nrd.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::rib::Nrd::Error
Error	rib/nrd.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::rib::Nrd
Error	rib/rib-manager.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::rib::RibManager::Error
Error	rib/rib-manager.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::rib::RibManager
Error	tests/daemon/face/dummy-stream-sender.hpp	/^    Error(const std::string& what)$/;"	f	class:nfd::tests::DummyStreamSender::Error
Error	tests/daemon/face/dummy-stream-sender.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfd::tests::DummyStreamSender
Error	tools/ndn-autoconfig/base-dns.hpp	/^    Error(const std::string& what)$/;"	f	class:ndn::tools::autoconfig::BaseDns::Error
Error	tools/ndn-autoconfig/base-dns.hpp	/^  class Error : public std::runtime_error$/;"	c	class:ndn::tools::autoconfig::BaseDns
Error	tools/ndn-autoconfig/base.hpp	/^    Error(const std::string& what)$/;"	f	class:ndn::tools::autoconfig::Base::Error
Error	tools/ndn-autoconfig/base.hpp	/^  class Error : public std::runtime_error$/;"	c	class:ndn::tools::autoconfig::Base
Error	tools/ndn-autoconfig/main.cpp	/^    Error(const std::string& what)$/;"	f	class:ndn::tools::NdnAutoconfig::Error
Error	tools/ndn-autoconfig/main.cpp	/^  class Error : public std::runtime_error$/;"	c	class:ndn::tools::NdnAutoconfig	file:
Error	tools/nfdc.hpp	/^    Error(const std::string& what)$/;"	f	class:nfdc::Nfdc::Error
Error	tools/nfdc.hpp	/^  class Error : public std::runtime_error$/;"	c	class:nfdc::Nfdc
EthernetFace	daemon/face/ethernet-face.cpp	/^EthernetFace::EthernetFace(boost::asio::posix::stream_descriptor socket,$/;"	f	class:nfd::EthernetFace
EthernetFace	daemon/face/ethernet-face.hpp	/^class EthernetFace : public Face$/;"	c	namespace:nfd
EthernetFactory	daemon/face/ethernet-factory.hpp	/^class EthernetFactory : public ProtocolFactory$/;"	c	namespace:nfd
ExtractLocalControlParametersResult	daemon/mgmt/face-manager.hpp	/^  struct ExtractLocalControlParametersResult$/;"	s	class:nfd::FaceManager
FACEID_CONTENT_STORE	daemon/face/face.hpp	/^const FaceId FACEID_CONTENT_STORE = 254;$/;"	m	namespace:nfd
FACEID_CONTENT_STORE	daemon/face/lp-face.hpp	/^const FaceId FACEID_CONTENT_STORE = 254;$/;"	m	namespace:nfd::face
FACEID_INTERNAL_FACE	daemon/face/face.hpp	/^const FaceId FACEID_INTERNAL_FACE = 1;$/;"	m	namespace:nfd
FACEID_INTERNAL_FACE	daemon/face/lp-face.hpp	/^const FaceId FACEID_INTERNAL_FACE = 1;$/;"	m	namespace:nfd::face
FACEID_NULL	daemon/face/face.hpp	/^const FaceId FACEID_NULL = 255;$/;"	m	namespace:nfd
FACEID_NULL	daemon/face/lp-face.hpp	/^const FaceId FACEID_NULL = 255;$/;"	m	namespace:nfd::face
FACEID_RESERVED_MAX	daemon/face/face.hpp	/^const FaceId FACEID_RESERVED_MAX = 255;$/;"	m	namespace:nfd
FACEID_RESERVED_MAX	daemon/face/lp-face.hpp	/^const FaceId FACEID_RESERVED_MAX = 255;$/;"	m	namespace:nfd::face
FACES_LIST_DATASET_PREFIX	rib/rib-manager.cpp	/^const Name RibManager::FACES_LIST_DATASET_PREFIX = "\/localhost\/nfd\/faces\/list";$/;"	m	class:nfd::rib::RibManager	file:
FACES_LIST_DATASET_PREFIX	rib/rib-manager.hpp	/^  static const Name FACES_LIST_DATASET_PREFIX;$/;"	m	class:nfd::rib::RibManager
FAILED	daemon/face/transport.hpp	/^  FAILED, \/\/\/< the transport is being closed due to a failure$/;"	m	class:nfd::face::TransportState
FATAL_ERROR	websocketpp/websocketpp/processors/hybi00.hpp	/^        FATAL_ERROR = 3$/;"	e	enum:websocketpp::processor::hybi00::state
FATAL_ERROR	websocketpp/websocketpp/processors/hybi13.hpp	/^        FATAL_ERROR = 5$/;"	e	enum:websocketpp::processor::hybi13::state
FIND_ALL_MATCHES_TYPE	daemon/table/name-tree.hpp	/^    FIND_ALL_MATCHES_TYPE$/;"	e	enum:nfd::NameTree::IteratorType
FORWARD	daemon/fw/retx-suppression.hpp	/^    FORWARD,$/;"	e	enum:nfd::fw::RetxSuppression::Result
FULL_ENUMERATE_TYPE	daemon/table/name-tree.hpp	/^    FULL_ENUMERATE_TYPE,$/;"	e	enum:nfd::NameTree::IteratorType
Face	daemon/face/face.cpp	/^Face::Face(const FaceUri& remoteUri, const FaceUri& localUri, bool isLocal, bool isMultiAccess)$/;"	f	class:nfd::Face
Face	daemon/face/face.hpp	/^class Face : noncopyable, public enable_shared_from_this<Face>$/;"	c	namespace:nfd
FaceCounters	daemon/face/face-counters.hpp	/^class FaceCounters : public NetworkLayerCounters, public LinkLayerCounters$/;"	c	namespace:nfd
FaceCreateFixture	tests/daemon/face/tcp.t.cpp	/^class FaceCreateFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
FaceCreateFixture	tests/daemon/face/udp.t.cpp	/^class FaceCreateFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
FaceCreateTimeoutFixture	tests/daemon/face/tcp.t.cpp	/^class FaceCreateTimeoutFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
FaceCreatedCallback	daemon/face/channel.hpp	/^  typedef function<void(const shared_ptr<Face>& newFace)> FaceCreatedCallback;$/;"	t	class:nfd::Channel
FaceCreatedCallback	daemon/face/protocol-factory.hpp	/^typedef function<void(const shared_ptr<Face>& newFace)> FaceCreatedCallback;$/;"	t	namespace:nfd
FaceCreationFailedCallback	daemon/face/protocol-factory.hpp	/^typedef function<void(const std::string& reason)> FaceCreationFailedCallback;$/;"	t	namespace:nfd
FaceFailTestFace	tests/daemon/face/face.t.cpp	/^  FaceFailTestFace()$/;"	f	class:nfd::tests::FaceFailTestFace
FaceFailTestFace	tests/daemon/face/face.t.cpp	/^class FaceFailTestFace : public DummyFace$/;"	c	namespace:nfd::tests	file:
FaceHistory	tests/daemon/face/face-history.hpp	/^  FaceHistory(Face& face)$/;"	f	class:nfd::tests::FaceHistory
FaceHistory	tests/daemon/face/face-history.hpp	/^  FaceHistory(Face& face, LimitedIo& limitedIo)$/;"	f	class:nfd::tests::FaceHistory
FaceHistory	tests/daemon/face/face-history.hpp	/^class FaceHistory : noncopyable$/;"	c	namespace:nfd::tests
FaceId	daemon/face/face.hpp	/^typedef int FaceId;$/;"	t	namespace:nfd
FaceId	daemon/face/lp-face.hpp	/^typedef uint64_t FaceId;$/;"	t	namespace:nfd::face
FaceIdFetcher	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::FaceIdFetcher(ndn::Face& face,$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
FaceIdFetcher	tools/nfdc.hpp	/^  class FaceIdFetcher$/;"	c	class:nfdc::Nfdc
FaceIdSet	rib/rib-manager.hpp	/^  typedef std::set<uint64_t> FaceIdSet;$/;"	t	class:nfd::rib::RibManager
FaceInfo	daemon/fw/access-strategy.cpp	/^AccessStrategy::FaceInfo::FaceInfo()$/;"	f	class:nfd::fw::AccessStrategy::FaceInfo
FaceInfo	daemon/fw/access-strategy.hpp	/^  class FaceInfo$/;"	c	class:nfd::fw::AccessStrategy
FaceInfoTable	daemon/fw/access-strategy.hpp	/^  typedef std::unordered_map<FaceId, FaceInfo> FaceInfoTable;$/;"	t	class:nfd::fw::AccessStrategy
FaceLogHelper	daemon/face/face-log.hpp	/^  FaceLogHelper(const T& obj1)$/;"	f	class:nfd::face::FaceLogHelper
FaceLogHelper	daemon/face/face-log.hpp	/^class FaceLogHelper$/;"	c	namespace:nfd::face
FaceLookupTable	rib/rib.hpp	/^  typedef std::map<uint64_t, std::list<shared_ptr<RibEntry>>> FaceLookupTable;$/;"	t	class:nfd::rib::Rib
FaceManager	daemon/mgmt/face-manager.cpp	/^FaceManager::FaceManager(FaceTable& faceTable,$/;"	f	class:nfd::FaceManager
FaceManager	daemon/mgmt/face-manager.hpp	/^class FaceManager : public ManagerBase$/;"	c	namespace:nfd
FaceManagerFixture	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  FaceManagerFixture()$/;"	f	class:nfd::tests::FaceManagerFixture
FaceManagerFixture	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class FaceManagerFixture : public UnitTestTimeFixture$/;"	c	namespace:nfd::tests	file:
FaceManagerFixture	tests/daemon/mgmt/face-manager.t.cpp	/^  FaceManagerFixture()$/;"	f	class:nfd::tests::FaceManagerFixture
FaceManagerFixture	tests/daemon/mgmt/face-manager.t.cpp	/^class FaceManagerFixture : public ManagerCommonFixture$/;"	c	namespace:nfd::tests	file:
FaceManagerNode	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  FaceManagerNode(ndn::KeyChain& keyChain, const std::string& port = "6363")$/;"	f	class:nfd::tests::FaceManagerNode
FaceManagerNode	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class FaceManagerNode$/;"	c	namespace:nfd::tests	file:
FaceManagerProcessConfigFixture	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^  FaceManagerProcessConfigFixture()$/;"	f	class:nfd::tests::FaceManagerProcessConfigFixture
FaceManagerProcessConfigFixture	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^class FaceManagerProcessConfigFixture : public ManagerCommonFixture$/;"	c	namespace:nfd::tests	file:
FaceMap	daemon/fw/face-table.hpp	/^  typedef std::map<FaceId, shared_ptr<Face>> FaceMap;$/;"	t	class:nfd::FaceTable
FaceRecord	daemon/table/pit-face-record.cpp	/^FaceRecord::FaceRecord(shared_ptr<Face> face)$/;"	f	class:nfd::pit::FaceRecord
FaceRecord	daemon/table/pit-face-record.hpp	/^class FaceRecord : public StrategyInfoHost$/;"	c	namespace:nfd::pit
FaceState	daemon/face/lp-face.hpp	/^typedef TransportState FaceState;$/;"	t	namespace:nfd::face
FaceStatus	tests/daemon/mgmt/face-manager.t.cpp	/^  FaceStatus(const ndn::nfd::FaceStatus& s)$/;"	f	class:nfd::tests::FaceStatus
FaceStatus	tests/daemon/mgmt/face-manager.t.cpp	/^class FaceStatus : public ndn::nfd::FaceStatus$/;"	c	namespace:nfd::tests	file:
FaceTable	daemon/fw/face-table.cpp	/^FaceTable::FaceTable(Forwarder& forwarder)$/;"	f	class:nfd::FaceTable
FaceTable	daemon/fw/face-table.hpp	/^class FaceTable : noncopyable$/;"	c	namespace:nfd
FaceTableAccessTestStrategy	tests/daemon/fw/strategy.t.cpp	/^  FaceTableAccessTestStrategy(Forwarder& forwarder)$/;"	f	class:nfd::fw::tests::FaceTableAccessTestStrategy
FaceTableAccessTestStrategy	tests/daemon/fw/strategy.t.cpp	/^class FaceTableAccessTestStrategy : public DummyStrategy$/;"	c	namespace:nfd::fw::tests	file:
FaceTransitions	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^                    mpl::pair<mpl::pair<UdpFacePermanent, UdpFacePersistent>, UdpFacePermanent>> FaceTransitions;$/;"	t	namespace:nfd::tests	file:
Faces	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^                    mpl::pair<UdpFaceCannotConnect, Failure<408>>> Faces;$/;"	t	namespace:nfd::tests	file:
FactoryErrorCheck	tests/daemon/face/udp.t.cpp	/^class FactoryErrorCheck : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
Failure	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class Failure$/;"	c	namespace:nfd::tests	file:
FailureCallback	tools/nfdc.hpp	/^    typedef std::function<void(const std::string&)> FailureCallback;$/;"	t	class:nfdc::Nfdc::FaceIdFetcher
FakeNetworkInterfaceFixture	tests/core/network-interface.t.cpp	/^  FakeNetworkInterfaceFixture()$/;"	f	class:nfd::tests::FakeNetworkInterfaceFixture
FakeNetworkInterfaceFixture	tests/core/network-interface.t.cpp	/^class FakeNetworkInterfaceFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
FakeNetworkInterfaceFixture	tests/daemon/face/tcp.t.cpp	/^  FakeNetworkInterfaceFixture()$/;"	f	class:nfd::tests::FakeNetworkInterfaceFixture
FakeNetworkInterfaceFixture	tests/daemon/face/tcp.t.cpp	/^class FakeNetworkInterfaceFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
FakeNetworkInterfaceFixture	tests/daemon/face/udp.t.cpp	/^  FakeNetworkInterfaceFixture()$/;"	f	class:nfd::tests::FakeNetworkInterfaceFixture
FakeNetworkInterfaceFixture	tests/daemon/face/udp.t.cpp	/^class FakeNetworkInterfaceFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
Fetch32	core/city-hash.cpp	/^static uint32 Fetch32(const char *p) {$/;"	f	file:
Fetch64	core/city-hash.cpp	/^static uint64 Fetch64(const char *p) {$/;"	f	file:
Fib	daemon/table/fib.cpp	/^Fib::Fib(NameTree& nameTree)$/;"	f	class:nfd::Fib
Fib	daemon/table/fib.hpp	/^class Fib : noncopyable$/;"	c	namespace:nfd
FibEntry	tests/daemon/mgmt/fib-manager.t.cpp	/^  FibEntry(const ndn::nfd::FibEntry& entry)$/;"	f	class:nfd::tests::FibEntry
FibEntry	tests/daemon/mgmt/fib-manager.t.cpp	/^class FibEntry : public ndn::nfd::FibEntry$/;"	c	namespace:nfd::tests	file:
FibManager	daemon/mgmt/fib-manager.cpp	/^FibManager::FibManager(Fib& fib,$/;"	f	class:nfd::FibManager
FibManager	daemon/mgmt/fib-manager.hpp	/^class FibManager : public ManagerBase$/;"	c	namespace:nfd
FibManagerFixture	tests/daemon/mgmt/fib-manager.t.cpp	/^  FibManagerFixture()$/;"	f	class:nfd::tests::FibManagerFixture
FibManagerFixture	tests/daemon/mgmt/fib-manager.t.cpp	/^class FibManagerFixture : public ManagerCommonFixture$/;"	c	namespace:nfd::tests	file:
FibUpdate	rib/fib-update.hpp	/^  FibUpdate()$/;"	f	class:nfd::rib::FibUpdate
FibUpdate	rib/fib-update.hpp	/^class FibUpdate$/;"	c	namespace:nfd::rib
FibUpdateFailureCallback	rib/fib-updater.hpp	/^  typedef function<void(uint32_t code, const std::string& error)> FibUpdateFailureCallback;$/;"	t	class:nfd::rib::FibUpdater
FibUpdateList	rib/fib-updater.hpp	/^  typedef std::list<FibUpdate> FibUpdateList;$/;"	t	class:nfd::rib::FibUpdater
FibUpdateSuccessCallback	rib/fib-updater.hpp	/^  typedef function<void(RibUpdateList inheritedRoutes)> FibUpdateSuccessCallback;$/;"	t	class:nfd::rib::FibUpdater
FibUpdater	rib/fib-updater.cpp	/^FibUpdater::FibUpdater(Rib& rib, ndn::nfd::Controller& controller)$/;"	f	class:nfd::rib::FibUpdater
FibUpdater	rib/fib-updater.hpp	/^class FibUpdater : noncopyable$/;"	c	namespace:nfd::rib
FibUpdatesFixture	tests/rib/fib-updates-common.hpp	/^  FibUpdatesFixture()$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
FibUpdatesFixture	tests/rib/fib-updates-common.hpp	/^class FibUpdatesFixture : public nfd::tests::BaseFixture$/;"	c	namespace:nfd::rib::tests
FindFixture	tests/daemon/table/cs.t.cpp	/^class FindFixture : protected BaseFixture$/;"	c	namespace:nfd::cs::tests	file:
ForwardRange	daemon/fw/face-table.hpp	/^  typedef boost::select_second_const_range<FaceMap> ForwardRange;$/;"	t	class:nfd::FaceTable
Forwarder	daemon/fw/forwarder.cpp	/^Forwarder::Forwarder()$/;"	f	class:nfd::Forwarder
Forwarder	daemon/fw/forwarder.hpp	/^class Forwarder$/;"	c	namespace:nfd
ForwarderCounters	daemon/fw/forwarder-counters.hpp	/^class ForwarderCounters : public NetworkLayerCounters$/;"	c	namespace:nfd
ForwarderStatusManager	daemon/mgmt/forwarder-status-manager.cpp	/^ForwarderStatusManager::ForwarderStatusManager(Forwarder& forwarder, Dispatcher& dispatcher)$/;"	f	class:nfd::ForwarderStatusManager
ForwarderStatusManager	daemon/mgmt/forwarder-status-manager.hpp	/^class ForwarderStatusManager : noncopyable$/;"	c	namespace:nfd
GIT	waf	/^GIT="2a098b1e9bc626c19cbd47c1f670758c17edf54c"$/;"	v
GOOD	websocketpp/websocketpp/connection.hpp	/^        GOOD = 0,           \/\/ no failure yet!$/;"	e	enum:websocketpp::session::fail::status::value
GeneralConfigSectionFixture	tests/daemon/mgmt/general-config-section.t.cpp	/^class GeneralConfigSectionFixture : public BaseFixture$/;"	c	namespace:nfd::general::tests	file:
GenericLinkService	daemon/face/generic-link-service.cpp	/^GenericLinkService::GenericLinkService(const GenericLinkService::Options& options)$/;"	f	class:nfd::face::GenericLinkService
GenericLinkService	daemon/face/generic-link-service.hpp	/^class GenericLinkService : public LinkService$/;"	c	namespace:nfd::face
GenericLinkServiceFixture	tests/daemon/face/generic-link-service.t.cpp	/^  GenericLinkServiceFixture()$/;"	f	class:nfd::face::tests::GenericLinkServiceFixture
GenericLinkServiceFixture	tests/daemon/face/generic-link-service.t.cpp	/^class GenericLinkServiceFixture : public BaseFixture$/;"	c	namespace:nfd::face::tests	file:
GlobalConfigurationFixture	tests/global-configuration.cpp	/^  GlobalConfigurationFixture()$/;"	f	class:nfd::tests::GlobalConfigurationFixture
GlobalConfigurationFixture	tests/global-configuration.cpp	/^class GlobalConfigurationFixture$/;"	c	namespace:nfd::tests	file:
GuessFromIdentityName	tools/ndn-autoconfig/guess-from-identity-name.cpp	/^GuessFromIdentityName::GuessFromIdentityName(Face& face, KeyChain& keyChain,$/;"	f	class:ndn::tools::autoconfig::GuessFromIdentityName
GuessFromIdentityName	tools/ndn-autoconfig/guess-from-identity-name.hpp	/^class GuessFromIdentityName : public BaseDns$/;"	c	namespace:ndn::tools::autoconfig
GuessFromSearchDomains	tools/ndn-autoconfig/guess-from-search-domains.cpp	/^GuessFromSearchDomains::GuessFromSearchDomains(Face& face, KeyChain& keyChain,$/;"	f	class:ndn::tools::autoconfig::GuessFromSearchDomains
GuessFromSearchDomains	tools/ndn-autoconfig/guess-from-search-domains.hpp	/^class GuessFromSearchDomains : public BaseDns$/;"	c	namespace:ndn::tools::autoconfig
HAVE_ASIO_PCAP_SUPPORT	build/c4che/_cache.py	/^HAVE_ASIO_PCAP_SUPPORT = True$/;"	v
HAVE_ASIO_PCAP_SUPPORT	build/config.hpp	18;"	d
HAVE_CXX_CLASS_FINAL	build/config.hpp	10;"	d
HAVE_CXX_FINAL	build/config.hpp	9;"	d
HAVE_CXX_OVERRIDE	build/config.hpp	8;"	d
HAVE_IFADDRS_H	build/config.hpp	14;"	d
HAVE_IS_DEFAULT_CONSTRUCTIBLE	build/c4che/_cache.py	/^HAVE_IS_DEFAULT_CONSTRUCTIBLE = True$/;"	v
HAVE_IS_DEFAULT_CONSTRUCTIBLE	build/config.hpp	6;"	d
HAVE_IS_MOVE_CONSTRUCTIBLE	build/c4che/_cache.py	/^HAVE_IS_MOVE_CONSTRUCTIBLE = True$/;"	v
HAVE_IS_MOVE_CONSTRUCTIBLE	build/config.hpp	7;"	d
HAVE_LIBPCAP	build/c4che/_cache.py	/^HAVE_LIBPCAP = True$/;"	v
HAVE_LIBPCAP	build/config.hpp	19;"	d
HAVE_LIBRESOLV	build/c4che/_cache.py	/^HAVE_LIBRESOLV = True$/;"	v
HAVE_LIBRESOLV	build/config.hpp	12;"	d
HAVE_LIBRT	build/c4che/_cache.py	/^HAVE_LIBRT = True$/;"	v
HAVE_LIBRT	build/config.hpp	11;"	d
HAVE_NDN_CXX	build/c4che/_cache.py	/^HAVE_NDN_CXX = 1$/;"	v
HAVE_PCAP_SET_IMMEDIATE_MODE	build/config.hpp	20;"	d
HAVE_PRIVILEGE_DROP_AND_ELEVATE	build/config.hpp	13;"	d
HAVE_UNIX_SOCKETS	build/c4che/_cache.py	/^HAVE_UNIX_SOCKETS = True$/;"	v
HAVE_UNIX_SOCKETS	build/config.hpp	15;"	d
HAVE_WEBSOCKET	build/c4che/_cache.py	/^HAVE_WEBSOCKET = True$/;"	v
HAVE_WEBSOCKET	build/config.hpp	16;"	d
HEADER	websocketpp/websocketpp/processors/hybi00.hpp	/^        HEADER = 0,$/;"	e	enum:websocketpp::processor::hybi00::state
HEADERS	websocketpp/websocketpp/http/response.hpp	/^        HEADERS = 1,$/;"	e	enum:websocketpp::http::parser::response::state
HEADER_BASIC	websocketpp/websocketpp/processors/hybi13.hpp	/^        HEADER_BASIC = 0,$/;"	e	enum:websocketpp::processor::hybi13::state
HEADER_EXTENDED	websocketpp/websocketpp/processors/hybi13.hpp	/^        HEADER_EXTENDED = 1,$/;"	e	enum:websocketpp::processor::hybi13::state
HTMLDIR	build/c4che/_cache.py	/^HTMLDIR = '\/usr\/local\/share\/doc\/nfd'$/;"	v
HTTP_CONSTANTS_HPP	websocketpp/websocketpp/http/constants.hpp	29;"	d
HTTP_PARSER_HPP	websocketpp/websocketpp/http/parser.hpp	29;"	d
HTTP_PARSER_IMPL_HPP	websocketpp/websocketpp/http/impl/parser.hpp	29;"	d
HTTP_PARSER_REQUEST_HPP	websocketpp/websocketpp/http/request.hpp	29;"	d
HTTP_PARSER_REQUEST_IMPL_HPP	websocketpp/websocketpp/http/impl/request.hpp	29;"	d
HTTP_PARSER_RESPONSE_HPP	websocketpp/websocketpp/http/response.hpp	29;"	d
HTTP_PARSER_RESPONSE_IMPL_HPP	websocketpp/websocketpp/http/impl/response.hpp	29;"	d
Hash128to64	core/city-hash.hpp	/^inline uint64 Hash128to64(const uint128& x) {$/;"	f
Hash32	daemon/table/name-tree.cpp	/^class Hash32$/;"	c	namespace:nfd::name_tree	file:
Hash32Len0to4	core/city-hash.cpp	/^static uint32 Hash32Len0to4(const char *s, size_t len) {$/;"	f	file:
Hash32Len13to24	core/city-hash.cpp	/^static uint32 Hash32Len13to24(const char *s, size_t len) {$/;"	f	file:
Hash32Len5to12	core/city-hash.cpp	/^static uint32 Hash32Len5to12(const char *s, size_t len) {$/;"	f	file:
Hash64	daemon/table/name-tree.cpp	/^class Hash64$/;"	c	namespace:nfd::name_tree	file:
Hash64	daemon/table/name-tree.cpp	/^typedef boost::mpl::if_c<sizeof(size_t) >= 8, Hash64, Hash32>::type CityHash;$/;"	t	namespace:nfd::name_tree	file:
HashLen0to16	core/city-hash.cpp	/^static uint64 HashLen0to16(const char *s, size_t len) {$/;"	f	file:
HashLen16	core/city-hash.cpp	/^static uint64 HashLen16(uint64 u, uint64 v) {$/;"	f	file:
HashLen16	core/city-hash.cpp	/^static uint64 HashLen16(uint64 u, uint64 v, uint64 mul) {$/;"	f	file:
HashLen17to32	core/city-hash.cpp	/^static uint64 HashLen17to32(const char *s, size_t len) {$/;"	f	file:
HashLen33to64	core/city-hash.cpp	/^static uint64 HashLen33to64(const char *s, size_t len) {$/;"	f	file:
Hashtable	daemon/table/dead-nonce-list.hpp	/^  typedef Index::nth_index<1>::type Hashtable;$/;"	t	class:nfd::DeadNonceList
HitCallback	daemon/table/cs.hpp	/^  typedef std::function<void(const Interest&, const Data& data)> HitCallback;$/;"	t	class:nfd::cs::Cs
IDLE_DURATION	tests/daemon/face/ndnlp.t.cpp	/^  static const time::nanoseconds IDLE_DURATION;$/;"	m	class:nfd::ndnlp::tests::ReassembleFixture	file:
INCLUDEDIR	build/c4che/_cache.py	/^INCLUDEDIR = '\/usr\/local\/include'$/;"	v
INCLUDES_BOOST	build/c4che/_cache.py	/^INCLUDES_BOOST = '\/usr\/include'$/;"	v
INCLUDES_NDN_CXX	build/c4che/_cache.py	/^INCLUDES_NDN_CXX = ['\/usr\/local\/include']$/;"	v
INCLUDES_WEBSOCKET	build/c4che/_cache.py	/^INCLUDES_WEBSOCKET = '\/home\/zzfan\/Documents\/NDN\/NFD\/websocketpp'$/;"	v
INFODIR	build/c4che/_cache.py	/^INFODIR = '\/usr\/local\/share\/info'$/;"	v
INITIAL_CAPACITY	daemon/table/dead-nonce-list.cpp	/^const size_t DeadNonceList::INITIAL_CAPACITY = (1 << 7);$/;"	m	class:nfd::DeadNonceList	file:
INITIAL_CAPACITY	daemon/table/dead-nonce-list.hpp	/^  static const size_t INITIAL_CAPACITY;$/;"	m	class:nfd::DeadNonceList
INITIAL_PREDICTION	daemon/fw/ncc-strategy.cpp	/^const time::microseconds NccStrategy::MeasurementsEntryInfo::INITIAL_PREDICTION =$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo	file:
INITIAL_PREDICTION	daemon/fw/ncc-strategy.hpp	/^    static const time::microseconds INITIAL_PREDICTION;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
INSTALL	waf	/^INSTALL=''$/;"	v
INTERNAL_CONFIG	daemon/nfd.cpp	/^static const std::string INTERNAL_CONFIG = "internal:\/\/nfd.conf";$/;"	m	namespace:nfd	file:
INTERNAL_CONFIG	rib/nrd.cpp	/^static const std::string INTERNAL_CONFIG = "internal:\/\/nfd.conf";$/;"	m	namespace:nfd::rib	file:
INTERNAL_ERROR	websocketpp/websocketpp/processors/base.hpp	/^    INTERNAL_ERROR = 1, \/\/ Error was a logic error internal to WebSocket++$/;"	e	enum:websocketpp::processor::error_cat::value
INVALID_FACEID	daemon/face/face.hpp	/^const FaceId INVALID_FACEID = -1;$/;"	m	namespace:nfd
INVALID_FACEID	daemon/face/lp-face.hpp	/^const FaceId INVALID_FACEID = 0;$/;"	m	namespace:nfd::face
INVALID_N_COMPONENTS	tests/rib/auto-prefix-propagator.t.cpp	/^    INVALID_N_COMPONENTS,$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture::CheckRequestResult	file:
INVALID_PARAMETERS	tests/rib/auto-prefix-propagator.t.cpp	/^    INVALID_PARAMETERS,$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture::CheckRequestResult	file:
INVALID_RESPONSE	tests/daemon/mgmt/manager-common-fixture.hpp	/^    INVALID_RESPONSE,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
IdentityManagementFixture	tests/identity-management-fixture.cpp	/^IdentityManagementFixture::IdentityManagementFixture()$/;"	f	class:nfd::tests::IdentityManagementFixture
IdentityManagementFixture	tests/identity-management-fixture.hpp	/^class IdentityManagementFixture : public virtual BaseFixture$/;"	c	namespace:nfd::tests
InClassLogger	tests/core/logger.t.cpp	/^  InClassLogger()$/;"	f	class:nfd::tests::InClassLogger
InClassLogger	tests/core/logger.t.cpp	/^class InClassLogger : public LoggerFixture$/;"	c	namespace:nfd::tests	file:
InClassTemplateLogger	tests/core/logger.t.cpp	/^  InClassTemplateLogger()$/;"	f	class:nfd::tests::InClassTemplateLogger
InClassTemplateLogger	tests/core/logger.t.cpp	/^class InClassTemplateLogger : public LoggerFixture$/;"	c	namespace:nfd::tests	file:
InRecord	daemon/table/pit-in-record.cpp	/^InRecord::InRecord(shared_ptr<Face> face)$/;"	f	class:nfd::pit::InRecord
InRecord	daemon/table/pit-in-record.hpp	/^class InRecord : public FaceRecord$/;"	c	namespace:nfd::pit
InRecordCollection	daemon/table/pit-entry.hpp	/^typedef std::list< InRecord>  InRecordCollection;$/;"	t	namespace:nfd::pit
Index	daemon/table/dead-nonce-list.hpp	/^  > Index;$/;"	t	class:nfd::DeadNonceList
InterestHandler	tests/daemon/mgmt/manager-common-fixture.hpp	/^  typedef std::function<void(shared_ptr<Interest> interest)> InterestHandler;$/;"	t	class:nfd::tests::ManagerCommonFixture
InterfacesFixture	tests/daemon/face/ethernet.t.cpp	/^  InterfacesFixture()$/;"	f	class:nfd::tests::InterfacesFixture
InterfacesFixture	tests/daemon/face/ethernet.t.cpp	/^class InterfacesFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
InternalClientTransport	daemon/face/internal-transport.hpp	/^class InternalClientTransport : public ndn::Transport, public InternalTransportBase$/;"	c	namespace:nfd::face
InternalFaceFixture	tests/daemon/face/internal-face.t.cpp	/^  InternalFaceFixture()$/;"	f	class:nfd::face::tests::InternalFaceFixture
InternalFaceFixture	tests/daemon/face/internal-face.t.cpp	/^class InternalFaceFixture : public UnitTestTimeFixture$/;"	c	namespace:nfd::face::tests	file:
InternalForwarderTransport	daemon/face/internal-transport.cpp	/^InternalForwarderTransport::InternalForwarderTransport($/;"	f	class:nfd::face::InternalForwarderTransport
InternalForwarderTransport	daemon/face/internal-transport.hpp	/^class InternalForwarderTransport : public face::Transport, public InternalTransportBase$/;"	c	namespace:nfd::face
InternalTransportBase	daemon/face/internal-transport.hpp	/^class InternalTransportBase$/;"	c	namespace:nfd::face
IteratorType	daemon/table/name-tree.hpp	/^  enum IteratorType {$/;"	g	class:nfd::NameTree
LIBDIR	build/c4che/_cache.py	/^LIBDIR = '\/usr\/local\/lib'$/;"	v
LIBEXECDIR	build/c4che/_cache.py	/^LIBEXECDIR = '\/usr\/local\/libexec'$/;"	v
LIBPATH_BOOST	build/c4che/_cache.py	/^LIBPATH_BOOST = ['\/usr\/lib\/i386-linux-gnu']$/;"	v
LIBPATH_NDN_CXX	build/c4che/_cache.py	/^LIBPATH_NDN_CXX = ['\/usr\/local\/lib']$/;"	v
LIBPATH_ST	build/c4che/_cache.py	/^LIBPATH_ST = '-L%s'$/;"	v
LIB_BOOST	build/c4che/_cache.py	/^LIB_BOOST = ['boost_system', 'boost_chrono', 'boost_program_options', 'boost_random', 'boost_thread']$/;"	v
LIB_LIBPCAP	build/c4che/_cache.py	/^LIB_LIBPCAP = ['pcap']$/;"	v
LIB_LIBRESOLV	build/c4che/_cache.py	/^LIB_LIBRESOLV = ['resolv']$/;"	v
LIB_LIBRT	build/c4che/_cache.py	/^LIB_LIBRT = ['rt']$/;"	v
LIB_NDN_CXX	build/c4che/_cache.py	/^LIB_NDN_CXX = ['ndn-cxx', 'boost_system', 'boost_filesystem', 'boost_date_time', 'boost_iostreams', 'boost_regex', 'boost_program_options', 'boost_chrono', 'boost_random', 'cryptopp', 'sqlite3', 'rt', 'pthread']$/;"	v
LIB_ST	build/c4che/_cache.py	/^LIB_ST = '-l%s'$/;"	v
LIFETIME	tests/daemon/table/dead-nonce-list.t.cpp	/^  static const time::nanoseconds LIFETIME;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
LIFETIME	tests/daemon/table/dead-nonce-list.t.cpp	/^const time::nanoseconds PeriodicalInsertionFixture::LIFETIME = time::milliseconds(200);$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
LIKELY	core/city-hash.cpp	101;"	d	file:
LIKELY	core/city-hash.cpp	99;"	d	file:
LINKFLAGS_MACBUNDLE	build/c4che/_cache.py	/^LINKFLAGS_MACBUNDLE = ['-bundle', '-undefined', 'dynamic_lookup']$/;"	v
LINKFLAGS_cxxshlib	build/c4che/_cache.py	/^LINKFLAGS_cxxshlib = ['-shared']$/;"	v
LINKFLAGS_cxxstlib	build/c4che/_cache.py	/^LINKFLAGS_cxxstlib = ['-Wl,-Bstatic']$/;"	v
LINK_CXX	build/c4che/_cache.py	/^LINK_CXX = ['\/usr\/bin\/g++']$/;"	v
LISTENING	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^        LISTENING = 2$/;"	e	enum:websocketpp::transport::asio::endpoint::state
LIST_COMMAND_NCOMPS	rib/rib-manager.cpp	/^const size_t RibManager::LIST_COMMAND_NCOMPS = LIST_COMMAND_PREFIX.size();$/;"	m	class:nfd::rib::RibManager	file:
LIST_COMMAND_NCOMPS	rib/rib-manager.hpp	/^  static const size_t LIST_COMMAND_NCOMPS;$/;"	m	class:nfd::rib::RibManager
LIST_COMMAND_PREFIX	rib/rib-manager.hpp	/^  static const Name LIST_COMMAND_PREFIX;$/;"	m	class:nfd::rib::RibManager
LOCALEDIR	build/c4che/_cache.py	/^LOCALEDIR = '\/usr\/local\/share\/locale'$/;"	v
LOCALHOP_HUB	tools/ndn-autoconfig-server.cpp	/^const static Name LOCALHOP_HUB               = "\/localhop\/ndn-autoconf\/hub";$/;"	m	namespace:ndn	file:
LOCALHOP_HUB_DISCOVERY_PREFIX	tools/ndn-autoconfig/multicast-discovery.cpp	/^static const Name LOCALHOP_HUB_DISCOVERY_PREFIX = "\/localhop\/ndn-autoconf\/hub";$/;"	m	namespace:ndn::tools::autoconfig	file:
LOCALHOP_NAME	daemon/table/pit-entry.hpp	/^  static const Name LOCALHOP_NAME;$/;"	m	class:nfd::pit::Entry
LOCALHOP_ROUTABLE_PREFIXES	tools/ndn-autoconfig-server.cpp	/^const static Name LOCALHOP_ROUTABLE_PREFIXES = "\/localhop\/nfd\/rib\/routable-prefixes";$/;"	m	namespace:ndn	file:
LOCALHOST_NAME	daemon/fw/forwarder.hpp	/^  static const Name LOCALHOST_NAME;$/;"	m	class:nfd::Forwarder
LOCALHOST_NAME	daemon/table/pit-entry.hpp	/^  static const Name LOCALHOST_NAME;$/;"	m	class:nfd::pit::Entry
LOCALSTATEDIR	build/c4che/_cache.py	/^LOCALSTATEDIR = '\/usr\/local\/var'$/;"	v
LOCAL_CONTROL_FEATURE_ANY	daemon/face/local-face.hpp	/^  static const size_t LOCAL_CONTROL_FEATURE_ANY = 0; \/\/\/ any feature$/;"	m	class:nfd::LocalFace
LOCAL_CONTROL_FEATURE_MAX	daemon/face/local-face.hpp	/^  static const size_t LOCAL_CONTROL_FEATURE_MAX = 3; \/\/\/ upper bound of LocalControlFeature enum$/;"	m	class:nfd::LocalFace
LOG_ALL	core/logger.hpp	/^  LOG_ALL            = 255 \/\/ all messages$/;"	e	enum:nfd::LogLevel
LOG_DEBUG	core/logger.hpp	/^  LOG_DEBUG          = 4, \/\/ debug messages$/;"	e	enum:nfd::LogLevel
LOG_ERROR	core/logger.hpp	/^  LOG_ERROR          = 1, \/\/ serious error messages$/;"	e	enum:nfd::LogLevel
LOG_FATAL	core/logger.hpp	/^  LOG_FATAL          = -1, \/\/ fatal (will be logged unconditionally)$/;"	e	enum:nfd::LogLevel
LOG_INFO	core/logger.hpp	/^  LOG_INFO           = 3, \/\/ informational messages$/;"	e	enum:nfd::LogLevel
LOG_NONE	core/logger.hpp	/^  LOG_NONE           = 0, \/\/ no messages$/;"	e	enum:nfd::LogLevel
LOG_TRACE	core/logger.hpp	/^  LOG_TRACE          = 5, \/\/ trace messages (most verbose)$/;"	e	enum:nfd::LogLevel
LOG_WARN	core/logger.hpp	/^  LOG_WARN           = 2, \/\/ warning messages$/;"	e	enum:nfd::LogLevel
LevelMap	core/logger-factory.hpp	/^  typedef std::map<std::string, LogLevel> LevelMap;$/;"	t	class:nfd::LoggerFactory
LimitedIo	tests/limited-io.cpp	/^LimitedIo::LimitedIo()$/;"	f	class:nfd::tests::LimitedIo
LimitedIo	tests/limited-io.cpp	/^LimitedIo::LimitedIo(UnitTestTimeFixture* uttf)$/;"	f	class:nfd::tests::LimitedIo
LimitedIo	tests/limited-io.hpp	/^class LimitedIo : noncopyable$/;"	c	namespace:nfd::tests
LinkLayerCounters	daemon/face/face-counters.hpp	/^class LinkLayerCounters : noncopyable$/;"	c	namespace:nfd
LinkService	daemon/face/link-service.cpp	/^LinkService::LinkService()$/;"	f	class:nfd::face::LinkService
LinkService	daemon/face/link-service.hpp	/^class LinkService : noncopyable$/;"	c	namespace:nfd::face
LinkService	tests/daemon/face/dummy-lp-face.cpp	/^class DummyLpFace::LinkService : public face::LinkService$/;"	c	class:nfd::face::tests::DummyLpFace	file:
LocalFace	daemon/face/local-face.hpp	/^LocalFace::LocalFace(const FaceUri& remoteUri, const FaceUri& localUri)$/;"	f	class:nfd::LocalFace
LocalFace	daemon/face/local-face.hpp	/^class LocalFace : public Face$/;"	c	namespace:nfd
LogLevel	core/logger.hpp	/^enum LogLevel {$/;"	g	namespace:nfd
Logger	core/logger.cpp	/^Logger::Logger(const std::string& name, LogLevel level)$/;"	f	class:nfd::Logger
Logger	core/logger.hpp	/^class Logger$/;"	c	namespace:nfd
LoggerFactory	core/logger-factory.cpp	/^LoggerFactory::LoggerFactory()$/;"	f	class:nfd::LoggerFactory
LoggerFactory	core/logger-factory.hpp	/^class LoggerFactory : noncopyable$/;"	c	namespace:nfd
LoggerFixture	tests/core/logger.t.cpp	/^  LoggerFixture()$/;"	f	class:nfd::tests::LoggerFixture
LoggerFixture	tests/core/logger.t.cpp	/^class LoggerFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
LoggerMap	core/logger-factory.hpp	/^  typedef std::map<std::string, Logger> LoggerMap;$/;"	t	class:nfd::LoggerFactory
LpFace	daemon/face/lp-face.cpp	/^LpFace::LpFace(unique_ptr<LinkService> service, unique_ptr<Transport> transport)$/;"	f	class:nfd::face::LpFace
LpFaceWrapper	daemon/face/lp-face-wrapper.cpp	/^LpFaceWrapper::LpFaceWrapper(unique_ptr<LpFace> face)$/;"	f	class:nfd::face::LpFaceWrapper
LpFaceWrapper	daemon/face/lp-face-wrapper.hpp	/^class LpFaceWrapper : public Face$/;"	c	namespace:nfd::face
LruPolicy	daemon/table/cs-policy-lru.cpp	/^LruPolicy::LruPolicy()$/;"	f	class:nfd::cs::lru::LruPolicy
LruPolicy	daemon/table/cs-policy-lru.hpp	/^class LruPolicy : public Policy$/;"	c	namespace:nfd::cs::lru
MALFORMED_CONFIG	tests/core/config-file.t.cpp	/^const std::string MALFORMED_CONFIG =$/;"	m	namespace:nfd::tests	file:
MANDIR	build/c4che/_cache.py	/^MANDIR = '\/usr\/local\/share\/man'$/;"	v
MARK	daemon/table/dead-nonce-list.cpp	/^const DeadNonceList::Entry DeadNonceList::MARK = 0;$/;"	m	class:nfd::DeadNonceList	file:
MARK	daemon/table/dead-nonce-list.hpp	/^  static const Entry MARK;$/;"	m	class:nfd::DeadNonceList
MAX_CAPACITY	daemon/table/dead-nonce-list.cpp	/^const size_t DeadNonceList::MAX_CAPACITY = (1 << 24);$/;"	m	class:nfd::DeadNonceList	file:
MAX_CAPACITY	daemon/table/dead-nonce-list.hpp	/^  static const size_t MAX_CAPACITY;$/;"	m	class:nfd::DeadNonceList
MAX_EXTENDED_HEADER_LENGTH	websocketpp/websocketpp/frame.hpp	/^static unsigned int const MAX_EXTENDED_HEADER_LENGTH = 12;$/;"	m	namespace:websocketpp::frame
MAX_HEADER_LENGTH	websocketpp/websocketpp/frame.hpp	/^static unsigned int const MAX_HEADER_LENGTH = 14;$/;"	m	namespace:websocketpp::frame
MAX_NUM_TIMEOUTS	rib/fib-updater.cpp	/^const unsigned int FibUpdater::MAX_NUM_TIMEOUTS = 10;$/;"	m	class:nfd::rib::FibUpdater	file:
MAX_NUM_TIMEOUTS	rib/fib-updater.hpp	/^  static const unsigned int MAX_NUM_TIMEOUTS;$/;"	m	class:nfd::rib::FibUpdater
MAX_PREDICTION	daemon/fw/ncc-strategy.cpp	/^const time::microseconds NccStrategy::MeasurementsEntryInfo::MAX_PREDICTION =$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo	file:
MAX_PREDICTION	daemon/fw/ncc-strategy.hpp	/^    static const time::microseconds MAX_PREDICTION;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
MEASUREMENTS_LIFETIME	daemon/fw/ncc-strategy.cpp	/^const time::nanoseconds NccStrategy::MEASUREMENTS_LIFETIME = time::seconds(16);$/;"	m	class:nfd::fw::NccStrategy	file:
MEASUREMENTS_LIFETIME	daemon/fw/ncc-strategy.hpp	/^  static const time::nanoseconds MEASUREMENTS_LIFETIME;$/;"	m	class:nfd::fw::NccStrategy
MESSAGE	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    MESSAGE$/;"	e	enum:action_type	file:
MESSAGE_TOO_BIG	websocketpp/websocketpp/processors/base.hpp	/^    MESSAGE_TOO_BIG = 3,$/;"	e	enum:websocketpp::processor::error_cat::value
MIN_CAPACITY	daemon/table/dead-nonce-list.cpp	/^const size_t DeadNonceList::MIN_CAPACITY = (1 << 3);$/;"	m	class:nfd::DeadNonceList	file:
MIN_CAPACITY	daemon/table/dead-nonce-list.hpp	/^  static const size_t MIN_CAPACITY;$/;"	m	class:nfd::DeadNonceList
MIN_LIFETIME	daemon/table/dead-nonce-list.cpp	/^const time::nanoseconds DeadNonceList::MIN_LIFETIME = time::milliseconds(1);$/;"	m	class:nfd::DeadNonceList	file:
MIN_LIFETIME	daemon/table/dead-nonce-list.hpp	/^  static const time::nanoseconds MIN_LIFETIME;$/;"	m	class:nfd::DeadNonceList
MIN_PREDICTION	daemon/fw/ncc-strategy.cpp	/^const time::microseconds NccStrategy::MeasurementsEntryInfo::MIN_PREDICTION =$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo	file:
MIN_PREDICTION	daemon/fw/ncc-strategy.hpp	/^    static const time::microseconds MIN_PREDICTION;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
MTU_UNLIMITED	daemon/face/transport.hpp	/^const ssize_t MTU_UNLIMITED = -1;$/;"	m	namespace:nfd::face
MalformedPacketFixture	tests/daemon/fw/forwarder.t.cpp	/^  MalformedPacketFixture()$/;"	f	class:nfd::tests::MalformedPacketFixture
MalformedPacketFixture	tests/daemon/fw/forwarder.t.cpp	/^class MalformedPacketFixture : public UnitTestTimeFixture$/;"	c	namespace:nfd::tests	file:
ManagerBase	daemon/mgmt/manager-base.cpp	/^ManagerBase::ManagerBase(Dispatcher& dispatcher,$/;"	f	class:nfd::ManagerBase
ManagerBase	daemon/mgmt/manager-base.hpp	/^class ManagerBase : public noncopyable$/;"	c	namespace:nfd
ManagerBaseFixture	tests/daemon/mgmt/manager-base.t.cpp	/^  ManagerBaseFixture()$/;"	f	class:nfd::tests::ManagerBaseFixture
ManagerBaseFixture	tests/daemon/mgmt/manager-base.t.cpp	/^class ManagerBaseFixture : public ManagerCommonFixture$/;"	c	namespace:nfd::tests	file:
ManagerCommonFixture	tests/daemon/mgmt/manager-common-fixture.cpp	/^ManagerCommonFixture::ManagerCommonFixture()$/;"	f	class:nfd::tests::ManagerCommonFixture
ManagerCommonFixture	tests/daemon/mgmt/manager-common-fixture.hpp	/^class ManagerCommonFixture : public UnitTestTimeFixture$/;"	c	namespace:nfd::tests
Measurements	daemon/table/measurements.cpp	/^Measurements::Measurements(NameTree& nameTree)$/;"	f	class:nfd::Measurements
Measurements	daemon/table/measurements.hpp	/^class Measurements : noncopyable$/;"	c	namespace:nfd
MeasurementsAccessor	daemon/table/measurements-accessor.cpp	/^MeasurementsAccessor::MeasurementsAccessor(Measurements& measurements,$/;"	f	class:nfd::MeasurementsAccessor
MeasurementsAccessor	daemon/table/measurements-accessor.hpp	/^class MeasurementsAccessor : noncopyable$/;"	c	namespace:nfd
MeasurementsAccessorFixture	tests/daemon/table/measurements-accessor.t.cpp	/^  MeasurementsAccessorFixture()$/;"	f	class:nfd::tests::MeasurementsAccessorFixture
MeasurementsAccessorFixture	tests/daemon/table/measurements-accessor.t.cpp	/^class MeasurementsAccessorFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
MeasurementsAccessorTestStrategy	tests/daemon/table/measurements-accessor.t.cpp	/^  MeasurementsAccessorTestStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::tests::MeasurementsAccessorTestStrategy
MeasurementsAccessorTestStrategy	tests/daemon/table/measurements-accessor.t.cpp	/^class MeasurementsAccessorTestStrategy : public DummyStrategy$/;"	c	namespace:nfd::tests	file:
MeasurementsEntryInfo	daemon/fw/ncc-strategy.cpp	/^NccStrategy::MeasurementsEntryInfo::MeasurementsEntryInfo()$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
MeasurementsEntryInfo	daemon/fw/ncc-strategy.hpp	/^  class MeasurementsEntryInfo : public StrategyInfo$/;"	c	class:nfd::fw::NccStrategy
MissCallback	daemon/table/cs.hpp	/^  typedef std::function<void(const Interest&)> MissCallback;$/;"	t	class:nfd::cs::Cs
MissingCallbackFixture	tests/core/config-file.t.cpp	/^  MissingCallbackFixture()$/;"	f	class:nfd::tests::MissingCallbackFixture
MissingCallbackFixture	tests/core/config-file.t.cpp	/^class MissingCallbackFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
MtInfo	daemon/fw/access-strategy.cpp	/^AccessStrategy::MtInfo::MtInfo()$/;"	f	class:nfd::fw::AccessStrategy::MtInfo
MtInfo	daemon/fw/access-strategy.hpp	/^  class MtInfo : public StrategyInfo$/;"	c	class:nfd::fw::AccessStrategy
Multicast	daemon/face/datagram-transport.hpp	/^struct Multicast {};$/;"	s	namespace:nfd::face
MulticastDiscovery	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::MulticastDiscovery(Face& face, KeyChain& keyChain,$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
MulticastDiscovery	tools/ndn-autoconfig/multicast-discovery.hpp	/^class MulticastDiscovery : public Base$/;"	c	namespace:ndn::tools::autoconfig
MulticastFaceMap	daemon/face/ethernet-factory.hpp	/^                   shared_ptr<EthernetFace>> MulticastFaceMap;$/;"	t	class:nfd::EthernetFactory
MulticastFaceMap	daemon/face/udp-factory.hpp	/^  typedef std::map<udp::Endpoint, shared_ptr<face::LpFaceWrapper>> MulticastFaceMap;$/;"	t	class:nfd::UdpFactory
MulticastStrategy	daemon/fw/multicast-strategy.cpp	/^MulticastStrategy::MulticastStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::MulticastStrategy
MulticastStrategy	daemon/fw/multicast-strategy.hpp	/^class MulticastStrategy : public Strategy$/;"	c	namespace:nfd::fw
MulticastUdpTransport	daemon/face/multicast-udp-transport.cpp	/^MulticastUdpTransport::MulticastUdpTransport(const protocol::endpoint& localEndpoint,$/;"	f	class:nfd::face::MulticastUdpTransport
MulticastUdpTransport	daemon/face/multicast-udp-transport.hpp	/^class MulticastUdpTransport : public DatagramTransport<boost::asio::ip::udp, Multicast>$/;"	c	namespace:nfd::face
Mur	core/city-hash.cpp	/^static uint32 Mur(uint32 a, uint32 h) {$/;"	f	file:
NDEBUG	build/config.hpp	22;"	d
NEW	daemon/fw/retx-suppression.hpp	/^    NEW,$/;"	e	enum:nfd::fw::RetxSuppression::Result
NEW	rib/propagated-entry.hpp	/^  NEW,$/;"	m	class:nfd::rib::PropagationStatus
NFD_COMMON_HPP	common.hpp	27;"	d
NFD_CORE_ALGORITHM_HPP	core/algorithm.hpp	27;"	d
NFD_CORE_CONFIG_FILE_HPP	core/config-file.hpp	27;"	d
NFD_CORE_EXTENDED_ERROR_MESSAGE_HPP	core/extended-error-message.hpp	27;"	d
NFD_CORE_GLOBAL_IO_HPP	core/global-io.hpp	26;"	d
NFD_CORE_LOGGER_FACTORY_HPP	core/logger-factory.hpp	27;"	d
NFD_CORE_LOGGER_HPP	core/logger.hpp	27;"	d
NFD_CORE_NETWORK_HPP	core/network.hpp	27;"	d
NFD_CORE_NETWORK_INTERFACE_HPP	core/network-interface.hpp	27;"	d
NFD_CORE_PRIVILEGE_HELPER_HPP	core/privilege-helper.hpp	27;"	d
NFD_CORE_RANDOM_HPP	core/random.hpp	36;"	d
NFD_CORE_SCHEDULER_HPP	core/scheduler.hpp	27;"	d
NFD_CORE_SEGMENT_PUBLISHER_HPP	core/segment-publisher.hpp	27;"	d
NFD_DAEMON_FACE_CHANNEL_HPP	daemon/face/channel.hpp	26;"	d
NFD_DAEMON_FACE_DATAGRAM_TRANSPORT_HPP	daemon/face/datagram-transport.hpp	27;"	d
NFD_DAEMON_FACE_ETHERNET_FACE_HPP	daemon/face/ethernet-face.hpp	27;"	d
NFD_DAEMON_FACE_ETHERNET_FACTORY_HPP	daemon/face/ethernet-factory.hpp	27;"	d
NFD_DAEMON_FACE_FACE_COUNTERS_HPP	daemon/face/face-counters.hpp	27;"	d
NFD_DAEMON_FACE_FACE_HPP	daemon/face/face.hpp	27;"	d
NFD_DAEMON_FACE_FACE_LOG_HPP	daemon/face/face-log.hpp	27;"	d
NFD_DAEMON_FACE_GENERIC_LINK_SERVICE_HPP	daemon/face/generic-link-service.hpp	27;"	d
NFD_DAEMON_FACE_INTERNAL_FACE_HPP	daemon/face/internal-face.hpp	27;"	d
NFD_DAEMON_FACE_INTERNAL_TRANSPORT_HPP	daemon/face/internal-transport.hpp	27;"	d
NFD_DAEMON_FACE_LINK_SERVICE_HPP	daemon/face/link-service.hpp	27;"	d
NFD_DAEMON_FACE_LOCAL_FACE_HPP	daemon/face/local-face.hpp	27;"	d
NFD_DAEMON_FACE_LP_FACE_WRAPPER_HPP	daemon/face/lp-face-wrapper.hpp	27;"	d
NFD_DAEMON_FACE_MULTICAST_UDP_TRANSPORT_HPP	daemon/face/multicast-udp-transport.hpp	27;"	d
NFD_DAEMON_FACE_NDNLP_PARSE_HPP	daemon/face/ndnlp-data.hpp	27;"	d
NFD_DAEMON_FACE_NDNLP_PARTIAL_MESSAGE_STORE_HPP	daemon/face/ndnlp-partial-message-store.hpp	27;"	d
NFD_DAEMON_FACE_NDNLP_SEQUENCE_GENERATOR_HPP	daemon/face/ndnlp-sequence-generator.hpp	26;"	d
NFD_DAEMON_FACE_NDNLP_SLICER_HPP	daemon/face/ndnlp-slicer.hpp	27;"	d
NFD_DAEMON_FACE_NDNLP_TLV_HPP	daemon/face/ndnlp-tlv.hpp	26;"	d
NFD_DAEMON_FACE_NULL_FACE_HPP	daemon/face/null-face.hpp	27;"	d
NFD_DAEMON_FACE_PROTOCOL_FACTORY_HPP	daemon/face/protocol-factory.hpp	27;"	d
NFD_DAEMON_FACE_STREAM_FACE_HPP	daemon/face/stream-face.hpp	27;"	d
NFD_DAEMON_FACE_STREAM_TRANSPORT_HPP	daemon/face/stream-transport.hpp	27;"	d
NFD_DAEMON_FACE_TCP_CHANNEL_HPP	daemon/face/tcp-channel.hpp	27;"	d
NFD_DAEMON_FACE_TCP_FACE_HPP	daemon/face/tcp-face.hpp	26;"	d
NFD_DAEMON_FACE_TCP_FACTORY_HPP	daemon/face/tcp-factory.hpp	27;"	d
NFD_DAEMON_FACE_TRANSPORT_HPP	daemon/face/transport.hpp	27;"	d
NFD_DAEMON_FACE_UDP_CHANNEL_HPP	daemon/face/udp-channel.hpp	27;"	d
NFD_DAEMON_FACE_UDP_FACTORY_HPP	daemon/face/udp-factory.hpp	27;"	d
NFD_DAEMON_FACE_UDP_PROTOCOL_HPP	daemon/face/udp-protocol.hpp	27;"	d
NFD_DAEMON_FACE_UNICAST_UDP_TRANSPORT_HPP	daemon/face/unicast-udp-transport.hpp	27;"	d
NFD_DAEMON_FACE_UNIX_STREAM_CHANNEL_HPP	daemon/face/unix-stream-channel.hpp	26;"	d
NFD_DAEMON_FACE_UNIX_STREAM_FACTORY_HPP	daemon/face/unix-stream-factory.hpp	27;"	d
NFD_DAEMON_FACE_UNIX_STREAM_TRANSPORT_HPP	daemon/face/unix-stream-transport.hpp	27;"	d
NFD_DAEMON_FACE_WEBSOCKETPP_HPP	daemon/face/websocketpp.hpp	27;"	d
NFD_DAEMON_FACE_WEBSOCKET_CHANNEL_HPP	daemon/face/websocket-channel.hpp	27;"	d
NFD_DAEMON_FACE_WEBSOCKET_FACE_HPP	daemon/face/websocket-face.hpp	27;"	d
NFD_DAEMON_FACE_WEBSOCKET_FACTORY_HPP	daemon/face/websocket-factory.hpp	27;"	d
NFD_DAEMON_FW_ACCESS_STRATEGY_HPP	daemon/fw/access-strategy.hpp	27;"	d
NFD_DAEMON_FW_BEST_ROUTE_STRATEGY2_HPP	daemon/fw/best-route-strategy2.hpp	27;"	d
NFD_DAEMON_FW_BEST_ROUTE_STRATEGY_HPP	daemon/fw/best-route-strategy.hpp	27;"	d
NFD_DAEMON_FW_BROADCAST_STRATEGY_HPP	daemon/fw/broadcast-strategy.hpp	27;"	d
NFD_DAEMON_FW_CLIENT_CONTROL_STRATEGY_HPP	daemon/fw/client-control-strategy.hpp	27;"	d
NFD_DAEMON_FW_FACE_TABLE_HPP	daemon/fw/face-table.hpp	27;"	d
NFD_DAEMON_FW_FORWARDER_COUNTERS_HPP	daemon/fw/forwarder-counters.hpp	27;"	d
NFD_DAEMON_FW_FORWARDER_HPP	daemon/fw/forwarder.hpp	27;"	d
NFD_DAEMON_FW_MULTICAST_STRATEGY_HPP	daemon/fw/multicast-strategy.hpp	27;"	d
NFD_DAEMON_FW_NCC_STRATEGY_HPP	daemon/fw/ncc-strategy.hpp	27;"	d
NFD_DAEMON_FW_RETX_SUPPRESSION_EXPONENTIAL_HPP	daemon/fw/retx-suppression-exponential.hpp	27;"	d
NFD_DAEMON_FW_RETX_SUPPRESSION_FIXED_HPP	daemon/fw/retx-suppression-fixed.hpp	27;"	d
NFD_DAEMON_FW_RETX_SUPPRESSION_HPP	daemon/fw/retx-suppression.hpp	27;"	d
NFD_DAEMON_FW_RTT_ESTIMATOR_HPP	daemon/fw/rtt-estimator.hpp	27;"	d
NFD_DAEMON_FW_STRATEGY_HPP	daemon/fw/strategy.hpp	27;"	d
NFD_DAEMON_FW_STRATEGY_INFO_HPP	daemon/fw/strategy-info.hpp	27;"	d
NFD_DAEMON_FW_STRATEGY_REGISTRY_HPP	daemon/fw/strategy-registry.hpp	27;"	d
NFD_DAEMON_LP_FACE_HPP	daemon/face/lp-face.hpp	27;"	d
NFD_DAEMON_MGMT_COMMAND_VALIDATOR_HPP	daemon/mgmt/command-validator.hpp	26;"	d
NFD_DAEMON_MGMT_FACE_MANAGER_HPP	daemon/mgmt/face-manager.hpp	27;"	d
NFD_DAEMON_MGMT_FIB_MANAGER_HPP	daemon/mgmt/fib-manager.hpp	27;"	d
NFD_DAEMON_MGMT_FORWARDER_STATUS_MANAGER_HPP	daemon/mgmt/forwarder-status-manager.hpp	27;"	d
NFD_DAEMON_MGMT_MANAGER_BASE_HPP	daemon/mgmt/manager-base.hpp	27;"	d
NFD_DAEMON_MGMT_STRATEGY_CHOICE_MANAGER_HPP	daemon/mgmt/strategy-choice-manager.hpp	27;"	d
NFD_DAEMON_NFD_HPP	daemon/nfd.hpp	27;"	d
NFD_DAEMON_TABLE_CS_ENTRY_HPP	daemon/table/cs-entry.hpp	27;"	d
NFD_DAEMON_TABLE_CS_ENTRY_IMPL_HPP	daemon/table/cs-entry-impl.hpp	27;"	d
NFD_DAEMON_TABLE_CS_HPP	daemon/table/cs.hpp	49;"	d
NFD_DAEMON_TABLE_CS_INTERNAL_HPP	daemon/table/cs-internal.hpp	31;"	d
NFD_DAEMON_TABLE_CS_POLICY_FIFO_HPP	daemon/table/cs-policy-priority-fifo.hpp	27;"	d
NFD_DAEMON_TABLE_CS_POLICY_HPP	daemon/table/cs-policy.hpp	27;"	d
NFD_DAEMON_TABLE_CS_POLICY_LRU_HPP	daemon/table/cs-policy-lru.hpp	27;"	d
NFD_DAEMON_TABLE_DEAD_NONCE_LIST_HPP	daemon/table/dead-nonce-list.hpp	27;"	d
NFD_DAEMON_TABLE_FIB_ENTRY_HPP	daemon/table/fib-entry.hpp	27;"	d
NFD_DAEMON_TABLE_FIB_HPP	daemon/table/fib.hpp	27;"	d
NFD_DAEMON_TABLE_FIB_NEXTHOP_HPP	daemon/table/fib-nexthop.hpp	27;"	d
NFD_DAEMON_TABLE_MEASUREMENTS_ACCESSOR_HPP	daemon/table/measurements-accessor.hpp	27;"	d
NFD_DAEMON_TABLE_MEASUREMENTS_ENTRY_HPP	daemon/table/measurements-entry.hpp	27;"	d
NFD_DAEMON_TABLE_MEASUREMENTS_HPP	daemon/table/measurements.hpp	27;"	d
NFD_DAEMON_TABLE_NAME_TREE_ENTRY_HPP	daemon/table/name-tree-entry.hpp	27;"	d
NFD_DAEMON_TABLE_NAME_TREE_HPP	daemon/table/name-tree.hpp	27;"	d
NFD_DAEMON_TABLE_NETWORK_REGION_TABLE_HPP	daemon/table/network-region-table.hpp	27;"	d
NFD_DAEMON_TABLE_PIT_ENTRY_HPP	daemon/table/pit-entry.hpp	27;"	d
NFD_DAEMON_TABLE_PIT_FACE_RECORD_HPP	daemon/table/pit-face-record.hpp	27;"	d
NFD_DAEMON_TABLE_PIT_HPP	daemon/table/pit.hpp	27;"	d
NFD_DAEMON_TABLE_PIT_IN_RECORD_HPP	daemon/table/pit-in-record.hpp	27;"	d
NFD_DAEMON_TABLE_PIT_OUT_RECORD_HPP	daemon/table/pit-out-record.hpp	27;"	d
NFD_DAEMON_TABLE_STRATEGY_CHOICE_ENTRY_HPP	daemon/table/strategy-choice-entry.hpp	27;"	d
NFD_DAEMON_TABLE_STRATEGY_CHOICE_HPP	daemon/table/strategy-choice.hpp	27;"	d
NFD_DAEMON_TABLE_STRATEGY_INFO_HOST_HPP	daemon/table/strategy-info-host.hpp	27;"	d
NFD_LOG	core/logger.hpp	135;"	d
NFD_LOG_DEBUG	core/logger.hpp	145;"	d
NFD_LOG_ERROR	core/logger.hpp	148;"	d
NFD_LOG_FACE	daemon/face/face-log.hpp	65;"	d
NFD_LOG_FACE_DEBUG	daemon/face/face-log.hpp	77;"	d
NFD_LOG_FACE_ERROR	daemon/face/face-log.hpp	86;"	d
NFD_LOG_FACE_INFO	daemon/face/face-log.hpp	80;"	d
NFD_LOG_FACE_TRACE	daemon/face/face-log.hpp	74;"	d
NFD_LOG_FACE_WARN	daemon/face/face-log.hpp	83;"	d
NFD_LOG_FATAL	core/logger.hpp	149;"	d
NFD_LOG_INCLASS_2TEMPLATE_SPECIALIZATION_DEFINE	core/logger.hpp	129;"	d
NFD_LOG_INCLASS_DECLARE	core/logger.hpp	115;"	d
NFD_LOG_INCLASS_DEFINE	core/logger.hpp	118;"	d
NFD_LOG_INCLASS_TEMPLATE_DEFINE	core/logger.hpp	121;"	d
NFD_LOG_INCLASS_TEMPLATE_SPECIALIZATION_DEFINE	core/logger.hpp	125;"	d
NFD_LOG_INFO	core/logger.hpp	146;"	d
NFD_LOG_INIT	core/logger.hpp	112;"	d
NFD_LOG_TRACE	core/logger.hpp	144;"	d
NFD_LOG_WARN	core/logger.hpp	147;"	d
NFD_MGMT_GENERAL_CONFIG_SECTION_HPP	daemon/mgmt/general-config-section.hpp	26;"	d
NFD_MGMT_TABLES_CONFIG_SECTION_HPP	daemon/mgmt/tables-config-section.hpp	27;"	d
NFD_REGISTER_STRATEGY	daemon/fw/strategy-registry.hpp	65;"	d
NFD_RIB_AUTO_PREFIX_PROPAGATOR_HPP	rib/auto-prefix-propagator.hpp	27;"	d
NFD_RIB_FIB_UPDATER_HPP	rib/fib-updater.hpp	27;"	d
NFD_RIB_FIB_UPDATE_HPP	rib/fib-update.hpp	27;"	d
NFD_RIB_NRD_HPP	rib/nrd.hpp	27;"	d
NFD_RIB_PROPAGATED_ENTRY_HPP	rib/propagated-entry.hpp	27;"	d
NFD_RIB_RIB_ENTRY_HPP	rib/rib-entry.hpp	27;"	d
NFD_RIB_RIB_HPP	rib/rib.hpp	27;"	d
NFD_RIB_RIB_MANAGER_HPP	rib/rib-manager.hpp	27;"	d
NFD_RIB_RIB_STATUS_PUBLISHER_HPP	rib/rib-status-publisher.hpp	27;"	d
NFD_RIB_RIB_UPDATE_BATCH_HPP	rib/rib-update-batch.hpp	27;"	d
NFD_RIB_RIB_UPDATE_HPP	rib/rib-update.hpp	27;"	d
NFD_RIB_ROUTE_HPP	rib/route.hpp	27;"	d
NFD_TESTS_BOOST_TEST_HPP	tests/boost-test.hpp	27;"	d
NFD_TESTS_CORE_SIMPLE_NOTIFICATION_HPP	tests/core/simple-notification.hpp	27;"	d
NFD_TESTS_DAEMON_FACE_DUMMY_FACE_HPP	tests/daemon/face/dummy-face.hpp	27;"	d
NFD_TESTS_DAEMON_FACE_DUMMY_LP_FACE_HPP	tests/daemon/face/dummy-lp-face.hpp	27;"	d
NFD_TESTS_DAEMON_FACE_DUMMY_STREAM_SENDER_HPP	tests/daemon/face/dummy-stream-sender.hpp	27;"	d
NFD_TESTS_DAEMON_FACE_DUMMY_TRANSPORT_HPP	tests/daemon/face/dummy-transport.hpp	27;"	d
NFD_TESTS_DAEMON_FACE_FACE_HISTORY_HPP	tests/daemon/face/face-history.hpp	27;"	d
NFD_TESTS_DAEMON_FACE_PACKET_DATASETS_HPP	tests/daemon/face/packet-datasets.hpp	27;"	d
NFD_TESTS_DAEMON_FW_DUMMY_STRATEGY_HPP	tests/daemon/fw/dummy-strategy.hpp	27;"	d
NFD_TESTS_IDENTITY_MANAGEMENT_FIXTURE_HPP	tests/identity-management-fixture.hpp	23;"	d
NFD_TESTS_LIMITED_IO_HPP	tests/limited-io.hpp	27;"	d
NFD_TESTS_NFD_FW_STRATEGY_TESTER_HPP	tests/daemon/fw/strategy-tester.hpp	27;"	d
NFD_TESTS_NFD_FW_TOPOLOGY_TESTER_HPP	tests/daemon/fw/topology-tester.hpp	31;"	d
NFD_TESTS_NFD_MGMT_MANAGER_COMMON_HPP	tests/daemon/mgmt/manager-common-fixture.hpp	27;"	d
NFD_TESTS_TEST_COMMON_HPP	tests/test-common.hpp	27;"	d
NFD_TOOLS_NDN_AUTOCONFIG_BASE_DNS_HPP	tools/ndn-autoconfig/base-dns.hpp	27;"	d
NFD_TOOLS_NDN_AUTOCONFIG_BASE_HPP	tools/ndn-autoconfig/base.hpp	27;"	d
NFD_TOOLS_NDN_AUTOCONFIG_GUESS_FROM_IDENTITY_NAME_HPP	tools/ndn-autoconfig/guess-from-identity-name.hpp	27;"	d
NFD_TOOLS_NDN_AUTOCONFIG_GUESS_FROM_SEARCH_DOMAINS_HPP	tools/ndn-autoconfig/guess-from-search-domains.hpp	27;"	d
NFD_TOOLS_NDN_AUTOCONFIG_MULTICAST_DISCOVERY_HPP	tools/ndn-autoconfig/multicast-discovery.hpp	27;"	d
NFD_TOOLS_NFDC_HPP	tools/nfdc.hpp	27;"	d
NFD_VERSION	build/version.hpp	41;"	d
NFD_VERSION_BUILD_STRING	build/version.hpp	63;"	d
NFD_VERSION_HPP	build/version.hpp	27;"	d
NFD_VERSION_MAJOR	build/version.hpp	66;"	d
NFD_VERSION_MINOR	build/version.hpp	68;"	d
NFD_VERSION_PATCH	build/version.hpp	70;"	d
NFD_VERSION_STRING	build/version.hpp	47;"	d
NOMINMAX	websocketpp/websocketpp/common/platforms.hpp	38;"	d
NONE	daemon/face/transport.hpp	/^  NONE,$/;"	m	class:nfd::face::TransportState
NO_FIB_ENTRY	tests/daemon/mgmt/fib-manager.t.cpp	/^    NO_FIB_ENTRY,$/;"	m	class:nfd::tests::FibManagerFixture::CheckNextHopResult	file:
NO_NEXTHOP	tests/daemon/mgmt/fib-manager.t.cpp	/^    NO_NEXTHOP,$/;"	m	class:nfd::tests::FibManagerFixture::CheckNextHopResult	file:
NO_WORK	tests/limited-io.hpp	/^    NO_WORK,$/;"	e	enum:nfd::tests::LimitedIo::StopReason
N_BUCKETS	tests/daemon/table/name-tree.t.cpp	/^  static const size_t N_BUCKETS = 16;$/;"	m	class:nfd::tests::EnumerationFixture	file:
N_BUCKETS	tests/daemon/table/name-tree.t.cpp	/^const size_t EnumerationFixture::N_BUCKETS;$/;"	m	class:nfd::tests::EnumerationFixture	file:
NackReasonCombination	tests/daemon/fw/best-route-strategy2.t.cpp	/^struct NackReasonCombination$/;"	s	namespace:nfd::fw::tests	file:
NackReasonCombinations	tests/daemon/fw/best-route-strategy2.t.cpp	/^  > NackReasonCombinations;$/;"	t	namespace:nfd::fw::tests	file:
NameAndLevel	core/logger-factory.hpp	/^  typedef std::pair<std::string, LogLevel> NameAndLevel;$/;"	t	class:nfd::LoggerFactory
NameAndLogger	core/logger-factory.hpp	/^  typedef std::pair<std::string, Logger> NameAndLogger;$/;"	t	class:nfd::LoggerFactory
NameAndRoute	rib/rib.hpp	/^  typedef std::pair<const Name&,const Route&> NameAndRoute;$/;"	t	class:nfd::rib::Rib
NameGenerator	tests/other/cs-benchmark.cpp	/^  typedef std::function<Name(size_t)> NameGenerator;$/;"	t	class:nfd::tests::CsBenchmarkFixture	file:
NameTree	daemon/table/name-tree.cpp	/^NameTree::NameTree(size_t nBuckets)$/;"	f	class:nfd::NameTree
NameTree	daemon/table/name-tree.hpp	/^class NameTree : noncopyable$/;"	c	namespace:nfd
NccStrategy	daemon/fw/ncc-strategy.cpp	/^NccStrategy::NccStrategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::NccStrategy
NccStrategy	daemon/fw/ncc-strategy.hpp	/^class NccStrategy : public Strategy$/;"	c	namespace:nfd::fw
NdnAutoconfig	tools/ndn-autoconfig/main.cpp	/^  NdnAutoconfig(bool isDaemonMode)$/;"	f	class:ndn::tools::NdnAutoconfig
NdnAutoconfig	tools/ndn-autoconfig/main.cpp	/^class NdnAutoconfig : boost::noncopyable$/;"	c	namespace:ndn::tools	file:
NdnAutoconfigServer	tools/ndn-autoconfig-server.cpp	/^  NdnAutoconfigServer(const std::string& hubFaceUri, const PrefixCollection& routablePrefixes)$/;"	f	class:ndn::NdnAutoconfigServer
NdnAutoconfigServer	tools/ndn-autoconfig-server.cpp	/^class NdnAutoconfigServer : noncopyable$/;"	c	namespace:ndn	file:
NdnTlvPeek	tools/ndn-tlv-peek.cpp	/^  NdnTlvPeek(char* programName)$/;"	f	class:ndntlvpeek::NdnTlvPeek
NdnTlvPeek	tools/ndn-tlv-peek.cpp	/^class NdnTlvPeek : boost::noncopyable$/;"	c	namespace:ndntlvpeek	file:
NdnTlvPoke	tools/ndn-tlv-poke.cpp	/^  NdnTlvPoke(char* programName)$/;"	f	class:ndntlvpoke::NdnTlvPoke
NdnTlvPoke	tools/ndn-tlv-poke.cpp	/^class NdnTlvPoke : boost::noncopyable$/;"	c	namespace:ndntlvpoke	file:
NdnlpData	daemon/face/ndnlp-data.hpp	/^class NdnlpData$/;"	c	namespace:nfd::ndnlp
NdnlpData	daemon/face/ndnlp-tlv.hpp	/^  NdnlpData      = 80,$/;"	e	enum:nfd::tlv::__anon1
NdnlpFragCount	daemon/face/ndnlp-tlv.hpp	/^  NdnlpFragCount = 83,$/;"	e	enum:nfd::tlv::__anon1
NdnlpFragIndex	daemon/face/ndnlp-tlv.hpp	/^  NdnlpFragIndex = 82,$/;"	e	enum:nfd::tlv::__anon1
NdnlpPayload	daemon/face/ndnlp-tlv.hpp	/^  NdnlpPayload   = 84$/;"	e	enum:nfd::tlv::__anon1
NdnlpSequence	daemon/face/ndnlp-tlv.hpp	/^  NdnlpSequence  = 81,$/;"	e	enum:nfd::tlv::__anon1
Network	core/network.hpp	/^  Network()$/;"	f	class:nfd::Network
Network	core/network.hpp	/^  Network(const boost::asio::ip::address& minAddress,$/;"	f	class:nfd::Network
Network	core/network.hpp	/^class Network$/;"	c	namespace:nfd
NetworkInterfaceInfo	core/network-interface.hpp	/^class NetworkInterfaceInfo$/;"	c	namespace:nfd
NetworkLayerCounters	daemon/face/face-counters.hpp	/^class NetworkLayerCounters : noncopyable$/;"	c	namespace:nfd
NetworkRegionTable	daemon/table/network-region-table.hpp	/^class NetworkRegionTable : public std::set<Name>$/;"	c	namespace:nfd
NextHop	daemon/table/fib-nexthop.cpp	/^NextHop::NextHop(shared_ptr<Face> face)$/;"	f	class:nfd::fib::NextHop
NextHop	daemon/table/fib-nexthop.hpp	/^class NextHop$/;"	c	namespace:nfd::fib
NextHopIsDownstream	tests/daemon/fw/best-route-strategy2.t.cpp	/^class NextHopIsDownstream$/;"	c	namespace:nfd::fw::tests	file:
NextHopList	daemon/table/fib-entry.hpp	/^typedef std::vector<fib::NextHop> NextHopList;$/;"	t	namespace:nfd::fib
NextHopViolatesScope	tests/daemon/fw/best-route-strategy2.t.cpp	/^class NextHopViolatesScope$/;"	c	namespace:nfd::fw::tests	file:
NextStageCallback	tools/ndn-autoconfig/base.hpp	/^  typedef std::function<void(const std::string&)> NextStageCallback;$/;"	t	class:ndn::tools::autoconfig::Base
Nfd	daemon/nfd.cpp	/^Nfd::Nfd(const ConfigSection& config, ndn::KeyChain& keyChain)$/;"	f	class:nfd::Nfd
Nfd	daemon/nfd.cpp	/^Nfd::Nfd(const std::string& configFile, ndn::KeyChain& keyChain)$/;"	f	class:nfd::Nfd
Nfd	daemon/nfd.hpp	/^class Nfd : noncopyable$/;"	c	namespace:nfd
NfdRunner	daemon/main.cpp	/^  NfdRunner(const std::string& configFile)$/;"	f	class:nfd::NfdRunner
NfdRunner	daemon/main.cpp	/^class NfdRunner : noncopyable$/;"	c	namespace:nfd	file:
NfdStatus	tools/nfd-status.cpp	/^  NfdStatus(char* toolName)$/;"	f	class:ndn::NfdStatus
NfdStatus	tools/nfd-status.cpp	/^class NfdStatus$/;"	c	namespace:ndn	file:
Nfdc	tools/nfdc.cpp	/^Nfdc::Nfdc(ndn::Face& face)$/;"	f	class:nfdc::Nfdc
Nfdc	tools/nfdc.hpp	/^class Nfdc : boost::noncopyable$/;"	c	namespace:nfdc
NoRouteScenarios	tests/daemon/fw/best-route-strategy2.t.cpp	/^typedef boost::mpl::vector<EmptyNextHopList, NextHopIsDownstream, NextHopViolatesScope> NoRouteScenarios;$/;"	t	namespace:nfd::fw::tests	file:
Node	daemon/table/name-tree-entry.cpp	/^Node::Node()$/;"	f	class:nfd::name_tree::Node
Node	daemon/table/name-tree-entry.hpp	/^class Node$/;"	c	namespace:nfd::name_tree
Nrd	rib/nrd.cpp	/^Nrd::Nrd(const ConfigSection& config, ndn::KeyChain& keyChain)$/;"	f	class:nfd::rib::Nrd
Nrd	rib/nrd.cpp	/^Nrd::Nrd(const std::string& configFile, ndn::KeyChain& keyChain)$/;"	f	class:nfd::rib::Nrd
Nrd	rib/nrd.hpp	/^class Nrd : noncopyable$/;"	c	namespace:nfd::rib
NullFace	daemon/face/null-face.cpp	/^NullFace::NullFace(const FaceUri& uri)$/;"	f	class:nfd::NullFace
NullFace	daemon/face/null-face.hpp	/^class NullFace : public Face$/;"	c	namespace:nfd
OK	tests/daemon/mgmt/fib-manager.t.cpp	/^    OK,$/;"	m	class:nfd::tests::FibManagerFixture::CheckNextHopResult	file:
OK	tests/daemon/mgmt/manager-common-fixture.hpp	/^    OK,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
OK	tests/rib/auto-prefix-propagator.t.cpp	/^    OK,$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture::CheckRequestResult	file:
OLDINCLUDEDIR	build/c4che/_cache.py	/^OLDINCLUDEDIR = '\/usr\/include'$/;"	v
OUT_OF_BOUNDARY	tests/daemon/mgmt/manager-common-fixture.hpp	/^    OUT_OF_BOUNDARY,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
OUT_OF_BOUNDARY	tests/rib/auto-prefix-propagator.t.cpp	/^    OUT_OF_BOUNDARY,$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture::CheckRequestResult	file:
OnDemandFaceTransitions	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^                    mpl::pair<UdpFace, UdpFacePermanent>> OnDemandFaceTransitions;$/;"	t	namespace:nfd::tests	file:
Options	daemon/face/generic-link-service.cpp	/^GenericLinkService::Options::Options()$/;"	f	class:nfd::face::GenericLinkService::Options
Options	daemon/face/generic-link-service.hpp	/^  class Options$/;"	c	class:nfd::face::GenericLinkService
OutRecord	daemon/table/pit-out-record.cpp	/^OutRecord::OutRecord(shared_ptr<Face> face)$/;"	f	class:nfd::pit::OutRecord
OutRecord	daemon/table/pit-out-record.hpp	/^class OutRecord : public FaceRecord$/;"	c	namespace:nfd::pit
OutRecordCollection	daemon/table/pit-entry.hpp	/^typedef std::list<OutRecord> OutRecordCollection;$/;"	t	namespace:nfd::pit
PACKAGE	build/c4che/_cache.py	/^PACKAGE = 'nfd'$/;"	v
PARTIAL_ENUMERATE_TYPE	daemon/table/name-tree.hpp	/^    PARTIAL_ENUMERATE_TYPE,$/;"	e	enum:nfd::NameTree::IteratorType
PAYLOAD	websocketpp/websocketpp/processors/hybi00.hpp	/^        PAYLOAD = 1,$/;"	e	enum:websocketpp::processor::hybi00::state
PAYLOAD_VIOLATION	websocketpp/websocketpp/processors/base.hpp	/^    PAYLOAD_VIOLATION = 4 \/\/ Error was due to receiving invalid payload data$/;"	e	enum:websocketpp::processor::error_cat::value
PCAP_NETMASK_UNKNOWN	daemon/face/ethernet-face.cpp	56;"	d	file:
PDFDIR	build/c4che/_cache.py	/^PDFDIR = '\/usr\/local\/share\/doc\/nfd'$/;"	v
PERMUTE3	core/city-hash.cpp	138;"	d	file:
PERMUTE3	core/city-hash.cpp	139;"	d	file:
PING	websocketpp/websocketpp/frame.hpp	/^        PING = 0x9,$/;"	e	enum:websocketpp::frame::opcode::value
PKGCONFIG	build/c4che/_cache.py	/^PKGCONFIG = ['\/usr\/bin\/pkg-config']$/;"	v
POLICY_NAME	daemon/table/cs-policy-lru.cpp	/^const std::string LruPolicy::POLICY_NAME = "lru";$/;"	m	class:nfd::cs::lru::LruPolicy	file:
POLICY_NAME	daemon/table/cs-policy-lru.hpp	/^  static const std::string POLICY_NAME;$/;"	m	class:nfd::cs::lru::LruPolicy
POLICY_NAME	daemon/table/cs-policy-priority-fifo.cpp	/^const std::string PriorityFifoPolicy::POLICY_NAME = "fifo";$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy	file:
POLICY_NAME	daemon/table/cs-policy-priority-fifo.hpp	/^  static const std::string POLICY_NAME;$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
PONG	websocketpp/websocketpp/frame.hpp	/^        PONG = 0xA,$/;"	e	enum:websocketpp::frame::opcode::value
PREFIX	build/c4che/_cache.py	/^PREFIX = '\/usr\/local'$/;"	v
PREFIX_PROPAGATION_DEFAULT_BASE_RETRY_WAIT	rib/auto-prefix-propagator.cpp	/^const time::seconds PREFIX_PROPAGATION_DEFAULT_BASE_RETRY_WAIT = time::seconds(50);$/;"	m	namespace:nfd::rib	file:
PREFIX_PROPAGATION_DEFAULT_COST	rib/auto-prefix-propagator.cpp	/^const uint64_t PREFIX_PROPAGATION_DEFAULT_COST = 15;$/;"	m	namespace:nfd::rib	file:
PREFIX_PROPAGATION_DEFAULT_MAX_RETRY_WAIT	rib/auto-prefix-propagator.cpp	/^const time::seconds PREFIX_PROPAGATION_DEFAULT_MAX_RETRY_WAIT = time::seconds(3600);$/;"	m	namespace:nfd::rib	file:
PREFIX_PROPAGATION_DEFAULT_REFRESH_INTERVAL	rib/auto-prefix-propagator.cpp	/^const time::seconds PREFIX_PROPAGATION_DEFAULT_REFRESH_INTERVAL = time::seconds(25);$/;"	m	namespace:nfd::rib	file:
PREFIX_PROPAGATION_DEFAULT_TIMEOUT	rib/auto-prefix-propagator.cpp	/^const time::milliseconds PREFIX_PROPAGATION_DEFAULT_TIMEOUT = time::milliseconds(10000);$/;"	m	namespace:nfd::rib	file:
PREFIX_PROPAGATION_MAX_REFRESH_INTERVAL	rib/auto-prefix-propagator.cpp	/^const time::seconds PREFIX_PROPAGATION_MAX_REFRESH_INTERVAL = time::seconds(600);$/;"	m	namespace:nfd::rib	file:
PROCESS_CONNECTION	websocketpp/websocketpp/connection.hpp	/^        PROCESS_CONNECTION = 7$/;"	e	enum:websocketpp::session::internal_state::value
PROCESS_HTTP_REQUEST	websocketpp/websocketpp/connection.hpp	/^        PROCESS_HTTP_REQUEST = 6,$/;"	e	enum:websocketpp::session::internal_state::value
PROPAGATED	rib/propagated-entry.hpp	/^  PROPAGATED,$/;"	m	class:nfd::rib::PropagationStatus
PROPAGATING	rib/propagated-entry.hpp	/^  PROPAGATING,$/;"	m	class:nfd::rib::PropagationStatus
PROTECTED_WITH_TESTS_ELSE_PRIVATE	common.hpp	35;"	d
PROTECTED_WITH_TESTS_ELSE_PRIVATE	common.hpp	40;"	d
PROTOCOL_VIOLATION	websocketpp/websocketpp/processors/base.hpp	/^    PROTOCOL_VIOLATION = 2,$/;"	e	enum:websocketpp::processor::error_cat::value
PSDIR	build/c4che/_cache.py	/^PSDIR = '\/usr\/local\/share\/doc\/nfd'$/;"	v
PStrategyInfo	tests/daemon/table/strategy-choice.t.cpp	/^class PStrategyInfo : public fw::StrategyInfo$/;"	c	namespace:nfd::tests	file:
PUBLIC_WITH_TESTS_ELSE_PRIVATE	common.hpp	34;"	d
PUBLIC_WITH_TESTS_ELSE_PRIVATE	common.hpp	39;"	d
PUBLIC_WITH_TESTS_ELSE_PROTECTED	common.hpp	33;"	d
PUBLIC_WITH_TESTS_ELSE_PROTECTED	common.hpp	38;"	d
Packet	daemon/face/transport.cpp	/^Transport::Packet::Packet(Block&& packet1)$/;"	f	class:nfd::face::Transport::Packet
Packet	daemon/face/transport.hpp	/^  class Packet$/;"	c	class:nfd::face::Transport
PacketArray	daemon/face/ndnlp-slicer.hpp	/^typedef shared_ptr<std::vector<Block>> PacketArray;$/;"	t	namespace:nfd::ndnlp
PacketCounter	daemon/face/face-counters.hpp	/^  PacketCounter()$/;"	f	class:nfd::PacketCounter
PacketCounter	daemon/face/face-counters.hpp	/^class PacketCounter : noncopyable$/;"	c	namespace:nfd
PartialMessage	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessage::PartialMessage()$/;"	f	class:nfd::ndnlp::PartialMessage
PartialMessage	daemon/face/ndnlp-partial-message-store.hpp	/^class PartialMessage$/;"	c	namespace:nfd::ndnlp
PartialMessageStore	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessageStore::PartialMessageStore(const time::nanoseconds& idleDuration)$/;"	f	class:nfd::ndnlp::PartialMessageStore
PartialMessageStore	daemon/face/ndnlp-partial-message-store.hpp	/^class PartialMessageStore : noncopyable$/;"	c	namespace:nfd::ndnlp
PeriodicalInsertionFixture	tests/daemon/table/dead-nonce-list.t.cpp	/^  PeriodicalInsertionFixture()$/;"	f	class:nfd::tests::PeriodicalInsertionFixture
PeriodicalInsertionFixture	tests/daemon/table/dead-nonce-list.t.cpp	/^class PeriodicalInsertionFixture : public UnitTestTimeFixture$/;"	c	namespace:nfd::tests	file:
Pit	daemon/table/pit.cpp	/^Pit::Pit(NameTree& nameTree)$/;"	f	class:nfd::Pit
Pit	daemon/table/pit.hpp	/^class Pit : noncopyable$/;"	c	namespace:nfd
PitEntryInfo	daemon/fw/ncc-strategy.hpp	/^  class PitEntryInfo : public StrategyInfo$/;"	c	class:nfd::fw::NccStrategy
PitInfo	daemon/fw/access-strategy.hpp	/^  class PitInfo : public StrategyInfo$/;"	c	class:nfd::fw::AccessStrategy
PitInfo	daemon/fw/retx-suppression-exponential.cpp	/^  PitInfo(const Duration& initialInterval)$/;"	f	class:nfd::fw::RetxSuppressionExponential::PitInfo
PitInfo	daemon/fw/retx-suppression-exponential.cpp	/^class RetxSuppressionExponential::PitInfo : public StrategyInfo$/;"	c	class:nfd::fw::RetxSuppressionExponential	file:
Policy	daemon/table/cs-policy.cpp	/^Policy::Policy(const std::string& policyName)$/;"	f	class:nfd::cs::Policy
Policy	daemon/table/cs-policy.hpp	/^class Policy : noncopyable$/;"	c	namespace:nfd::cs
PrefixCollection	tools/ndn-autoconfig-server.cpp	/^class PrefixCollection : noncopyable$/;"	c	namespace:ndn	file:
PrefixPropagationParameters	rib/auto-prefix-propagator.hpp	/^  struct PrefixPropagationParameters$/;"	s	class:nfd::rib::AutoPrefixPropagator
PriorityFifoPolicy	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::PriorityFifoPolicy()$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
PriorityFifoPolicy	daemon/table/cs-policy-priority-fifo.hpp	/^class PriorityFifoPolicy : public Policy$/;"	c	namespace:nfd::cs::priority_fifo
PrivilegeHelper	core/privilege-helper.hpp	/^class PrivilegeHelper$/;"	c	namespace:nfd
PropagatedEntry	rib/propagated-entry.cpp	/^PropagatedEntry::PropagatedEntry()$/;"	f	class:nfd::rib::PropagatedEntry
PropagatedEntry	rib/propagated-entry.cpp	/^PropagatedEntry::PropagatedEntry(const PropagatedEntry& other)$/;"	f	class:nfd::rib::PropagatedEntry
PropagatedEntry	rib/propagated-entry.hpp	/^class PropagatedEntry$/;"	c	namespace:nfd::rib
PropagatedEntryIt	rib/auto-prefix-propagator.hpp	/^  typedef PropagatedEntryList::iterator PropagatedEntryIt;$/;"	t	class:nfd::rib::AutoPrefixPropagator
PropagatedEntryList	rib/auto-prefix-propagator.hpp	/^  typedef std::unordered_map<Name, PropagatedEntry> PropagatedEntryList;$/;"	t	class:nfd::rib::AutoPrefixPropagator
PropagationStatus	rib/propagated-entry.hpp	/^enum class PropagationStatus {$/;"	c	namespace:nfd::rib
ProtocolFactory	daemon/face/protocol-factory.hpp	/^class ProtocolFactory$/;"	c	namespace:nfd
QUEUE_FIFO	daemon/table/cs-policy-priority-fifo.hpp	/^  QUEUE_FIFO,$/;"	e	enum:nfd::cs::priority_fifo::QueueType
QUEUE_MAX	daemon/table/cs-policy-priority-fifo.hpp	/^  QUEUE_MAX$/;"	e	enum:nfd::cs::priority_fifo::QueueType
QUEUE_STALE	daemon/table/cs-policy-priority-fifo.hpp	/^  QUEUE_STALE,$/;"	e	enum:nfd::cs::priority_fifo::QueueType
QUEUE_UNSOLICITED	daemon/table/cs-policy-priority-fifo.hpp	/^  QUEUE_UNSOLICITED,$/;"	e	enum:nfd::cs::priority_fifo::QueueType
QueryAnswer	tools/ndn-autoconfig/base-dns.cpp	/^union BaseDns::QueryAnswer$/;"	u	class:ndn::tools::autoconfig::BaseDns	file:
Queue	daemon/table/cs-policy-lru.hpp	/^  > Queue;$/;"	t	namespace:nfd::cs::lru
Queue	daemon/table/cs-policy-priority-fifo.hpp	/^typedef std::list<iterator> Queue;$/;"	t	namespace:nfd::cs::priority_fifo
Queue	daemon/table/dead-nonce-list.hpp	/^  typedef Index::nth_index<0>::type Queue;$/;"	t	class:nfd::DeadNonceList
QueueIt	daemon/table/cs-policy-priority-fifo.hpp	/^typedef Queue::iterator QueueIt;$/;"	t	namespace:nfd::cs::priority_fifo
QueueType	daemon/table/cs-policy-priority-fifo.hpp	/^enum QueueType {$/;"	g	namespace:nfd::cs::priority_fifo
READING	websocketpp/websocketpp/transport/asio/security/none.hpp	/^        READING = 2$/;"	e	enum:websocketpp::transport::asio::basic_socket::connection::state
READY	websocketpp/websocketpp/processors/hybi00.hpp	/^        READY = 2,$/;"	e	enum:websocketpp::processor::hybi00::state
READY	websocketpp/websocketpp/processors/hybi13.hpp	/^        READY = 4,$/;"	e	enum:websocketpp::processor::hybi13::state
READY	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^        READY = 1,$/;"	e	enum:websocketpp::transport::asio::endpoint::state
READY	websocketpp/websocketpp/transport/asio/security/none.hpp	/^        READY = 1,$/;"	e	enum:websocketpp::transport::asio::basic_socket::connection::state
READ_HTTP_REQUEST	websocketpp/websocketpp/connection.hpp	/^        READ_HTTP_REQUEST = 2,$/;"	e	enum:websocketpp::session::internal_state::value
READ_HTTP_RESPONSE	websocketpp/websocketpp/connection.hpp	/^        READ_HTTP_RESPONSE = 4,$/;"	e	enum:websocketpp::session::internal_state::value
REASSEMBLER_LIFETIME	daemon/face/ethernet-face.cpp	/^const time::nanoseconds EthernetFace::REASSEMBLER_LIFETIME = time::seconds(60);$/;"	m	class:nfd::EthernetFace	file:
REASSEMBLER_LIFETIME	daemon/face/ethernet-face.hpp	/^  static const time::nanoseconds REASSEMBLER_LIFETIME;$/;"	m	class:nfd::EthernetFace
REGISTER	rib/rib-update.hpp	/^    REGISTER     = 0,$/;"	e	enum:nfd::rib::RibUpdate::Action
REGISTER_COMMAND	tests/rib/rib-manager.t.cpp	/^  const Name REGISTER_COMMAND;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
REMOTE_COMMAND_PREFIX	rib/rib-manager.cpp	/^const Name RibManager::REMOTE_COMMAND_PREFIX = "\/localhop\/nfd\/rib";$/;"	m	class:nfd::rib::RibManager	file:
REMOTE_COMMAND_PREFIX	rib/rib-manager.hpp	/^  static const Name REMOTE_COMMAND_PREFIX; \/\/ \/localhop\/nrd$/;"	m	class:nfd::rib::RibManager
REMOVE_FACE	rib/rib-update.hpp	/^    REMOVE_FACE = 2$/;"	e	enum:nfd::rib::RibUpdate::Action
REMOVE_NEXTHOP	rib/fib-update.hpp	/^    REMOVE_NEXTHOP = 1$/;"	e	enum:nfd::rib::FibUpdate::Action
REMOVE_NEXTHOP_VERB	tests/rib/rib-manager.t.cpp	/^  const Name::Component REMOVE_NEXTHOP_VERB;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
RESPONSE_LINE	websocketpp/websocketpp/http/response.hpp	/^        RESPONSE_LINE = 0,$/;"	e	enum:websocketpp::http::parser::response::state
REVISION	waf	/^REVISION="8a9ccbc1c5d3936b0b08e972e4883a9a"$/;"	v
RIB_TESTS_UNIT_TESTS_RIB_STATUS_PUBLISHER_COMMON_HPP	tests/rib/rib-status-publisher-common.hpp	27;"	d
RPATH_ST	build/c4che/_cache.py	/^RPATH_ST = '-Wl,-rpath,%s'$/;"	v
RSV3	websocketpp/websocketpp/frame.hpp	/^        RSV3 = 0x3,$/;"	e	enum:websocketpp::frame::opcode::value
RSV4	websocketpp/websocketpp/frame.hpp	/^        RSV4 = 0x4,$/;"	e	enum:websocketpp::frame::opcode::value
RSV5	websocketpp/websocketpp/frame.hpp	/^        RSV5 = 0x5,$/;"	e	enum:websocketpp::frame::opcode::value
RSV6	websocketpp/websocketpp/frame.hpp	/^        RSV6 = 0x6,$/;"	e	enum:websocketpp::frame::opcode::value
RSV7	websocketpp/websocketpp/frame.hpp	/^        RSV7 = 0x7,$/;"	e	enum:websocketpp::frame::opcode::value
ReassembleFixture	tests/daemon/face/ndnlp.t.cpp	/^  ReassembleFixture()$/;"	f	class:nfd::ndnlp::tests::ReassembleFixture
ReassembleFixture	tests/daemon/face/ndnlp.t.cpp	/^class ReassembleFixture : protected UnitTestTimeFixture$/;"	c	namespace:nfd::ndnlp::tests	file:
Reassembler	daemon/face/ethernet-face.hpp	/^  struct Reassembler$/;"	s	class:nfd::EthernetFace
RejectPendingInterestArgs	tests/daemon/fw/strategy-tester.hpp	/^  struct RejectPendingInterestArgs$/;"	s	class:nfd::fw::tests::StrategyTester
Result	daemon/fw/retx-suppression.hpp	/^  enum Result {$/;"	g	class:nfd::fw::RetxSuppression
RetxSuppression	daemon/fw/retx-suppression.hpp	/^class RetxSuppression : noncopyable$/;"	c	namespace:nfd::fw
RetxSuppressionExponential	daemon/fw/retx-suppression-exponential.cpp	/^RetxSuppressionExponential::RetxSuppressionExponential(const Duration& initialInterval,$/;"	f	class:nfd::fw::RetxSuppressionExponential
RetxSuppressionExponential	daemon/fw/retx-suppression-exponential.hpp	/^class RetxSuppressionExponential : public RetxSuppression$/;"	c	namespace:nfd::fw
RetxSuppressionFixed	daemon/fw/retx-suppression-fixed.cpp	/^RetxSuppressionFixed::RetxSuppressionFixed(const time::milliseconds& minRetxInterval)$/;"	f	class:nfd::fw::RetxSuppressionFixed
RetxSuppressionFixed	daemon/fw/retx-suppression-fixed.hpp	/^class RetxSuppressionFixed : public RetxSuppression$/;"	c	namespace:nfd::fw
Rib	rib/rib.cpp	/^Rib::Rib()$/;"	f	class:nfd::rib::Rib
Rib	rib/rib.hpp	/^class Rib : noncopyable$/;"	c	namespace:nfd::rib
RibEntry	rib/rib-entry.hpp	/^  RibEntry()$/;"	f	class:nfd::rib::RibEntry
RibEntry	rib/rib-entry.hpp	/^class RibEntry : public enable_shared_from_this<RibEntry>$/;"	c	namespace:nfd::rib
RibEntryList	rib/rib.hpp	/^  typedef std::list<shared_ptr<RibEntry>> RibEntryList;$/;"	t	class:nfd::rib::Rib
RibManager	rib/rib-manager.cpp	/^RibManager::RibManager(ndn::Face& face, ndn::KeyChain& keyChain)$/;"	f	class:nfd::rib::RibManager
RibManager	rib/rib-manager.hpp	/^class RibManager : noncopyable$/;"	c	namespace:nfd::rib
RibManagerFixture	tests/rib/rib-manager.t.cpp	/^  RibManagerFixture()$/;"	f	class:nfd::rib::tests::RibManagerFixture
RibManagerFixture	tests/rib/rib-manager.t.cpp	/^class RibManagerFixture : public nfd::tests::BaseFixture$/;"	c	namespace:nfd::rib::tests	file:
RibStatusPublisher	rib/rib-status-publisher.cpp	/^RibStatusPublisher::RibStatusPublisher(const Rib& rib,$/;"	f	class:nfd::rib::RibStatusPublisher
RibStatusPublisher	rib/rib-status-publisher.hpp	/^class RibStatusPublisher : public SegmentPublisher<ndn::Face>$/;"	c	namespace:nfd::rib
RibStatusPublisherFixture	tests/rib/rib-status-publisher-common.hpp	/^class RibStatusPublisherFixture : public nfd::tests::BaseFixture$/;"	c	namespace:nfd::rib::tests
RibTable	rib/rib.hpp	/^  typedef std::map<Name, shared_ptr<RibEntry>> RibTable;$/;"	t	class:nfd::rib::Rib
RibUpdate	rib/rib-update.cpp	/^RibUpdate::RibUpdate()$/;"	f	class:nfd::rib::RibUpdate
RibUpdate	rib/rib-update.hpp	/^class RibUpdate$/;"	c	namespace:nfd::rib
RibUpdateBatch	rib/rib-update-batch.cpp	/^RibUpdateBatch::RibUpdateBatch(uint64_t faceId)$/;"	f	class:nfd::rib::RibUpdateBatch
RibUpdateBatch	rib/rib-update-batch.hpp	/^class RibUpdateBatch$/;"	c	namespace:nfd::rib
RibUpdateList	rib/rib-update-batch.hpp	/^typedef std::list<RibUpdate> RibUpdateList;$/;"	t	namespace:nfd::rib
Rotate	core/city-hash.cpp	/^static uint64 Rotate(uint64 val, int shift) {$/;"	f	file:
Rotate32	core/city-hash.cpp	/^static uint32 Rotate32(uint32 val, int shift) {$/;"	f	file:
Route	rib/route.hpp	/^  Route()$/;"	f	class:nfd::rib::Route
Route	rib/route.hpp	/^class Route$/;"	c	namespace:nfd::rib
RouteComparePredicate	rib/rib.hpp	/^  typedef bool (*RouteComparePredicate)(const Route&, const Route&);$/;"	t	class:nfd::rib::Rib
RouteList	rib/rib-entry.hpp	/^  typedef std::list<Route> RouteList;$/;"	t	class:nfd::rib::RibEntry
RouteSet	rib/rib.hpp	/^  typedef std::set<Route, RouteComparePredicate> RouteSet;$/;"	t	class:nfd::rib::Rib
RttEstimator	daemon/fw/rtt-estimator.cpp	/^RttEstimator::RttEstimator(uint16_t maxMultiplier, Duration minRto, double gain)$/;"	f	class:nfd::RttEstimator
RttEstimator	daemon/fw/rtt-estimator.hpp	/^class RttEstimator$/;"	c	namespace:nfd
SBINDIR	build/c4che/_cache.py	/^SBINDIR = '\/usr\/local\/sbin'$/;"	v
SET	websocketpp/websocketpp/common/md5.hpp	240;"	d
SET	websocketpp/websocketpp/common/md5.hpp	260;"	d
SET	websocketpp/websocketpp/common/md5.hpp	266;"	d
SET	websocketpp/websocketpp/common/md5.hpp	286;"	d
SET	websocketpp/websocketpp/common/md5.hpp	292;"	d
SET	websocketpp/websocketpp/common/md5.hpp	312;"	d
SET	websocketpp/websocketpp/common/md5.hpp	318;"	d
SET	websocketpp/websocketpp/common/md5.hpp	338;"	d
SHA1_DEFINED	websocketpp/websocketpp/sha1/sha1.hpp	37;"	d
SHAREDSTATEDIR	build/c4che/_cache.py	/^SHAREDSTATEDIR = '\/usr\/local\/com'$/;"	v
SHLIB_MARKER	build/c4che/_cache.py	/^SHLIB_MARKER = '-Wl,-Bdynamic'$/;"	v
SIGNED_COMMAND_VERBS	rib/rib-manager.cpp	/^const RibManager::SignedVerbAndProcessor RibManager::SIGNED_COMMAND_VERBS[] =$/;"	m	class:nfd::rib::RibManager	file:
SIGNED_COMMAND_VERBS	rib/rib-manager.hpp	/^  static const SignedVerbAndProcessor SIGNED_COMMAND_VERBS[];$/;"	m	class:nfd::rib::RibManager
SONAME_ST	build/c4che/_cache.py	/^SONAME_ST = '-Wl,-h,%s'$/;"	v
SPHINX_BUILD	build/c4che/_cache.py	/^SPHINX_BUILD = ['\/usr\/bin\/sphinx-build']$/;"	v
STATUS_SERVER_DEFAULT_FRESHNESS	daemon/mgmt/forwarder-status-manager.cpp	/^const time::milliseconds STATUS_SERVER_DEFAULT_FRESHNESS = time::milliseconds(5000);$/;"	m	namespace:nfd	file:
STLIBPATH_ST	build/c4che/_cache.py	/^STLIBPATH_ST = '-L%s'$/;"	v
STLIB_MARKER	build/c4che/_cache.py	/^STLIB_MARKER = '-Wl,-Bstatic'$/;"	v
STLIB_ST	build/c4che/_cache.py	/^STLIB_ST = '-l%s'$/;"	v
STRATEGY_NAME	daemon/fw/access-strategy.hpp	/^  static const Name STRATEGY_NAME;$/;"	m	class:nfd::fw::AccessStrategy
STRATEGY_NAME	daemon/fw/best-route-strategy.hpp	/^  static const Name STRATEGY_NAME;$/;"	m	class:nfd::fw::BestRouteStrategy
STRATEGY_NAME	daemon/fw/best-route-strategy2.hpp	/^  static const Name STRATEGY_NAME;$/;"	m	class:nfd::fw::BestRouteStrategy2
STRATEGY_NAME	daemon/fw/broadcast-strategy.hpp	/^  static const Name STRATEGY_NAME;$/;"	m	class:nfd::fw::BroadcastStrategy
STRATEGY_NAME	daemon/fw/client-control-strategy.hpp	/^  static const Name STRATEGY_NAME;$/;"	m	class:nfd::fw::ClientControlStrategy
STRATEGY_NAME	daemon/fw/multicast-strategy.hpp	/^  static const Name STRATEGY_NAME;$/;"	m	class:nfd::fw::MulticastStrategy
STRATEGY_NAME	daemon/fw/ncc-strategy.hpp	/^  static const Name STRATEGY_NAME;$/;"	m	class:nfd::fw::NccStrategy
SUBSCRIBE	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    SUBSCRIBE,$/;"	e	enum:action_type	file:
SUPPRESS	daemon/fw/retx-suppression.hpp	/^    SUPPRESS$/;"	e	enum:nfd::fw::RetxSuppression::Result
SYSCONFDIR	build/c4che/_cache.py	/^SYSCONFDIR = '\/usr\/local\/etc'$/;"	v
SYSTEM	websocketpp/websocketpp/connection.hpp	/^        SYSTEM = 1,         \/\/ system call returned error, check that code$/;"	e	enum:websocketpp::session::fail::status::value
SchedulerFixture	tests/core/scheduler.t.cpp	/^  SchedulerFixture()$/;"	f	class:nfd::tests::SchedulerFixture
SchedulerFixture	tests/core/scheduler.t.cpp	/^class SchedulerFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
ScopeLocalhostIncomingTestForwarder	tests/daemon/fw/forwarder.t.cpp	/^  ScopeLocalhostIncomingTestForwarder()$/;"	f	class:nfd::tests::ScopeLocalhostIncomingTestForwarder
ScopeLocalhostIncomingTestForwarder	tests/daemon/fw/forwarder.t.cpp	/^class ScopeLocalhostIncomingTestForwarder : public Forwarder$/;"	c	namespace:nfd::tests	file:
ScopedEventId	core/scheduler.cpp	/^ScopedEventId::ScopedEventId()$/;"	f	class:nfd::scheduler::ScopedEventId
ScopedEventId	core/scheduler.cpp	/^ScopedEventId::ScopedEventId(ScopedEventId&& other)$/;"	f	class:nfd::scheduler::ScopedEventId
ScopedEventId	core/scheduler.cpp	/^ScopedEventId::ScopedEventId(const EventId& event)$/;"	f	class:nfd::scheduler::ScopedEventId
ScopedEventId	core/scheduler.hpp	/^class ScopedEventId : noncopyable$/;"	c	namespace:nfd::scheduler
SegmentPublisher	core/segment-publisher.hpp	/^  SegmentPublisher(FaceBase& face,$/;"	f	class:nfd::SegmentPublisher
SegmentPublisher	core/segment-publisher.hpp	/^class SegmentPublisher : noncopyable$/;"	c	namespace:nfd
SegmentPublisherFixture	tests/core/segment-publisher.t.cpp	/^  SegmentPublisherFixture()$/;"	f	class:nfd::tests::SegmentPublisherFixture
SegmentPublisherFixture	tests/core/segment-publisher.t.cpp	/^class SegmentPublisherFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
SegmentPublisherTester	tests/core/segment-publisher.t.cpp	/^  SegmentPublisherTester(ndn::util::DummyClientFace& face,$/;"	f	class:nfd::tests::SegmentPublisherTester
SegmentPublisherTester	tests/core/segment-publisher.t.cpp	/^class SegmentPublisherTester : public SegmentPublisher<ndn::util::DummyClientFace>$/;"	c	namespace:nfd::tests	file:
SelfCancelFixture	tests/core/scheduler.t.cpp	/^class SelfCancelFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
SendInterestArgs	tests/daemon/fw/strategy-tester.hpp	/^  struct SendInterestArgs$/;"	s	class:nfd::fw::tests::StrategyTester
SendNackArgs	tests/daemon/fw/strategy-tester.hpp	/^  struct SendNackArgs$/;"	s	class:nfd::fw::tests::StrategyTester
SequenceBlock	daemon/face/ndnlp-sequence-generator.cpp	/^SequenceBlock::SequenceBlock(uint64_t start, size_t count)$/;"	f	class:nfd::ndnlp::SequenceBlock
SequenceBlock	daemon/face/ndnlp-sequence-generator.hpp	/^class SequenceBlock$/;"	c	namespace:nfd::ndnlp
SequenceGenerator	daemon/face/ndnlp-sequence-generator.cpp	/^SequenceGenerator::SequenceGenerator()$/;"	f	class:nfd::ndnlp::SequenceGenerator
SequenceGenerator	daemon/face/ndnlp-sequence-generator.hpp	/^class SequenceGenerator : noncopyable$/;"	c	namespace:nfd::ndnlp
Server	daemon/face/websocket-face.hpp	/^typedef websocketpp::server<websocketpp::config::asio> Server;$/;"	t	namespace:nfd::websocket
ShiftMix	core/city-hash.cpp	/^static uint64 ShiftMix(uint64 val) {$/;"	f	file:
SignedVerbAndProcessor	rib/rib-manager.hpp	/^  typedef std::pair<name::Component, SignedVerbProcessor> SignedVerbAndProcessor;$/;"	t	class:nfd::rib::RibManager
SignedVerbDispatchTable	rib/rib-manager.hpp	/^  typedef std::map<name::Component, SignedVerbProcessor> SignedVerbDispatchTable;$/;"	t	class:nfd::rib::RibManager
SignedVerbProcessor	rib/rib-manager.hpp	/^                        ControlParameters& parameters)> SignedVerbProcessor;$/;"	t	class:nfd::rib::RibManager
SimpleEndToEndFixture	tests/daemon/face/tcp.t.cpp	/^class SimpleEndToEndFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
SimpleNameGenerator	tests/other/cs-benchmark.cpp	/^    SimpleNameGenerator(const Name& prefix = "\/cs\/benchmark")$/;"	f	class:nfd::tests::CsBenchmarkFixture::SimpleNameGenerator
SimpleNameGenerator	tests/other/cs-benchmark.cpp	/^  class SimpleNameGenerator$/;"	c	class:nfd::tests::CsBenchmarkFixture	file:
SimpleNotification	tests/core/simple-notification.hpp	/^  SimpleNotification()$/;"	f	class:nfd::tests::SimpleNotification
SimpleNotification	tests/core/simple-notification.hpp	/^  SimpleNotification(const std::string& message)$/;"	f	class:nfd::tests::SimpleNotification
SimpleNotification	tests/core/simple-notification.hpp	/^class SimpleNotification$/;"	c	namespace:nfd::tests
Slicer	daemon/face/ndnlp-slicer.cpp	/^Slicer::Slicer(size_t mtu)$/;"	f	class:nfd::ndnlp::Slicer
Slicer	daemon/face/ndnlp-slicer.hpp	/^class Slicer : noncopyable$/;"	c	namespace:nfd::ndnlp
Socket	tests/daemon/face/dummy-stream-sender.hpp	/^  typedef typename Protocol::socket Socket;$/;"	t	class:nfd::tests::DummyStreamSender
StatusHandler	tools/nfd-status-http-server.py	/^class StatusHandler(SimpleHTTPRequestHandler):$/;"	c
StopException	tests/limited-io.hpp	/^  class StopException : public std::exception$/;"	c	class:nfd::tests::LimitedIo
StopReason	tests/limited-io.hpp	/^  enum StopReason$/;"	g	class:nfd::tests::LimitedIo
Strategy	daemon/fw/strategy.cpp	/^Strategy::Strategy(Forwarder& forwarder, const Name& name)$/;"	f	class:nfd::fw::Strategy
Strategy	daemon/fw/strategy.hpp	/^class Strategy : public enable_shared_from_this<Strategy>, noncopyable$/;"	c	namespace:nfd::fw
StrategyChoice	daemon/table/strategy-choice.cpp	/^StrategyChoice::StrategyChoice(NameTree& nameTree, shared_ptr<Strategy> defaultStrategy)$/;"	f	class:nfd::StrategyChoice
StrategyChoice	daemon/table/strategy-choice.hpp	/^class StrategyChoice : noncopyable$/;"	c	namespace:nfd
StrategyChoice	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^  StrategyChoice(const ndn::nfd::StrategyChoice& entry)$/;"	f	class:nfd::tests::StrategyChoice
StrategyChoice	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^class StrategyChoice : public ndn::nfd::StrategyChoice$/;"	c	namespace:nfd::tests	file:
StrategyChoiceManager	daemon/mgmt/strategy-choice-manager.cpp	/^StrategyChoiceManager::StrategyChoiceManager(StrategyChoice& strategyChoice,$/;"	f	class:nfd::StrategyChoiceManager
StrategyChoiceManager	daemon/mgmt/strategy-choice-manager.hpp	/^class StrategyChoiceManager : public ManagerBase$/;"	c	namespace:nfd
StrategyChoiceManagerFixture	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^  StrategyChoiceManagerFixture()$/;"	f	class:nfd::tests::StrategyChoiceManagerFixture
StrategyChoiceManagerFixture	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^class StrategyChoiceManagerFixture : public ManagerCommonFixture$/;"	c	namespace:nfd::tests	file:
StrategyCreateFunc	daemon/fw/strategy-registry.hpp	/^typedef std::function<shared_ptr<Strategy>(Forwarder&)> StrategyCreateFunc;$/;"	t	namespace:nfd::fw
StrategyInfo	daemon/fw/strategy-info.hpp	/^class StrategyInfo$/;"	c	namespace:nfd::fw
StrategyInfoHost	daemon/table/strategy-info-host.hpp	/^class StrategyInfoHost$/;"	c	namespace:nfd
StrategyInstanceTable	daemon/table/strategy-choice.hpp	/^  typedef std::map<Name, shared_ptr<fw::Strategy> > StrategyInstanceTable;$/;"	t	class:nfd::StrategyChoice
StrategyTester	tests/daemon/fw/strategy-tester.hpp	/^  StrategyTester(Forwarder& forwarder)$/;"	f	class:nfd::fw::tests::StrategyTester
StrategyTester	tests/daemon/fw/strategy-tester.hpp	/^class StrategyTester : public S$/;"	c	namespace:nfd::fw::tests
StreamFace	daemon/face/stream-face.hpp	/^StreamFace<T, FaceBase>::StreamFace(const FaceUri& remoteUri, const FaceUri& localUri,$/;"	f	class:nfd::StreamFace
StreamFace	daemon/face/stream-face.hpp	/^class StreamFace : public FaceBase$/;"	c	namespace:nfd
StreamFaceSenderImpl	daemon/face/stream-face.hpp	/^struct StreamFaceSenderImpl$/;"	s	namespace:nfd
StreamFaceSenderImpl	daemon/face/stream-face.hpp	/^struct StreamFaceSenderImpl<Protocol, LocalFace, Packet>$/;"	s	namespace:nfd
StreamFaceValidator	daemon/face/stream-face.hpp	/^struct StreamFaceValidator$/;"	s	namespace:nfd
StreamFaceValidator	daemon/face/tcp-face.hpp	/^struct StreamFaceValidator<TcpLocalFace::protocol, LocalFace>$/;"	s	namespace:nfd
StreamTransport	daemon/face/stream-transport.hpp	/^StreamTransport<T>::StreamTransport(typename StreamTransport::protocol::socket&& socket)$/;"	f	class:nfd::face::StreamTransport
StreamTransport	daemon/face/stream-transport.hpp	/^class StreamTransport : public Transport$/;"	c	namespace:nfd::face
Success	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class Success$/;"	c	namespace:nfd::tests	file:
SuccessCallback	tools/nfdc.hpp	/^    typedef std::function<void(uint32_t)> SuccessCallback;$/;"	t	class:nfdc::Nfdc::FaceIdFetcher
TAR	build/c4che/_cache.py	/^TAR = ['\/bin\/tar']$/;"	v
TEXT	websocketpp/websocketpp/frame.hpp	/^        TEXT = 0x1,$/;"	e	enum:websocketpp::frame::opcode::value
TIMEOUT_TLS	websocketpp/websocketpp/connection.hpp	/^        TIMEOUT_TLS = 4,    \/\/ TLS handshake timed out$/;"	e	enum:websocketpp::session::fail::status::value
TIMEOUT_WS	websocketpp/websocketpp/connection.hpp	/^        TIMEOUT_WS = 5      \/\/ WS handshake timed out$/;"	e	enum:websocketpp::session::fail::status::value
TRANSPORT_INIT	websocketpp/websocketpp/connection.hpp	/^        TRANSPORT_INIT = 1,$/;"	e	enum:websocketpp::session::internal_state::value
TYP_BIGE	websocketpp/websocketpp/common/network.hpp	51;"	d
TYP_INIT	websocketpp/websocketpp/common/network.hpp	49;"	d
TYP_SMLE	websocketpp/websocketpp/common/network.hpp	50;"	d
Table	daemon/table/cs-internal.hpp	/^typedef std::set<EntryImpl> Table;$/;"	t	namespace:nfd::cs
TablesConfigSection	daemon/mgmt/tables-config-section.cpp	/^TablesConfigSection::TablesConfigSection(Cs& cs,$/;"	f	class:nfd::TablesConfigSection
TablesConfigSection	daemon/mgmt/tables-config-section.hpp	/^class TablesConfigSection$/;"	c	namespace:nfd
TablesConfigSectionFixture	tests/daemon/mgmt/tables-config-section.t.cpp	/^  TablesConfigSectionFixture()$/;"	f	class:nfd::tests::TablesConfigSectionFixture
TablesConfigSectionFixture	tests/daemon/mgmt/tables-config-section.t.cpp	/^class TablesConfigSectionFixture : protected BaseFixture$/;"	c	namespace:nfd::tests	file:
TcpChannel	daemon/face/tcp-channel.cpp	/^TcpChannel::TcpChannel(const tcp::Endpoint& localEndpoint)$/;"	f	class:nfd::TcpChannel
TcpChannel	daemon/face/tcp-channel.hpp	/^class TcpChannel : public Channel$/;"	c	namespace:nfd
TcpFace	daemon/face/tcp-face.cpp	/^TcpFace::TcpFace(const FaceUri& remoteUri, const FaceUri& localUri,$/;"	f	class:nfd::TcpFace
TcpFace	daemon/face/tcp-face.hpp	/^class TcpFace : public StreamFace<boost::asio::ip::tcp>$/;"	c	namespace:nfd
TcpFaceOnDemand	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class TcpFaceOnDemand$/;"	c	namespace:nfd::tests	file:
TcpFacePermanent	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class TcpFacePermanent$/;"	c	namespace:nfd::tests	file:
TcpFacePersistent	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class TcpFacePersistent$/;"	c	namespace:nfd::tests	file:
TcpFactory	daemon/face/tcp-factory.hpp	/^class TcpFactory : public ProtocolFactory$/;"	c	namespace:nfd
TcpLocalFace	daemon/face/tcp-face.cpp	/^TcpLocalFace::TcpLocalFace(const FaceUri& remoteUri, const FaceUri& localUri,$/;"	f	class:nfd::TcpLocalFace
TcpLocalFace	daemon/face/tcp-face.hpp	/^class TcpLocalFace : public StreamFace<boost::asio::ip::tcp, LocalFace>$/;"	c	namespace:nfd
TestChannel	tests/daemon/mgmt/face-manager.t.cpp	/^  TestChannel(const std::string& uri)$/;"	f	class:nfd::tests::TestChannel
TestChannel	tests/daemon/mgmt/face-manager.t.cpp	/^class TestChannel : public Channel$/;"	c	namespace:nfd::tests	file:
TestCommandRequireName	tests/daemon/mgmt/manager-base.t.cpp	/^  TestCommandRequireName()$/;"	f	class:nfd::tests::TestCommandRequireName
TestCommandRequireName	tests/daemon/mgmt/manager-base.t.cpp	/^class TestCommandRequireName : public ndn::nfd::ControlCommand$/;"	c	namespace:nfd::tests	file:
TestCommandVoidParameters	tests/daemon/mgmt/manager-base.t.cpp	/^  TestCommandVoidParameters()$/;"	f	class:nfd::tests::TestCommandVoidParameters
TestCommandVoidParameters	tests/daemon/mgmt/manager-base.t.cpp	/^class TestCommandVoidParameters : public ndn::nfd::ControlCommand$/;"	c	namespace:nfd::tests	file:
TestFace	tests/daemon/mgmt/face-manager.t.cpp	/^  TestFace(const std::string& uri = "test:\/\/")$/;"	f	class:nfd::tests::TestFace
TestFace	tests/daemon/mgmt/face-manager.t.cpp	/^class TestFace : public DummyFace$/;"	c	namespace:nfd::tests	file:
TestProtocolFactory	tests/daemon/mgmt/face-manager.t.cpp	/^class TestProtocolFactory : public ProtocolFactory$/;"	c	namespace:nfd::tests	file:
ThreadHttpServer	tools/nfd-status-http-server.py	/^class ThreadHttpServer(ThreadingMixIn, HTTPServer):$/;"	c
TopologyAppLink	tests/daemon/fw/topology-tester.cpp	/^TopologyAppLink::TopologyAppLink(shared_ptr<LpFaceWrapper> forwarderFace)$/;"	f	class:nfd::fw::tests::TopologyAppLink
TopologyAppLink	tests/daemon/fw/topology-tester.hpp	/^class TopologyAppLink : noncopyable$/;"	c	namespace:nfd::fw::tests
TopologyLink	tests/daemon/fw/topology-tester.cpp	/^TopologyLink::TopologyLink(const time::nanoseconds& delay)$/;"	f	class:nfd::fw::tests::TopologyLink
TopologyLink	tests/daemon/fw/topology-tester.hpp	/^class TopologyLink : noncopyable$/;"	c	namespace:nfd::fw::tests
TopologyNode	tests/daemon/fw/topology-tester.hpp	/^typedef size_t TopologyNode;$/;"	t	namespace:nfd::fw::tests
TopologyTester	tests/daemon/fw/topology-tester.hpp	/^class TopologyTester : noncopyable$/;"	c	namespace:nfd::fw::tests
Transport	daemon/face/transport.cpp	/^Transport::Transport()$/;"	f	class:nfd::face::Transport
Transport	daemon/face/transport.hpp	/^class Transport : noncopyable$/;"	c	namespace:nfd::face
TransportState	daemon/face/transport.hpp	/^enum class TransportState {$/;"	c	namespace:nfd::face
TwoLaptopsFixture	tests/daemon/fw/access-strategy.t.cpp	/^  TwoLaptopsFixture()$/;"	f	class:nfd::fw::tests::TwoLaptopsFixture
TwoLaptopsFixture	tests/daemon/fw/access-strategy.t.cpp	/^class TwoLaptopsFixture : public UnitTestTimeFixture$/;"	c	namespace:nfd::fw::tests	file:
TwoValidatorFixture	tests/daemon/mgmt/command-validator.t.cpp	/^  TwoValidatorFixture()$/;"	f	class:nfd::tests::TwoValidatorFixture
TwoValidatorFixture	tests/daemon/mgmt/command-validator.t.cpp	/^class TwoValidatorFixture : public BaseFixture$/;"	c	namespace:nfd::tests	file:
UNALIGNED_LOAD32	core/city-hash.cpp	/^static uint32 UNALIGNED_LOAD32(const char *p) {$/;"	f	file:
UNALIGNED_LOAD64	core/city-hash.cpp	/^static uint64 UNALIGNED_LOAD64(const char *p) {$/;"	f	file:
UNINITIALIZED	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^        UNINITIALIZED = 0,$/;"	e	enum:websocketpp::transport::asio::endpoint::state
UNINITIALIZED	websocketpp/websocketpp/transport/asio/security/none.hpp	/^        UNINITIALIZED = 0,$/;"	e	enum:websocketpp::transport::asio::basic_socket::connection::state
UNKNOWN	websocketpp/websocketpp/connection.hpp	/^        UNKNOWN = 3,        \/\/ No failure information is available$/;"	e	enum:websocketpp::session::fail::status::value
UNLIMITED_OPS	tests/limited-io.cpp	/^const int LimitedIo::UNLIMITED_OPS = std::numeric_limits<int>::max();$/;"	m	class:nfd::tests::LimitedIo	file:
UNLIMITED_OPS	tests/limited-io.hpp	/^  static const int UNLIMITED_OPS;$/;"	m	class:nfd::tests::LimitedIo
UNLIMITED_TIME	tests/limited-io.cpp	/^const time::nanoseconds LimitedIo::UNLIMITED_TIME = time::nanoseconds::min();$/;"	m	class:nfd::tests::LimitedIo	file:
UNLIMITED_TIME	tests/limited-io.hpp	/^  static const time::nanoseconds UNLIMITED_TIME;$/;"	m	class:nfd::tests::LimitedIo
UNREGISTER	rib/rib-update.hpp	/^    UNREGISTER   = 1,$/;"	e	enum:nfd::rib::RibUpdate::Action
UNREGISTER_COMMAND	tests/rib/rib-manager.t.cpp	/^  const Name UNREGISTER_COMMAND;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
UNSIGNED_COMMAND_VERBS	rib/rib-manager.cpp	/^const RibManager::UnsignedVerbAndProcessor RibManager::UNSIGNED_COMMAND_VERBS[] =$/;"	m	class:nfd::rib::RibManager	file:
UNSIGNED_COMMAND_VERBS	rib/rib-manager.hpp	/^  static const UnsignedVerbAndProcessor UNSIGNED_COMMAND_VERBS[];$/;"	m	class:nfd::rib::RibManager
UNSUBSCRIBE	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    UNSUBSCRIBE,$/;"	e	enum:action_type	file:
UP	daemon/face/transport.hpp	/^  UP, \/\/\/< the transport is up$/;"	m	class:nfd::face::TransportState
UPDATE_MEASUREMENTS_N_LEVELS	daemon/fw/ncc-strategy.hpp	/^  static const int UPDATE_MEASUREMENTS_N_LEVELS = 2;$/;"	m	class:nfd::fw::NccStrategy
USER_INIT	websocketpp/websocketpp/connection.hpp	/^        USER_INIT = 0,$/;"	e	enum:websocketpp::session::internal_state::value
UTF8_VALIDATOR_HPP	websocketpp/websocketpp/utf8_validator.hpp	30;"	d
UdpChannel	daemon/face/udp-channel.cpp	/^UdpChannel::UdpChannel(const udp::Endpoint& localEndpoint,$/;"	f	class:nfd::UdpChannel
UdpChannel	daemon/face/udp-channel.hpp	/^class UdpChannel : public Channel$/;"	c	namespace:nfd
UdpFace	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class UdpFace$/;"	c	namespace:nfd::tests	file:
UdpFaceCannotConnect	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class UdpFaceCannotConnect \/\/ face that will cause afterCreateFaceFailure to be invoked$/;"	c	namespace:nfd::tests	file:
UdpFaceOnDemand	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class UdpFaceOnDemand$/;"	c	namespace:nfd::tests	file:
UdpFacePermanent	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class UdpFacePermanent$/;"	c	namespace:nfd::tests	file:
UdpFacePersistent	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^class UdpFacePersistent$/;"	c	namespace:nfd::tests	file:
UdpFactory	daemon/face/udp-factory.hpp	/^class UdpFactory : public ProtocolFactory$/;"	c	namespace:nfd
Uint128High64	core/city-hash.hpp	/^inline uint64 Uint128High64(const uint128& x) { return x.second; }$/;"	f
Uint128Low64	core/city-hash.hpp	/^inline uint64 Uint128Low64(const uint128& x) { return x.first; }$/;"	f
UnauthorizedRibManager	tests/rib/rib-manager.t.cpp	/^typedef RibManagerFixture UnauthorizedRibManager;$/;"	t	namespace:nfd::rib::tests	file:
Unicast	daemon/face/datagram-transport.hpp	/^struct Unicast {};$/;"	s	namespace:nfd::face
UnicastUdpTransport	daemon/face/unicast-udp-transport.cpp	/^UnicastUdpTransport::UnicastUdpTransport(protocol::socket&& socket,$/;"	f	class:nfd::face::UnicastUdpTransport
UnicastUdpTransport	daemon/face/unicast-udp-transport.hpp	/^class UnicastUdpTransport : public DatagramTransport<boost::asio::ip::udp, Unicast>$/;"	c	namespace:nfd::face
UnitTestTimeFixture	tests/test-common.hpp	/^  UnitTestTimeFixture()$/;"	f	class:nfd::tests::UnitTestTimeFixture
UnitTestTimeFixture	tests/test-common.hpp	/^class UnitTestTimeFixture : public virtual BaseFixture$/;"	c	namespace:nfd::tests
UnixStreamChannel	daemon/face/unix-stream-channel.cpp	/^UnixStreamChannel::UnixStreamChannel(const unix_stream::Endpoint& endpoint)$/;"	f	class:nfd::UnixStreamChannel
UnixStreamChannel	daemon/face/unix-stream-channel.hpp	/^class UnixStreamChannel : public Channel$/;"	c	namespace:nfd
UnixStreamFactory	daemon/face/unix-stream-factory.hpp	/^class UnixStreamFactory : public ProtocolFactory$/;"	c	namespace:nfd
UnixStreamTransport	daemon/face/unix-stream-transport.cpp	/^UnixStreamTransport::UnixStreamTransport(protocol::socket&& socket)$/;"	f	class:nfd::face::UnixStreamTransport
UnixStreamTransport	daemon/face/unix-stream-transport.hpp	/^class UnixStreamTransport : public StreamTransport<boost::asio::local::stream_protocol>$/;"	c	namespace:nfd::face
UnknownConfigSectionHandler	core/config-file.hpp	/^                      bool \/*isDryRun*\/)> UnknownConfigSectionHandler;$/;"	t	namespace:nfd
UnsignedVerbAndProcessor	rib/rib-manager.hpp	/^  typedef std::pair<Name::Component, UnsignedVerbProcessor> UnsignedVerbAndProcessor;$/;"	t	class:nfd::rib::RibManager
UnsignedVerbDispatchTable	rib/rib-manager.hpp	/^  typedef std::map<Name::Component, UnsignedVerbProcessor> UnsignedVerbDispatchTable;$/;"	t	class:nfd::rib::RibManager
UnsignedVerbProcessor	rib/rib-manager.hpp	/^  typedef function<void(RibManager*, const Interest&)> UnsignedVerbProcessor;$/;"	t	class:nfd::rib::RibManager
UpdateFailureCallback	rib/rib.hpp	/^  typedef function<void(uint32_t code, const std::string& error)> UpdateFailureCallback;$/;"	t	class:nfd::rib::Rib
UpdateQueue	rib/rib.hpp	/^  typedef std::list<UpdateQueueItem> UpdateQueue;$/;"	t	class:nfd::rib::Rib
UpdateQueueItem	rib/rib.hpp	/^  struct UpdateQueueItem$/;"	s	class:nfd::rib::Rib
UpdateSuccessCallback	rib/rib.hpp	/^  typedef function<void()> UpdateSuccessCallback;$/;"	t	class:nfd::rib::Rib
VERSION	waf	/^VERSION="1.8.9"$/;"	v
VIRTUAL_WITH_TESTS	common.hpp	32;"	d
VIRTUAL_WITH_TESTS	common.hpp	37;"	d
WAF	waf	/^WAF='waf'$/;"	v
WEBSOCKET	websocketpp/websocketpp/connection.hpp	/^        WEBSOCKET = 2,      \/\/ websocket close codes contain error$/;"	e	enum:websocketpp::session::fail::status::value
WEBSOCKETPP_CLIENT_ENDPOINT_HPP	websocketpp/websocketpp/roles/client_endpoint.hpp	29;"	d
WEBSOCKETPP_CLIENT_HPP	websocketpp/websocketpp/client.hpp	29;"	d
WEBSOCKETPP_CLOSE_HPP	websocketpp/websocketpp/close.hpp	30;"	d
WEBSOCKETPP_COMMON_CHRONO_HPP	websocketpp/websocketpp/common/chrono.hpp	29;"	d
WEBSOCKETPP_COMMON_CONNECTION_HDL_HPP	websocketpp/websocketpp/common/connection_hdl.hpp	29;"	d
WEBSOCKETPP_COMMON_CPP11_HPP	websocketpp/websocketpp/common/cpp11.hpp	29;"	d
WEBSOCKETPP_COMMON_FUNCTIONAL_HPP	websocketpp/websocketpp/common/functional.hpp	29;"	d
WEBSOCKETPP_COMMON_MD5_HPP	websocketpp/websocketpp/common/md5.hpp	58;"	d
WEBSOCKETPP_COMMON_MEMORY_HPP	websocketpp/websocketpp/common/memory.hpp	29;"	d
WEBSOCKETPP_COMMON_NETWORK_HPP	websocketpp/websocketpp/common/network.hpp	29;"	d
WEBSOCKETPP_COMMON_PLATFORMS_HPP	websocketpp/websocketpp/common/platforms.hpp	29;"	d
WEBSOCKETPP_COMMON_RANDOM_DEVICE_HPP	websocketpp/websocketpp/common/random.hpp	29;"	d
WEBSOCKETPP_COMMON_REGEX_HPP	websocketpp/websocketpp/common/regex.hpp	29;"	d
WEBSOCKETPP_COMMON_STDINT_HPP	websocketpp/websocketpp/common/stdint.hpp	29;"	d
WEBSOCKETPP_COMMON_SYSTEM_ERROR_HPP	websocketpp/websocketpp/common/system_error.hpp	29;"	d
WEBSOCKETPP_COMMON_THREAD_HPP	websocketpp/websocketpp/common/thread.hpp	29;"	d
WEBSOCKETPP_COMMON_TIME_HPP	websocketpp/websocketpp/common/time.hpp	29;"	d
WEBSOCKETPP_CONCURRENCY_BASIC_HPP	websocketpp/websocketpp/concurrency/basic.hpp	29;"	d
WEBSOCKETPP_CONCURRENCY_NONE_HPP	websocketpp/websocketpp/concurrency/none.hpp	29;"	d
WEBSOCKETPP_CONFIG_ASIO_CLIENT_HPP	websocketpp/websocketpp/config/asio_no_tls_client.hpp	29;"	d
WEBSOCKETPP_CONFIG_ASIO_DEBUG_HPP	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	29;"	d
WEBSOCKETPP_CONFIG_ASIO_HPP	websocketpp/websocketpp/config/asio_no_tls.hpp	29;"	d
WEBSOCKETPP_CONFIG_ASIO_TLS_CLIENT_HPP	websocketpp/websocketpp/config/asio_client.hpp	29;"	d
WEBSOCKETPP_CONFIG_ASIO_TLS_DEBUG_HPP	websocketpp/websocketpp/config/debug_asio.hpp	29;"	d
WEBSOCKETPP_CONFIG_ASIO_TLS_HPP	websocketpp/websocketpp/config/asio.hpp	29;"	d
WEBSOCKETPP_CONFIG_BOOST_CONFIG_HPP	websocketpp/websocketpp/config/boost_config.hpp	33;"	d
WEBSOCKETPP_CONFIG_CORE_CLIENT_HPP	websocketpp/websocketpp/config/core_client.hpp	29;"	d
WEBSOCKETPP_CONFIG_CORE_HPP	websocketpp/websocketpp/config/core.hpp	29;"	d
WEBSOCKETPP_CONFIG_DEBUG_HPP	websocketpp/websocketpp/config/debug.hpp	29;"	d
WEBSOCKETPP_CONFIG_MINIMAL_CLIENT_HPP	websocketpp/websocketpp/config/minimal_client.hpp	29;"	d
WEBSOCKETPP_CONFIG_MINIMAL_HPP	websocketpp/websocketpp/config/minimal_server.hpp	29;"	d
WEBSOCKETPP_CONNECTION_BASE_HPP	websocketpp/websocketpp/connection_base.hpp	29;"	d
WEBSOCKETPP_CONNECTION_HPP	websocketpp/websocketpp/connection.hpp	29;"	d
WEBSOCKETPP_CONNECTION_IMPL_HPP	websocketpp/websocketpp/impl/connection_impl.hpp	29;"	d
WEBSOCKETPP_ECHO_SERVER_HANDLER_HPP	websocketpp/examples/echo_server/echo_handler.hpp	29;"	d
WEBSOCKETPP_ENDPOINT_BASE_HPP	websocketpp/websocketpp/endpoint_base.hpp	29;"	d
WEBSOCKETPP_ENDPOINT_HPP	websocketpp/websocketpp/endpoint.hpp	29;"	d
WEBSOCKETPP_ENDPOINT_IMPL_HPP	websocketpp/websocketpp/impl/endpoint_impl.hpp	29;"	d
WEBSOCKETPP_ERROR_HPP	websocketpp/websocketpp/error.hpp	29;"	d
WEBSOCKETPP_EXTENSION_HPP	websocketpp/websocketpp/extensions/extension.hpp	29;"	d
WEBSOCKETPP_EXTENSION_PERMESSAGE_DEFLATE_DISABLED_HPP	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	29;"	d
WEBSOCKETPP_FRAME_HPP	websocketpp/websocketpp/frame.hpp	29;"	d
WEBSOCKETPP_LOGGER_BASIC_HPP	websocketpp/websocketpp/logger/basic.hpp	29;"	d
WEBSOCKETPP_LOGGER_LEVELS_HPP	websocketpp/websocketpp/logger/levels.hpp	29;"	d
WEBSOCKETPP_LOGGER_STUB_HPP	websocketpp/websocketpp/logger/stub.hpp	29;"	d
WEBSOCKETPP_LOGGER_SYSLOG_HPP	websocketpp/websocketpp/logger/syslog.hpp	32;"	d
WEBSOCKETPP_MESSAGE_BUFFER_ALLOC_HPP	websocketpp/websocketpp/message_buffer/alloc.hpp	29;"	d
WEBSOCKETPP_MESSAGE_BUFFER_ALLOC_HPP	websocketpp/websocketpp/message_buffer/pool.hpp	29;"	d
WEBSOCKETPP_MESSAGE_BUFFER_MESSAGE_HPP	websocketpp/websocketpp/message_buffer/message.hpp	29;"	d
WEBSOCKETPP_PROCESSOR_BASE_HPP	websocketpp/websocketpp/processors/base.hpp	29;"	d
WEBSOCKETPP_PROCESSOR_EXTENSION_PERMESSAGEDEFLATE_HPP	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	29;"	d
WEBSOCKETPP_PROCESSOR_HPP	websocketpp/websocketpp/processors/processor.hpp	29;"	d
WEBSOCKETPP_PROCESSOR_HYBI00_HPP	websocketpp/websocketpp/processors/hybi00.hpp	29;"	d
WEBSOCKETPP_PROCESSOR_HYBI07_HPP	websocketpp/websocketpp/processors/hybi07.hpp	29;"	d
WEBSOCKETPP_PROCESSOR_HYBI08_HPP	websocketpp/websocketpp/processors/hybi08.hpp	29;"	d
WEBSOCKETPP_PROCESSOR_HYBI13_HPP	websocketpp/websocketpp/processors/hybi13.hpp	29;"	d
WEBSOCKETPP_RANDOM_NONE_HPP	websocketpp/websocketpp/random/none.hpp	29;"	d
WEBSOCKETPP_RANDOM_RANDOM_DEVICE_HPP	websocketpp/websocketpp/random/random_device.hpp	29;"	d
WEBSOCKETPP_SERVER_ENDPOINT_HPP	websocketpp/websocketpp/roles/server_endpoint.hpp	29;"	d
WEBSOCKETPP_SERVER_HPP	websocketpp/websocketpp/server.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_ASIO_BASE_HPP	websocketpp/websocketpp/transport/asio/base.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_ASIO_CON_HPP	websocketpp/websocketpp/transport/asio/connection.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_ASIO_HPP	websocketpp/websocketpp/transport/asio/endpoint.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_ASIO_SOCKET_BASE_HPP	websocketpp/websocketpp/transport/asio/security/base.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_BASE_CON_HPP	websocketpp/websocketpp/transport/base/connection.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_BASE_HPP	websocketpp/websocketpp/transport/base/endpoint.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_DEBUG_BASE_HPP	websocketpp/websocketpp/transport/debug/base.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_DEBUG_CON_HPP	websocketpp/websocketpp/transport/debug/connection.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_DEBUG_HPP	websocketpp/websocketpp/transport/debug/endpoint.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_IOSTREAM_BASE_HPP	websocketpp/websocketpp/transport/iostream/base.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_IOSTREAM_CON_HPP	websocketpp/websocketpp/transport/iostream/connection.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_IOSTREAM_HPP	websocketpp/websocketpp/transport/iostream/endpoint.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_SECURITY_NONE_HPP	websocketpp/websocketpp/transport/asio/security/none.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_SECURITY_TLS_HPP	websocketpp/websocketpp/transport/asio/security/tls.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_STUB_BASE_HPP	websocketpp/websocketpp/transport/stub/base.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_STUB_CON_HPP	websocketpp/websocketpp/transport/stub/connection.hpp	29;"	d
WEBSOCKETPP_TRANSPORT_STUB_HPP	websocketpp/websocketpp/transport/stub/endpoint.hpp	29;"	d
WEBSOCKETPP_URI_HPP	websocketpp/websocketpp/uri.hpp	29;"	d
WEBSOCKETPP_UTILITIES_HPP	websocketpp/websocketpp/utilities.hpp	29;"	d
WEBSOCKETPP_UTILITIES_IMPL_HPP	websocketpp/websocketpp/impl/utilities_impl.hpp	29;"	d
WEBSOCKETPP_VERSION_HPP	websocketpp/websocketpp/version.hpp	29;"	d
WEBSOCKET_VERSION	build/c4che/_cache.py	/^WEBSOCKET_VERSION = ['0', '5', '1']$/;"	v
WITH_PCH	build/c4che/_cache.py	/^WITH_PCH = True$/;"	v
WRITE_HTTP_REQUEST	websocketpp/websocketpp/connection.hpp	/^        WRITE_HTTP_REQUEST = 3,$/;"	e	enum:websocketpp::session::internal_state::value
WRITE_HTTP_RESPONSE	websocketpp/websocketpp/connection.hpp	/^        WRITE_HTTP_RESPONSE = 5,$/;"	e	enum:websocketpp::session::internal_state::value
WRONG_BODY_SIZE	tests/daemon/mgmt/manager-common-fixture.hpp	/^    WRONG_BODY_SIZE,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
WRONG_CODE	tests/daemon/mgmt/manager-common-fixture.hpp	/^    WRONG_CODE,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
WRONG_COMMAND_PREFIX	tests/rib/auto-prefix-propagator.t.cpp	/^    WRONG_COMMAND_PREFIX,$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture::CheckRequestResult	file:
WRONG_CONTENT_TYPE	tests/daemon/mgmt/manager-common-fixture.hpp	/^    WRONG_CONTENT_TYPE,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
WRONG_NAME	tests/daemon/mgmt/manager-common-fixture.hpp	/^    WRONG_NAME,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
WRONG_N_NEXTHOPS	tests/daemon/mgmt/fib-manager.t.cpp	/^    WRONG_N_NEXTHOPS,$/;"	m	class:nfd::tests::FibManagerFixture::CheckNextHopResult	file:
WRONG_TEXT	tests/daemon/mgmt/manager-common-fixture.hpp	/^    WRONG_TEXT,$/;"	m	class:nfd::tests::ManagerCommonFixture::CheckResponseResult
WRONG_VERB	tests/rib/auto-prefix-propagator.t.cpp	/^    WRONG_VERB,$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture::CheckRequestResult	file:
W_CONFIG_HPP_WAF	build/config.hpp	4;"	d
WeakHashLen32WithSeeds	core/city-hash.cpp	/^static pair<uint64, uint64> WeakHashLen32WithSeeds($/;"	f	file:
WebSocketChannel	daemon/face/websocket-channel.cpp	/^WebSocketChannel::WebSocketChannel(const websocket::Endpoint& localEndpoint)$/;"	f	class:nfd::WebSocketChannel
WebSocketChannel	daemon/face/websocket-channel.hpp	/^class WebSocketChannel : public Channel$/;"	c	namespace:nfd
WebSocketFace	daemon/face/websocket-face.cpp	/^WebSocketFace::WebSocketFace(const FaceUri& remoteUri, const FaceUri& localUri,$/;"	f	class:nfd::WebSocketFace
WebSocketFace	daemon/face/websocket-face.hpp	/^class WebSocketFace : public Face$/;"	c	namespace:nfd
WebSocketFactory	daemon/face/websocket-factory.hpp	/^class WebSocketFactory : public ProtocolFactory$/;"	c	namespace:nfd
ZSW_MD5_BYTE_ORDER	websocketpp/websocketpp/common/md5.hpp	101;"	d
ZSW_MD5_BYTE_ORDER	websocketpp/websocketpp/common/md5.hpp	97;"	d
ZSW_MD5_BYTE_ORDER	websocketpp/websocketpp/common/md5.hpp	99;"	d
ZSW_MD5_F	websocketpp/websocketpp/common/md5.hpp	239;"	d
ZSW_MD5_G	websocketpp/websocketpp/common/md5.hpp	265;"	d
ZSW_MD5_H	websocketpp/websocketpp/common/md5.hpp	291;"	d
ZSW_MD5_I	websocketpp/websocketpp/common/md5.hpp	317;"	d
ZSW_MD5_ROTATE_LEFT	websocketpp/websocketpp/common/md5.hpp	234;"	d
ZSW_MD5_T1	websocketpp/websocketpp/common/md5.hpp	105;"	d
ZSW_MD5_T10	websocketpp/websocketpp/common/md5.hpp	114;"	d
ZSW_MD5_T11	websocketpp/websocketpp/common/md5.hpp	115;"	d
ZSW_MD5_T12	websocketpp/websocketpp/common/md5.hpp	116;"	d
ZSW_MD5_T13	websocketpp/websocketpp/common/md5.hpp	117;"	d
ZSW_MD5_T14	websocketpp/websocketpp/common/md5.hpp	118;"	d
ZSW_MD5_T15	websocketpp/websocketpp/common/md5.hpp	119;"	d
ZSW_MD5_T16	websocketpp/websocketpp/common/md5.hpp	120;"	d
ZSW_MD5_T17	websocketpp/websocketpp/common/md5.hpp	121;"	d
ZSW_MD5_T18	websocketpp/websocketpp/common/md5.hpp	122;"	d
ZSW_MD5_T19	websocketpp/websocketpp/common/md5.hpp	123;"	d
ZSW_MD5_T2	websocketpp/websocketpp/common/md5.hpp	106;"	d
ZSW_MD5_T20	websocketpp/websocketpp/common/md5.hpp	124;"	d
ZSW_MD5_T21	websocketpp/websocketpp/common/md5.hpp	125;"	d
ZSW_MD5_T22	websocketpp/websocketpp/common/md5.hpp	126;"	d
ZSW_MD5_T23	websocketpp/websocketpp/common/md5.hpp	127;"	d
ZSW_MD5_T24	websocketpp/websocketpp/common/md5.hpp	128;"	d
ZSW_MD5_T25	websocketpp/websocketpp/common/md5.hpp	129;"	d
ZSW_MD5_T26	websocketpp/websocketpp/common/md5.hpp	130;"	d
ZSW_MD5_T27	websocketpp/websocketpp/common/md5.hpp	131;"	d
ZSW_MD5_T28	websocketpp/websocketpp/common/md5.hpp	132;"	d
ZSW_MD5_T29	websocketpp/websocketpp/common/md5.hpp	133;"	d
ZSW_MD5_T3	websocketpp/websocketpp/common/md5.hpp	107;"	d
ZSW_MD5_T30	websocketpp/websocketpp/common/md5.hpp	134;"	d
ZSW_MD5_T31	websocketpp/websocketpp/common/md5.hpp	135;"	d
ZSW_MD5_T32	websocketpp/websocketpp/common/md5.hpp	136;"	d
ZSW_MD5_T33	websocketpp/websocketpp/common/md5.hpp	137;"	d
ZSW_MD5_T34	websocketpp/websocketpp/common/md5.hpp	138;"	d
ZSW_MD5_T35	websocketpp/websocketpp/common/md5.hpp	139;"	d
ZSW_MD5_T36	websocketpp/websocketpp/common/md5.hpp	140;"	d
ZSW_MD5_T37	websocketpp/websocketpp/common/md5.hpp	141;"	d
ZSW_MD5_T38	websocketpp/websocketpp/common/md5.hpp	142;"	d
ZSW_MD5_T39	websocketpp/websocketpp/common/md5.hpp	143;"	d
ZSW_MD5_T4	websocketpp/websocketpp/common/md5.hpp	108;"	d
ZSW_MD5_T40	websocketpp/websocketpp/common/md5.hpp	144;"	d
ZSW_MD5_T41	websocketpp/websocketpp/common/md5.hpp	145;"	d
ZSW_MD5_T42	websocketpp/websocketpp/common/md5.hpp	146;"	d
ZSW_MD5_T43	websocketpp/websocketpp/common/md5.hpp	147;"	d
ZSW_MD5_T44	websocketpp/websocketpp/common/md5.hpp	148;"	d
ZSW_MD5_T45	websocketpp/websocketpp/common/md5.hpp	149;"	d
ZSW_MD5_T46	websocketpp/websocketpp/common/md5.hpp	150;"	d
ZSW_MD5_T47	websocketpp/websocketpp/common/md5.hpp	151;"	d
ZSW_MD5_T48	websocketpp/websocketpp/common/md5.hpp	152;"	d
ZSW_MD5_T49	websocketpp/websocketpp/common/md5.hpp	153;"	d
ZSW_MD5_T5	websocketpp/websocketpp/common/md5.hpp	109;"	d
ZSW_MD5_T50	websocketpp/websocketpp/common/md5.hpp	154;"	d
ZSW_MD5_T51	websocketpp/websocketpp/common/md5.hpp	155;"	d
ZSW_MD5_T52	websocketpp/websocketpp/common/md5.hpp	156;"	d
ZSW_MD5_T53	websocketpp/websocketpp/common/md5.hpp	157;"	d
ZSW_MD5_T54	websocketpp/websocketpp/common/md5.hpp	158;"	d
ZSW_MD5_T55	websocketpp/websocketpp/common/md5.hpp	159;"	d
ZSW_MD5_T56	websocketpp/websocketpp/common/md5.hpp	160;"	d
ZSW_MD5_T57	websocketpp/websocketpp/common/md5.hpp	161;"	d
ZSW_MD5_T58	websocketpp/websocketpp/common/md5.hpp	162;"	d
ZSW_MD5_T59	websocketpp/websocketpp/common/md5.hpp	163;"	d
ZSW_MD5_T6	websocketpp/websocketpp/common/md5.hpp	110;"	d
ZSW_MD5_T60	websocketpp/websocketpp/common/md5.hpp	164;"	d
ZSW_MD5_T61	websocketpp/websocketpp/common/md5.hpp	165;"	d
ZSW_MD5_T62	websocketpp/websocketpp/common/md5.hpp	166;"	d
ZSW_MD5_T63	websocketpp/websocketpp/common/md5.hpp	167;"	d
ZSW_MD5_T64	websocketpp/websocketpp/common/md5.hpp	168;"	d
ZSW_MD5_T7	websocketpp/websocketpp/common/md5.hpp	111;"	d
ZSW_MD5_T8	websocketpp/websocketpp/common/md5.hpp	112;"	d
ZSW_MD5_T9	websocketpp/websocketpp/common/md5.hpp	113;"	d
ZSW_MD5_T_MASK	websocketpp/websocketpp/common/md5.hpp	104;"	d
_BASE64_HPP_	websocketpp/websocketpp/base64/base64.hpp	37;"	d
_VARIADIC_MAX	websocketpp/websocketpp/common/platforms.hpp	43;"	d
_WEBSOCKETPP_CONSTEXPR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	113;"	d
_WEBSOCKETPP_CONSTEXPR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	117;"	d
_WEBSOCKETPP_CONSTEXPR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	120;"	d
_WEBSOCKETPP_CONSTEXPR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	75;"	d
_WEBSOCKETPP_CONSTEXPR_TOKEN_	websocketpp/websocketpp/config/boost_config.hpp	69;"	d
_WEBSOCKETPP_CPP11_CHRONO_	websocketpp/websocketpp/common/chrono.hpp	33;"	d
_WEBSOCKETPP_CPP11_CHRONO_	websocketpp/websocketpp/config/boost_config.hpp	45;"	d
_WEBSOCKETPP_CPP11_FUNCTIONAL_	websocketpp/websocketpp/common/functional.hpp	38;"	d
_WEBSOCKETPP_CPP11_FUNCTIONAL_	websocketpp/websocketpp/common/functional.hpp	46;"	d
_WEBSOCKETPP_CPP11_FUNCTIONAL_	websocketpp/websocketpp/config/boost_config.hpp	41;"	d
_WEBSOCKETPP_CPP11_INTERNAL_	websocketpp/websocketpp/common/cpp11.hpp	57;"	d
_WEBSOCKETPP_CPP11_MEMORY_	websocketpp/websocketpp/common/memory.hpp	38;"	d
_WEBSOCKETPP_CPP11_MEMORY_	websocketpp/websocketpp/common/memory.hpp	46;"	d
_WEBSOCKETPP_CPP11_MEMORY_	websocketpp/websocketpp/common/random.hpp	47;"	d
_WEBSOCKETPP_CPP11_MEMORY_	websocketpp/websocketpp/config/boost_config.hpp	40;"	d
_WEBSOCKETPP_CPP11_RANDOM_DEVICE_	websocketpp/websocketpp/common/random.hpp	38;"	d
_WEBSOCKETPP_CPP11_RANDOM_DEVICE_	websocketpp/websocketpp/config/boost_config.hpp	49;"	d
_WEBSOCKETPP_CPP11_REGEX_	websocketpp/websocketpp/common/regex.hpp	33;"	d
_WEBSOCKETPP_CPP11_REGEX_	websocketpp/websocketpp/config/boost_config.hpp	53;"	d
_WEBSOCKETPP_CPP11_STL_	build/config.hpp	17;"	d
_WEBSOCKETPP_CPP11_SYSTEM_ERROR_	websocketpp/websocketpp/common/system_error.hpp	39;"	d
_WEBSOCKETPP_CPP11_SYSTEM_ERROR_	websocketpp/websocketpp/common/system_error.hpp	47;"	d
_WEBSOCKETPP_CPP11_SYSTEM_ERROR_	websocketpp/websocketpp/config/boost_config.hpp	57;"	d
_WEBSOCKETPP_CPP11_THREAD_	websocketpp/websocketpp/common/thread.hpp	41;"	d
_WEBSOCKETPP_CPP11_THREAD_	websocketpp/websocketpp/config/boost_config.hpp	61;"	d
_WEBSOCKETPP_ERROR_CODE_ENUM_NS_END_	websocketpp/websocketpp/common/system_error.hpp	69;"	d
_WEBSOCKETPP_ERROR_CODE_ENUM_NS_START_	websocketpp/websocketpp/common/system_error.hpp	68;"	d
_WEBSOCKETPP_INITIALIZER_LISTS_	websocketpp/websocketpp/common/cpp11.hpp	127;"	d
_WEBSOCKETPP_INITIALIZER_LISTS_	websocketpp/websocketpp/common/cpp11.hpp	78;"	d
_WEBSOCKETPP_INITIALIZER_LISTS_	websocketpp/websocketpp/config/boost_config.hpp	65;"	d
_WEBSOCKETPP_NOEXCEPT_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	101;"	d
_WEBSOCKETPP_NOEXCEPT_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	104;"	d
_WEBSOCKETPP_NOEXCEPT_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	72;"	d
_WEBSOCKETPP_NOEXCEPT_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	97;"	d
_WEBSOCKETPP_NOEXCEPT_TOKEN_	websocketpp/websocketpp/config/boost_config.hpp	68;"	d
_WEBSOCKETPP_NULLPTR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	134;"	d
_WEBSOCKETPP_NULLPTR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	138;"	d
_WEBSOCKETPP_NULLPTR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	141;"	d
_WEBSOCKETPP_NULLPTR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	144;"	d
_WEBSOCKETPP_NULLPTR_TOKEN_	websocketpp/websocketpp/common/cpp11.hpp	81;"	d
_WEBSOCKETPP_PUTTIME_	websocketpp/websocketpp/common/cpp11.hpp	87;"	d
_WEBSOCKETPP_REF	websocketpp/websocketpp/common/functional.hpp	76;"	d
__STDC_LIMIT_MACROS	websocketpp/websocketpp/common/stdint.hpp	32;"	d
__has_extension	websocketpp/websocketpp/common/cpp11.hpp	40;"	d
__has_feature	websocketpp/websocketpp/common/cpp11.hpp	37;"	d
__init__	tools/nfd-status-http-server.py	/^    def __init__(self, server, handler, verbose=False, robots=False):$/;"	m	class:ThreadHttpServer
_htonll	websocketpp/websocketpp/common/network.hpp	/^inline uint64_t _htonll(uint64_t src) {$/;"	f	namespace:websocketpp::lib::net
_ntohll	websocketpp/websocketpp/common/network.hpp	/^inline uint64_t _ntohll(uint64_t src) {$/;"	f	namespace:websocketpp::lib::net
abcd	websocketpp/websocketpp/common/md5.hpp	/^    md5_word_t abcd[4];     \/* digest buffer *\/$/;"	m	struct:websocketpp::md5::md5_state_s
abnormal_close	websocketpp/websocketpp/close.hpp	/^    static value const abnormal_close = 1006;$/;"	m	namespace:websocketpp::close::status
accept	daemon/face/tcp-channel.cpp	/^TcpChannel::accept(const FaceCreatedCallback& onFaceCreated,$/;"	f	class:nfd::TcpChannel
accept	daemon/face/unix-stream-channel.cpp	/^UnixStreamChannel::accept(const FaceCreatedCallback& onFaceCreated,$/;"	f	class:nfd::UnixStreamChannel
accept	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    accept = 1,$/;"	e	enum:websocketpp::extensions::permessage_deflate::mode::value
accept_handler	websocketpp/websocketpp/transport/base/endpoint.hpp	/^typedef lib::function<void(lib::error_code const &)> accept_handler;$/;"	t	namespace:websocketpp::transport
accepted	websocketpp/websocketpp/http/constants.hpp	/^            accepted = 202,$/;"	e	enum:websocketpp::http::status_code::value
acceptor_ptr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef lib::shared_ptr<boost::asio::ip::tcp::acceptor> acceptor_ptr;$/;"	t	class:websocketpp::transport::asio::endpoint
access	websocketpp/websocketpp/logger/levels.hpp	/^    static value const access = 1;$/;"	m	struct:websocketpp::log::channel_type_hint
access_core	websocketpp/websocketpp/logger/levels.hpp	/^    static level const access_core = 0x00003003;$/;"	m	struct:websocketpp::log::alevel
accessor1	tests/daemon/table/measurements-accessor.t.cpp	/^  MeasurementsAccessor& accessor1;$/;"	m	class:nfd::tests::MeasurementsAccessorFixture	file:
accessor2	tests/daemon/table/measurements-accessor.t.cpp	/^  MeasurementsAccessor& accessor2;$/;"	m	class:nfd::tests::MeasurementsAccessorFixture	file:
action	rib/fib-update.hpp	/^  Action action;$/;"	m	class:nfd::rib::FibUpdate
action	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    action(action_type t, connection_hdl h) : type(t), hdl(h) {}$/;"	f	struct:action
action	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    action(action_type t, connection_hdl h, server::message_ptr m)$/;"	f	struct:action
action	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^struct action {$/;"	s	file:
action_after_shutdown	websocketpp/websocketpp/transport/base/connection.hpp	/^    action_after_shutdown,$/;"	e	enum:websocketpp::transport::error::value
action_type	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^enum action_type {$/;"	g	file:
add	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessage::add(uint16_t fragIndex, uint16_t fragCount, const Block& payload)$/;"	f	class:nfd::ndnlp::PartialMessage
add	daemon/fw/face-table.cpp	/^FaceTable::add(shared_ptr<Face> face)$/;"	f	class:nfd::FaceTable
add	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::add(const Name& name, uint32_t nonce)$/;"	f	class:nfd::DeadNonceList
add	rib/rib-update-batch.cpp	/^RibUpdateBatch::add(const RibUpdate& update)$/;"	f	class:nfd::rib::RibUpdateBatch
add	tools/ndn-autoconfig-server.cpp	/^  add(const Name& prefix)$/;"	f	class:ndn::PrefixCollection
addAppFace	tests/daemon/fw/topology-tester.cpp	/^TopologyTester::addAppFace(const std::string& label, TopologyNode i)$/;"	f	class:nfd::fw::tests::TopologyTester
addAppFace	tests/daemon/fw/topology-tester.cpp	/^TopologyTester::addAppFace(const std::string& label, TopologyNode i, const Name& prefix, uint64_t cost)$/;"	f	class:nfd::fw::tests::TopologyTester
addChannel	tests/daemon/mgmt/face-manager.t.cpp	/^  addChannel(const std::string& channelUri)$/;"	f	class:nfd::tests::TestProtocolFactory
addChild	rib/rib-entry.cpp	/^RibEntry::addChild(shared_ptr<RibEntry> child)$/;"	f	class:nfd::rib::RibEntry
addEchoProducer	tests/daemon/fw/topology-tester.cpp	/^TopologyTester::addEchoProducer(ndn::Face& face, const Name& prefix)$/;"	f	class:nfd::fw::tests::TopologyTester
addExtensionIfExists	docs/conf.py	/^def addExtensionIfExists(extension):$/;"	f
addFace	daemon/fw/forwarder.hpp	/^Forwarder::addFace(shared_ptr<Face> face)$/;"	f	class:nfd::Forwarder
addFace	tests/daemon/fw/topology-tester.cpp	/^TopologyLink::addFace(TopologyNode i, shared_ptr<LpFaceWrapper> face)$/;"	f	class:nfd::fw::tests::TopologyLink
addFace	tests/daemon/mgmt/face-manager.t.cpp	/^  addFace(bool wantRemoveLastNotification = false)$/;"	f	class:nfd::tests::FaceManagerFixture
addFace	tests/daemon/mgmt/fib-manager.t.cpp	/^  addFace()$/;"	f	class:nfd::tests::FibManagerFixture
addFibUpdate	rib/fib-updater.cpp	/^FibUpdater::addFibUpdate(FibUpdate update)$/;"	f	class:nfd::rib::FibUpdater
addForwarder	tests/daemon/fw/topology-tester.cpp	/^TopologyTester::addForwarder(const std::string& label)$/;"	f	class:nfd::fw::tests::TopologyTester
addIdentity	tests/identity-management-fixture.cpp	/^IdentityManagementFixture::addIdentity(const ndn::Name& identity, const ndn::KeyParams& params)$/;"	f	class:nfd::tests::IdentityManagementFixture
addImpl	daemon/fw/face-table.cpp	/^FaceTable::addImpl(shared_ptr<Face> face, FaceId faceId)$/;"	f	class:nfd::FaceTable
addInheritedRoute	rib/fib-updater.cpp	/^FibUpdater::addInheritedRoute(const Name& name, const Route& route)$/;"	f	class:nfd::rib::FibUpdater
addInheritedRoute	rib/rib-entry.cpp	/^RibEntry::addInheritedRoute(const Route& route)$/;"	f	class:nfd::rib::RibEntry
addInheritedRoutes	rib/fib-updater.cpp	/^FibUpdater::addInheritedRoutes(const Name& name, const Rib::RouteSet& routesToAdd,$/;"	f	class:nfd::rib::FibUpdater
addInheritedRoutes	rib/fib-updater.cpp	/^FibUpdater::addInheritedRoutes(const RibEntry& entry, const Rib::RouteSet& routesToAdd)$/;"	f	class:nfd::rib::FibUpdater
addInterestRule	daemon/mgmt/command-validator.hpp	/^CommandValidator::addInterestRule(const std::string& regex,$/;"	f	class:nfd::CommandValidator
addIntervalConsumer	tests/daemon/fw/topology-tester.cpp	/^TopologyTester::addIntervalConsumer(ndn::Face& face, const Name& prefix,$/;"	f	class:nfd::fw::tests::TopologyTester
addLink	tests/daemon/fw/topology-tester.cpp	/^TopologyTester::addLink(const std::string& label, const time::nanoseconds& delay,$/;"	f	class:nfd::fw::tests::TopologyTester
addMeasurement	daemon/fw/rtt-estimator.cpp	/^RttEstimator::addMeasurement(Duration measure)$/;"	f	class:nfd::RttEstimator
addNextHop	daemon/mgmt/fib-manager.cpp	/^FibManager::addNextHop(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FibManager
addNextHop	daemon/table/fib-entry.cpp	/^Entry::addNextHop(shared_ptr<Face> face, uint64_t cost)$/;"	f	class:nfd::fib::Entry
addNonce	tests/daemon/table/dead-nonce-list.t.cpp	/^  addNonce()$/;"	f	class:nfd::tests::PeriodicalInsertionFixture
addNonceBatch	tests/daemon/table/dead-nonce-list.t.cpp	/^  size_t addNonceBatch;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
addNonceEvent	tests/daemon/table/dead-nonce-list.t.cpp	/^  scheduler::ScopedEventId addNonceEvent;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
addNonceInterval	tests/daemon/table/dead-nonce-list.t.cpp	/^  time::nanoseconds addNonceInterval;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
addPrefixMeasurements	daemon/fw/access-strategy.cpp	/^AccessStrategy::addPrefixMeasurements(const Data& data)$/;"	f	class:nfd::fw::AccessStrategy
addReserved	daemon/fw/face-table.cpp	/^FaceTable::addReserved(shared_ptr<Face> face, FaceId faceId)$/;"	f	class:nfd::FaceTable
addSectionHandler	core/config-file.cpp	/^ConfigFile::addSectionHandler(const std::string& sectionName,$/;"	f	class:nfd::ConfigFile
addSupportedPrivilege	daemon/mgmt/command-validator.cpp	/^CommandValidator::addSupportedPrivilege(const std::string& privilege)$/;"	f	class:nfd::CommandValidator
addUpdateToQueue	rib/rib.cpp	/^Rib::addUpdateToQueue(const RibUpdate& update,$/;"	f	class:nfd::rib::Rib
add_subprotocol	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::add_subprotocol(std::string const & value) {$/;"	f	class:websocketpp::connection
add_subprotocol	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::add_subprotocol(std::string const & value,$/;"	f	class:websocketpp::connection
addedFaces	tests/daemon/fw/strategy.t.cpp	/^  std::vector<FaceId> addedFaces;$/;"	m	class:nfd::fw::tests::FaceTableAccessTestStrategy	file:
adjustCapacity	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::adjustCapacity()$/;"	f	class:nfd::DeadNonceList
adjustPredictDown	daemon/fw/ncc-strategy.cpp	/^NccStrategy::MeasurementsEntryInfo::adjustPredictDown() {$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
adjustPredictUp	daemon/fw/ncc-strategy.cpp	/^NccStrategy::MeasurementsEntryInfo::adjustPredictUp() {$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
advanceClocks	tests/test-common.hpp	/^  advanceClocks(const time::nanoseconds& tick, const time::nanoseconds& total)$/;"	f	class:nfd::tests::UnitTestTimeFixture
advanceClocks	tests/test-common.hpp	/^  advanceClocks(const time::nanoseconds& tick, size_t nTicks = 1)$/;"	f	class:nfd::tests::UnitTestTimeFixture
advanceClocksByLifetime	tests/daemon/table/dead-nonce-list.t.cpp	/^  advanceClocksByLifetime(float t)$/;"	f	class:nfd::tests::PeriodicalInsertionFixture
afterAction	tests/daemon/fw/strategy-tester.hpp	/^  signal::Signal<StrategyTester<S>> afterAction;$/;"	m	class:nfd::fw::tests::StrategyTester
afterAddFace	daemon/fw/strategy.hpp	/^  signal::Signal<FaceTable, shared_ptr<Face>>& afterAddFace;$/;"	m	class:nfd::fw::Strategy
afterCreateFaceFailure	daemon/mgmt/face-manager.cpp	/^FaceManager::afterCreateFaceFailure(const std::string& reason,$/;"	f	class:nfd::FaceManager
afterCreateFaceSuccess	daemon/mgmt/face-manager.cpp	/^FaceManager::afterCreateFaceSuccess(ControlParameters& parameters,$/;"	f	class:nfd::FaceManager
afterEraseEntry	rib/rib.hpp	/^  ndn::util::signal::Signal<Rib, Name> afterEraseEntry;$/;"	m	class:nfd::rib::Rib
afterEraseRibEntry	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterEraseRibEntry(const Name& prefix)$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterFaceAdded	daemon/mgmt/face-manager.cpp	/^FaceManager::afterFaceAdded(shared_ptr<Face> face,$/;"	f	class:nfd::FaceManager
afterFaceRemoved	daemon/mgmt/face-manager.cpp	/^FaceManager::afterFaceRemoved(shared_ptr<Face> face,$/;"	f	class:nfd::FaceManager
afterFetchedChannelStatusInformation	tools/nfd-status.cpp	/^  afterFetchedChannelStatusInformation(const ConstBufferPtr& dataset)$/;"	f	class:ndn::NfdStatus
afterFetchedFaceStatusInformation	tools/nfd-status.cpp	/^  afterFetchedFaceStatusInformation(const ConstBufferPtr& dataset)$/;"	f	class:ndn::NfdStatus
afterFetchedFibEnumerationInformation	tools/nfd-status.cpp	/^  afterFetchedFibEnumerationInformation(const ConstBufferPtr& dataset)$/;"	f	class:ndn::NfdStatus
afterFetchedRibStatusInformation	tools/nfd-status.cpp	/^  afterFetchedRibStatusInformation(const ConstBufferPtr& dataset)$/;"	f	class:ndn::NfdStatus
afterFetchedStrategyChoiceInformationInformation	tools/nfd-status.cpp	/^  afterFetchedStrategyChoiceInformationInformation(const ConstBufferPtr& dataset)$/;"	f	class:ndn::NfdStatus
afterFetchedVersionInformation	tools/nfd-status.cpp	/^  afterFetchedVersionInformation(const Data& data)$/;"	f	class:ndn::NfdStatus
afterHubConnect	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterHubConnect()$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterHubDisconnect	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterHubDisconnect()$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterInsert	daemon/table/cs-policy.cpp	/^Policy::afterInsert(iterator i)$/;"	f	class:nfd::cs::Policy
afterInsertEntry	rib/rib.hpp	/^  ndn::util::signal::Signal<Rib, Name> afterInsertEntry;$/;"	m	class:nfd::rib::Rib
afterInsertRibEntry	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterInsertRibEntry(const Name& prefix)$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterOp	tests/daemon/face/face-history.hpp	/^  afterOp()$/;"	f	class:nfd::tests::FaceHistory
afterOp	tests/limited-io.cpp	/^LimitedIo::afterOp()$/;"	f	class:nfd::tests::LimitedIo
afterPropagateFail	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterPropagateFail(uint32_t code, const std::string& reason,$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterPropagateSucceed	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterPropagateSucceed(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterReceiveData	daemon/face/link-service.hpp	/^  signal::Signal<LinkService, Data> afterReceiveData;$/;"	m	class:nfd::face::LinkService
afterReceiveData	daemon/face/lp-face.hpp	/^  signal::Signal<LinkService, Data>& afterReceiveData;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
afterReceiveInterest	daemon/face/link-service.hpp	/^  signal::Signal<LinkService, Interest> afterReceiveInterest;$/;"	m	class:nfd::face::LinkService
afterReceiveInterest	daemon/face/lp-face.hpp	/^  signal::Signal<LinkService, Interest>& afterReceiveInterest;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
afterReceiveInterest	daemon/fw/access-strategy.cpp	/^AccessStrategy::afterReceiveInterest(const Face& inFace,$/;"	f	class:nfd::fw::AccessStrategy
afterReceiveInterest	daemon/fw/best-route-strategy.cpp	/^BestRouteStrategy::afterReceiveInterest(const Face& inFace,$/;"	f	class:nfd::fw::BestRouteStrategy
afterReceiveInterest	daemon/fw/best-route-strategy2.cpp	/^BestRouteStrategy2::afterReceiveInterest(const Face& inFace,$/;"	f	class:nfd::fw::BestRouteStrategy2
afterReceiveInterest	daemon/fw/broadcast-strategy.cpp	/^BroadcastStrategy::afterReceiveInterest(const Face& inFace,$/;"	f	class:nfd::fw::BroadcastStrategy
afterReceiveInterest	daemon/fw/client-control-strategy.cpp	/^ClientControlStrategy::afterReceiveInterest(const Face& inFace,$/;"	f	class:nfd::fw::ClientControlStrategy
afterReceiveInterest	daemon/fw/multicast-strategy.cpp	/^MulticastStrategy::afterReceiveInterest(const Face& inFace,$/;"	f	class:nfd::fw::MulticastStrategy
afterReceiveInterest	daemon/fw/ncc-strategy.cpp	/^NccStrategy::afterReceiveInterest(const Face& inFace,$/;"	f	class:nfd::fw::NccStrategy
afterReceiveInterestCalls	tests/daemon/fw/dummy-strategy.hpp	/^              shared_ptr<pit::Entry>>> afterReceiveInterestCalls;$/;"	m	class:nfd::tests::DummyStrategy
afterReceiveInterest_count	tests/daemon/fw/dummy-strategy.hpp	/^  int afterReceiveInterest_count;$/;"	m	class:nfd::tests::DummyStrategy
afterReceiveNack	daemon/face/link-service.hpp	/^  signal::Signal<LinkService, lp::Nack> afterReceiveNack;$/;"	m	class:nfd::face::LinkService
afterReceiveNack	daemon/face/lp-face.hpp	/^  signal::Signal<LinkService, lp::Nack>& afterReceiveNack;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
afterReceiveNack	daemon/fw/best-route-strategy2.cpp	/^BestRouteStrategy2::afterReceiveNack(const Face& inFace, const lp::Nack& nack,$/;"	f	class:nfd::fw::BestRouteStrategy2
afterReceiveNack	daemon/fw/strategy.cpp	/^Strategy::afterReceiveNack(const Face& inFace, const lp::Nack& nack,$/;"	f	class:nfd::fw::Strategy
afterReceiveNack_count	tests/daemon/fw/dummy-strategy.hpp	/^  int afterReceiveNack_count;$/;"	m	class:nfd::tests::DummyStrategy
afterReceiveNewInterest	daemon/fw/access-strategy.cpp	/^AccessStrategy::afterReceiveNewInterest(const Face& inFace,$/;"	f	class:nfd::fw::AccessStrategy
afterReceiveRetxInterest	daemon/fw/access-strategy.cpp	/^AccessStrategy::afterReceiveRetxInterest(const Face& inFace,$/;"	f	class:nfd::fw::AccessStrategy
afterRefresh	daemon/table/cs-policy.cpp	/^Policy::afterRefresh(iterator i)$/;"	f	class:nfd::cs::Policy
afterRevokeFail	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterRevokeFail(uint32_t code, const std::string& reason,$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterRevokeSucceed	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterRevokeSucceed(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterRibErase	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterRibErase(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterRibInsert	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::afterRibInsert(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
afterRtoTimeout	daemon/fw/access-strategy.cpp	/^AccessStrategy::afterRtoTimeout(weak_ptr<pit::Entry> pitWeak, weak_ptr<fib::Entry> fibWeak,$/;"	f	class:nfd::fw::AccessStrategy
afterSend	daemon/face/internal-transport.hpp	/^  signal::Signal<InternalTransportBase, Block> afterSend;$/;"	m	class:nfd::face::InternalTransportBase
afterSend	tests/daemon/face/dummy-face.hpp	/^  signal::Signal<DummyFaceImpl<FaceBase>> afterSend;$/;"	m	class:nfd::tests::DummyFaceImpl
afterSend	tests/daemon/face/dummy-lp-face.cpp	/^  signal::Signal<LinkService> afterSend;$/;"	m	class:nfd::face::tests::DummyLpFace::LinkService	file:
afterSend	tests/daemon/face/dummy-lp-face.hpp	/^  signal::Signal<LinkService>& afterSend;$/;"	m	class:nfd::face::tests::DummyLpFace
afterStateChange	daemon/face/lp-face.hpp	/^  signal::Signal<Transport, FaceState\/*old*\/, FaceState\/*new*\/>& afterStateChange;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
afterStateChange	daemon/face/transport.hpp	/^  signal::Signal<Transport, TransportState\/*old*\/, TransportState\/*new*\/> afterStateChange;$/;"	m	class:nfd::face::Transport
afterTimeout	tests/limited-io.cpp	/^LimitedIo::afterTimeout()$/;"	f	class:nfd::tests::LimitedIo
ageBestFace	daemon/fw/ncc-strategy.cpp	/^NccStrategy::MeasurementsEntryInfo::ageBestFace() {$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
aggregateErrors	daemon/mgmt/command-validator.cpp	/^aggregateErrors(std::stringstream& ss, const std::string& msg)$/;"	f	namespace:nfd
alevel	websocketpp/websocketpp/logger/levels.hpp	/^struct alevel {$/;"	s	namespace:websocketpp::log
all	websocketpp/websocketpp/logger/levels.hpp	/^    static level const all = 0xffffffff;$/;"	m	struct:websocketpp::log::alevel
all	websocketpp/websocketpp/logger/levels.hpp	/^    static level const all = 0xffffffff;$/;"	m	struct:websocketpp::log::elevel
allCallbacksFired	tests/core/config-file.t.cpp	/^  allCallbacksFired() const$/;"	f	class:nfd::tests::DummySubscriber
alloc	websocketpp/websocketpp/message_buffer/alloc.hpp	/^namespace alloc {$/;"	n	namespace:websocketpp::message_buffer
alloc	websocketpp/websocketpp/message_buffer/pool.hpp	/^namespace alloc {$/;"	n	namespace:websocketpp::message_buffer
allocate	websocketpp/websocketpp/transport/asio/base.hpp	/^  void* allocate(std::size_t size)$/;"	f	class:websocketpp::transport::asio::handler_allocator
allocator_	websocketpp/websocketpp/transport/asio/base.hpp	/^  handler_allocator& allocator_;$/;"	m	class:websocketpp::transport::asio::custom_alloc_handler
allowLocalFields	daemon/face/generic-link-service.hpp	/^    bool allowLocalFields;$/;"	m	class:nfd::face::GenericLinkService::Options
allow_disabling_context_takeover	websocketpp/websocketpp/config/core.hpp	/^        static const bool allow_disabling_context_takeover = true;$/;"	m	struct:websocketpp::config::core::permessage_deflate_config
allow_disabling_context_takeover	websocketpp/websocketpp/config/core_client.hpp	/^        static const bool allow_disabling_context_takeover = true;$/;"	m	struct:websocketpp::config::core_client::permessage_deflate_config
allow_disabling_context_takeover	websocketpp/websocketpp/config/debug.hpp	/^        static const bool allow_disabling_context_takeover = true;$/;"	m	struct:websocketpp::config::debug_core::permessage_deflate_config
allow_disabling_context_takeover	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const bool allow_disabling_context_takeover = true;$/;"	m	struct:websocketpp::config::minimal_server::permessage_deflate_config
alog	websocketpp/test/connection/connection.cpp	/^    stub_config::alog_type alog;$/;"	m	struct:connection_setup	file:
alog	websocketpp/test/transport/asio/timers.cpp	/^    config::alog_type alog;$/;"	m	struct:mock_endpoint	file:
alog_level	websocketpp/examples/testee_server/testee_server.cpp	/^    static const websocketpp::log::level alog_level =$/;"	m	struct:testee_config	file:
alog_level	websocketpp/test/connection/connection.cpp	/^    static const websocketpp::log::level alog_level = websocketpp::log::alevel::none;$/;"	m	struct:debug_config_client	file:
alog_level	websocketpp/test/roles/client.cpp	/^    static const websocketpp::log::level alog_level = websocketpp::log::alevel::none;$/;"	m	struct:stub_config	file:
alog_level	websocketpp/websocketpp/config/core.hpp	/^    static const websocketpp::log::level alog_level =$/;"	m	struct:websocketpp::config::core
alog_level	websocketpp/websocketpp/config/core_client.hpp	/^    static const websocketpp::log::level alog_level =$/;"	m	struct:websocketpp::config::core_client
alog_level	websocketpp/websocketpp/config/debug.hpp	/^    static const websocketpp::log::level alog_level =$/;"	m	struct:websocketpp::config::debug_core
alog_level	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const websocketpp::log::level alog_level =$/;"	m	struct:websocketpp::config::minimal_server
alog_type	websocketpp/examples/debug_server/debug_server.cpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:debug_custom::transport_config	file:
alog_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:debug_custom	file:
alog_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::alog_type alog_type;$/;"	t	struct:custom_config	file:
alog_type	websocketpp/examples/testee_server/testee_server.cpp	/^        typedef core::alog_type alog_type;$/;"	t	struct:testee_config::transport_config	file:
alog_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::alog_type alog_type;$/;"	t	struct:testee_config	file:
alog_type	websocketpp/test/connection/connection.cpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:debug_config_client::transport_config	file:
alog_type	websocketpp/test/connection/connection.cpp	/^    typedef core::alog_type alog_type;$/;"	t	struct:debug_config_client	file:
alog_type	websocketpp/test/connection/connection.cpp	/^    typedef core::alog_type alog_type;$/;"	t	struct:stub_config	file:
alog_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::alog_type alog_type;$/;"	t	struct:stub_config	file:
alog_type	websocketpp/test/roles/client.cpp	/^    typedef core::alog_type alog_type;$/;"	t	struct:stub_config	file:
alog_type	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::log::stub alog_type;$/;"	t	struct:config	file:
alog_type	websocketpp/test/transport/integration.cpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:config::transport_config	file:
alog_type	websocketpp/test/transport/integration.cpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:config_tls::transport_config	file:
alog_type	websocketpp/test/transport/integration.cpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:config	file:
alog_type	websocketpp/test/transport/integration.cpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:config_tls	file:
alog_type	websocketpp/test/transport/iostream/connection.cpp	/^        websocketpp::log::alevel> alog_type;$/;"	t	struct:config	file:
alog_type	websocketpp/websocketpp/config/asio.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio_tls::transport_config
alog_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio_tls
alog_type	websocketpp/websocketpp/config/asio_client.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio_tls_client::transport_config
alog_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio_tls_client
alog_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio::transport_config
alog_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio
alog_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio_client::transport_config
alog_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:websocketpp::config::asio_client
alog_type	websocketpp/websocketpp/config/core.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::core::transport_config
alog_type	websocketpp/websocketpp/config/core.hpp	/^        websocketpp::log::alevel> alog_type;$/;"	t	struct:websocketpp::config::core
alog_type	websocketpp/websocketpp/config/core_client.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::core_client::transport_config
alog_type	websocketpp/websocketpp/config/core_client.hpp	/^        websocketpp::log::alevel> alog_type;$/;"	t	struct:websocketpp::config::core_client
alog_type	websocketpp/websocketpp/config/debug.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::debug_core::transport_config
alog_type	websocketpp/websocketpp/config/debug.hpp	/^        websocketpp::log::alevel> alog_type;$/;"	t	struct:websocketpp::config::debug_core
alog_type	websocketpp/websocketpp/config/debug_asio.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::debug_asio_tls::transport_config
alog_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
alog_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::debug_asio::transport_config
alog_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::alog_type alog_type;$/;"	t	struct:websocketpp::config::debug_asio
alog_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        typedef type::alog_type alog_type;$/;"	t	struct:websocketpp::config::minimal_server::transport_config
alog_type	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef websocketpp::log::stub alog_type;$/;"	t	struct:websocketpp::config::minimal_server
alog_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::connection
alog_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::endpoint
alog_type	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::asio::connection
alog_type	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::asio::endpoint
alog_type	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::debug::connection
alog_type	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::debug::endpoint
alog_type	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::iostream::connection
alog_type	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::iostream::endpoint
alog_type	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::stub::connection
alog_type	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    typedef typename config::alog_type alog_type;$/;"	t	class:websocketpp::transport::stub::endpoint
alogger	websocketpp/test/transport/iostream/connection.cpp	/^config::alog_type alogger;$/;"	v
app	websocketpp/websocketpp/logger/levels.hpp	/^    static level const app = 0x800;$/;"	m	struct:websocketpp::log::alevel
append_header	websocketpp/websocketpp/http/impl/parser.hpp	/^inline void parser::append_header(std::string const & key, std::string const &$/;"	f	class:websocketpp::http::parser::parser
append_header	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::append_header(std::string const & key,$/;"	f	class:websocketpp::connection
append_payload	websocketpp/websocketpp/message_buffer/message.hpp	/^    void append_payload(std::string const & payload) {$/;"	f	class:websocketpp::message_buffer::message
append_payload	websocketpp/websocketpp/message_buffer/message.hpp	/^    void append_payload(void const * payload, size_t len) {$/;"	f	class:websocketpp::message_buffer::message
asio	websocketpp/websocketpp/config/asio_no_tls.hpp	/^struct asio : public core {$/;"	s	namespace:websocketpp::config
asio	websocketpp/websocketpp/transport/asio/base.hpp	/^namespace asio {$/;"	n	namespace:websocketpp::transport
asio	websocketpp/websocketpp/transport/asio/connection.hpp	/^namespace asio {$/;"	n	namespace:websocketpp::transport
asio	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^namespace asio {$/;"	n	namespace:websocketpp::transport
asio	websocketpp/websocketpp/transport/asio/security/base.hpp	/^namespace asio {$/;"	n	namespace:websocketpp::transport
asio	websocketpp/websocketpp/transport/asio/security/none.hpp	/^namespace asio {$/;"	n	namespace:websocketpp::transport
asio	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^namespace asio {$/;"	n	namespace:websocketpp::transport
asio_client	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^struct asio_client : public core_client {$/;"	s	namespace:websocketpp::config
asio_handler_allocate	websocketpp/websocketpp/transport/asio/base.hpp	/^  friend void* asio_handler_allocate(std::size_t size,$/;"	f	class:websocketpp::transport::asio::custom_alloc_handler
asio_handler_deallocate	websocketpp/websocketpp/transport/asio/base.hpp	/^  friend void asio_handler_deallocate(void* pointer, std::size_t \/*size*\/,$/;"	f	class:websocketpp::transport::asio::custom_alloc_handler
asio_tls	websocketpp/websocketpp/config/asio.hpp	/^struct asio_tls : public core {$/;"	s	namespace:websocketpp::config
asio_tls_client	websocketpp/websocketpp/config/asio_client.hpp	/^struct asio_tls_client : public core_client {$/;"	s	namespace:websocketpp::config
asyncReceive	daemon/face/internal-transport.cpp	/^asyncReceive(InternalTransportBase* recipient, const Block& packet)$/;"	f	namespace:nfd::face
async_accept	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void async_accept(transport_con_ptr tcon, accept_handler callback) {$/;"	f	class:websocketpp::transport::asio::endpoint
async_accept	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void async_accept(transport_con_ptr tcon, accept_handler callback,$/;"	f	class:websocketpp::transport::asio::endpoint
async_accept_not_listening	websocketpp/websocketpp/error.hpp	/^    async_accept_not_listening,$/;"	e	enum:websocketpp::error::value
async_connect	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void async_connect(transport_con_ptr tcon, uri_ptr u, connect_handler cb) {$/;"	f	class:websocketpp::transport::asio::endpoint
async_connect	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    void async_connect(transport_con_ptr, uri_ptr, connect_handler cb) {$/;"	f	class:websocketpp::transport::debug::endpoint
async_connect	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    void async_connect(transport_con_ptr, uri_ptr, connect_handler cb) {$/;"	f	class:websocketpp::transport::iostream::endpoint
async_connect	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    void async_connect(transport_con_ptr tcon, uri_ptr u, connect_handler cb) {$/;"	f	class:websocketpp::transport::stub::endpoint
async_read_at_least	websocketpp/test/transport/iostream/connection.cpp	/^    void async_read_at_least(size_t num_bytes, char *buf, size_t len)$/;"	f	struct:stub_con
async_read_at_least	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void async_read_at_least(size_t num_bytes, char *buf, size_t len,$/;"	f	class:websocketpp::transport::asio::connection
async_read_at_least	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void async_read_at_least(size_t num_bytes, char * buf, size_t len,$/;"	f	class:websocketpp::transport::debug::connection
async_read_at_least	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void async_read_at_least(size_t num_bytes, char *buf, size_t len,$/;"	f	class:websocketpp::transport::iostream::connection
async_read_at_least	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void async_read_at_least(size_t num_bytes, char * buf, size_t len,$/;"	f	class:websocketpp::transport::stub::connection
async_read_handler	websocketpp/websocketpp/transport/asio/base.hpp	/^    size_t bytes_transferred)> async_read_handler;$/;"	t	namespace:websocketpp::transport::asio
async_read_indef	websocketpp/test/transport/iostream/connection.cpp	/^    void async_read_indef(size_t num_bytes, char *buf, size_t len)$/;"	f	struct:stub_con
async_shutdown	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void async_shutdown(shutdown_handler callback) {$/;"	f	class:websocketpp::transport::asio::connection
async_shutdown	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    void async_shutdown(socket_shutdown_handler h) {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
async_shutdown	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void async_shutdown(socket_shutdown_handler callback) {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
async_shutdown	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void async_shutdown(shutdown_handler handler) {$/;"	f	class:websocketpp::transport::debug::connection
async_shutdown	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void async_shutdown(transport::shutdown_handler handler) {$/;"	f	class:websocketpp::transport::iostream::connection
async_shutdown	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void async_shutdown(shutdown_handler handler) {$/;"	f	class:websocketpp::transport::stub::connection
async_write	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void async_write(const char* buf, size_t len, write_handler handler) {$/;"	f	class:websocketpp::transport::asio::connection
async_write	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void async_write(std::vector<buffer> const & bufs, write_handler handler) {$/;"	f	class:websocketpp::transport::asio::connection
async_write	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void async_write(char const *, size_t, write_handler handler) {$/;"	f	class:websocketpp::transport::debug::connection
async_write	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void async_write(std::vector<buffer> const &, write_handler handler) {$/;"	f	class:websocketpp::transport::debug::connection
async_write	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void async_write(char const * buf, size_t len, transport::write_handler $/;"	f	class:websocketpp::transport::iostream::connection
async_write	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void async_write(std::vector<buffer> const & bufs, transport::write_handler$/;"	f	class:websocketpp::transport::iostream::connection
async_write	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void async_write(char const * buf, size_t len, write_handler handler) {$/;"	f	class:websocketpp::transport::stub::connection
async_write	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void async_write(std::vector<buffer> const & bufs, write_handler handler) {$/;"	f	class:websocketpp::transport::stub::connection
async_write_handler	websocketpp/websocketpp/transport/asio/base.hpp	/^    size_t bytes_transferred)> async_write_handler;$/;"	t	namespace:websocketpp::transport::asio
attachQueue	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::attachQueue(iterator i)$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
attachTransport	tests/daemon/fw/topology-tester.cpp	/^TopologyLink::attachTransport(TopologyNode i, InternalTransportBase* transport)$/;"	f	class:nfd::fw::tests::TopologyLink
attr	websocketpp/test/extension/permessage_deflate.cpp	/^    websocketpp::http::attribute_list attr;$/;"	m	struct:ext_vars	file:
attribute_list	websocketpp/websocketpp/http/constants.hpp	/^    typedef std::map<std::string,std::string> attribute_list;$/;"	t	namespace:websocketpp::http
authorize	daemon/mgmt/manager-base.cpp	/^ManagerBase::authorize(const Name& prefix, const Interest& interest,$/;"	f	class:nfd::ManagerBase
autoconfig	tools/ndn-autoconfig/base-dns.cpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools	file:
autoconfig	tools/ndn-autoconfig/base-dns.hpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools
autoconfig	tools/ndn-autoconfig/base.cpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools	file:
autoconfig	tools/ndn-autoconfig/base.hpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools
autoconfig	tools/ndn-autoconfig/guess-from-identity-name.cpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools	file:
autoconfig	tools/ndn-autoconfig/guess-from-identity-name.hpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools
autoconfig	tools/ndn-autoconfig/guess-from-search-domains.cpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools	file:
autoconfig	tools/ndn-autoconfig/guess-from-search-domains.hpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools
autoconfig	tools/ndn-autoconfig/multicast-discovery.cpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools	file:
autoconfig	tools/ndn-autoconfig/multicast-discovery.hpp	/^namespace autoconfig {$/;"	n	namespace:ndn::tools
b	waf	/^	def b(x):$/;"	f	function:b
b	waf	/^def b(x):$/;"	f
b0	websocketpp/websocketpp/frame.hpp	/^    uint8_t b0;$/;"	m	struct:websocketpp::frame::basic_header
b1	websocketpp/websocketpp/frame.hpp	/^    uint8_t b1;$/;"	m	struct:websocketpp::frame::basic_header
bad_close_code	websocketpp/websocketpp/error.hpp	/^    bad_close_code,$/;"	e	enum:websocketpp::error::value
bad_connection	websocketpp/websocketpp/error.hpp	/^    bad_connection,$/;"	e	enum:websocketpp::error::value
bad_gateway	websocketpp/websocketpp/http/constants.hpp	/^            bad_gateway = 502,$/;"	e	enum:websocketpp::http::status_code::value
bad_request	websocketpp/websocketpp/http/constants.hpp	/^            bad_request = 400,$/;"	e	enum:websocketpp::http::status_code::value
bad_request	websocketpp/websocketpp/processors/base.hpp	/^    bad_request,$/;"	e	enum:websocketpp::processor::error::processor_errors
bad_stream	websocketpp/websocketpp/transport/iostream/base.hpp	/^    bad_stream$/;"	e	enum:websocketpp::transport::iostream::error::value
base	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef debug_asio base;$/;"	t	struct:debug_custom	file:
base	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::transport::asio::connection<config> base;$/;"	t	struct:mock_con	file:
base	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::transport::asio::endpoint<config> base;$/;"	t	struct:mock_endpoint	file:
base	websocketpp/test/transport/integration.cpp	/^    typedef websocketpp::config::asio base;$/;"	t	struct:config	file:
base	websocketpp/test/transport/integration.cpp	/^    typedef websocketpp::config::asio base;$/;"	t	struct:config_tls	file:
base	websocketpp/websocketpp/config/asio.hpp	/^    typedef core base;$/;"	t	struct:websocketpp::config::asio_tls
base	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef core_client base;$/;"	t	struct:websocketpp::config::asio_tls_client
base	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef core base;$/;"	t	struct:websocketpp::config::asio
base	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef core_client base;$/;"	t	struct:websocketpp::config::asio_client
base	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef debug_core base;$/;"	t	struct:websocketpp::config::debug_asio_tls
base	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef debug_core base;$/;"	t	struct:websocketpp::config::debug_asio
base	websocketpp/websocketpp/logger/syslog.hpp	/^    typedef basic<concurrency, names> base;$/;"	t	class:websocketpp::log::syslog
base	websocketpp/websocketpp/processors/hybi00.hpp	/^    typedef processor<config> base;$/;"	t	class:websocketpp::processor::hybi00
base	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef processor<config> base;$/;"	t	class:websocketpp::processor::hybi13
base64_chars	websocketpp/websocketpp/base64/base64.hpp	/^static std::string const base64_chars =$/;"	m	class:websocketpp::std
base64_decode	websocketpp/websocketpp/base64/base64.hpp	/^inline std::string base64_decode(std::string const & input) {$/;"	f	namespace:websocketpp
base64_encode	websocketpp/websocketpp/base64/base64.hpp	/^inline std::string base64_encode(std::string const & input) {$/;"	f	namespace:websocketpp
base64_encode	websocketpp/websocketpp/base64/base64.hpp	/^inline std::string base64_encode(unsigned char const * input, size_t len) {$/;"	f	namespace:websocketpp
basic	websocketpp/websocketpp/concurrency/basic.hpp	/^class basic {$/;"	c	namespace:websocketpp::concurrency
basic	websocketpp/websocketpp/logger/basic.hpp	/^    basic<concurrency,names>(channel_type_hint::value h =$/;"	f	class:websocketpp::log::basic
basic	websocketpp/websocketpp/logger/basic.hpp	/^    basic<concurrency,names>(level c, channel_type_hint::value h =$/;"	f	class:websocketpp::log::basic
basic	websocketpp/websocketpp/logger/basic.hpp	/^    basic<concurrency,names>(level c, std::ostream * out)$/;"	f	class:websocketpp::log::basic
basic	websocketpp/websocketpp/logger/basic.hpp	/^    basic<concurrency,names>(std::ostream * out)$/;"	f	class:websocketpp::log::basic
basic	websocketpp/websocketpp/logger/basic.hpp	/^class basic {$/;"	c	namespace:websocketpp::log
basic_header	websocketpp/websocketpp/frame.hpp	/^    basic_header() : b0(0x00),b1(0x00) {}$/;"	f	struct:websocketpp::frame::basic_header
basic_header	websocketpp/websocketpp/frame.hpp	/^    basic_header(opcode::value op, uint64_t size, bool fin, bool mask,$/;"	f	struct:websocketpp::frame::basic_header
basic_header	websocketpp/websocketpp/frame.hpp	/^    basic_header(uint8_t p0, uint8_t p1) : b0(p0), b1(p1) {}$/;"	f	struct:websocketpp::frame::basic_header
basic_header	websocketpp/websocketpp/frame.hpp	/^struct basic_header {$/;"	s	namespace:websocketpp::frame
basic_header_length	websocketpp/websocketpp/frame.hpp	/^    static unsigned int const basic_header_length = 2;$/;"	m	namespace:websocketpp::frame::limits
basic_socket	websocketpp/websocketpp/transport/asio/security/none.hpp	/^namespace basic_socket {$/;"	n	namespace:websocketpp::transport::asio
batch	rib/rib.hpp	/^    RibUpdateBatch batch;$/;"	m	struct:nfd::rib::Rib::UpdateQueueItem
beforeChangePersistency	daemon/face/transport.hpp	/^  beforeChangePersistency(ndn::nfd::FacePersistency newPersistency)$/;"	f	class:nfd::face::Transport
beforeErase	daemon/table/cs-policy.cpp	/^Policy::beforeErase(iterator i)$/;"	f	class:nfd::cs::Policy
beforeEvict	daemon/table/cs-policy.hpp	/^  signal::Signal<Policy, iterator> beforeEvict;$/;"	m	class:nfd::cs::Policy
beforeExpirePendingInterest	daemon/fw/strategy.cpp	/^Strategy::beforeExpirePendingInterest(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::fw::Strategy
beforeExpirePendingInterest_count	tests/daemon/fw/dummy-strategy.hpp	/^  int beforeExpirePendingInterest_count;$/;"	m	class:nfd::tests::DummyStrategy
beforeRemoveFace	daemon/fw/strategy.hpp	/^  signal::Signal<FaceTable, shared_ptr<Face>>& beforeRemoveFace;$/;"	m	class:nfd::fw::Strategy
beforeSatisfyInterest	daemon/fw/access-strategy.cpp	/^AccessStrategy::beforeSatisfyInterest(shared_ptr<pit::Entry> pitEntry,$/;"	f	class:nfd::fw::AccessStrategy
beforeSatisfyInterest	daemon/fw/ncc-strategy.cpp	/^NccStrategy::beforeSatisfyInterest(shared_ptr<pit::Entry> pitEntry,$/;"	f	class:nfd::fw::NccStrategy
beforeSatisfyInterest	daemon/fw/strategy.cpp	/^Strategy::beforeSatisfyInterest(shared_ptr<pit::Entry> pitEntry,$/;"	f	class:nfd::fw::Strategy
beforeSatisfyInterest_count	tests/daemon/fw/dummy-strategy.hpp	/^  int beforeSatisfyInterest_count;$/;"	m	class:nfd::tests::DummyStrategy
beforeUse	daemon/table/cs-policy.cpp	/^Policy::beforeUse(iterator i)$/;"	f	class:nfd::cs::Policy
begin	daemon/fw/face-table.cpp	/^FaceTable::begin() const$/;"	f	class:nfd::FaceTable
begin	daemon/table/cs.hpp	/^  begin() const$/;"	f	class:nfd::cs::Cs
begin	daemon/table/fib.cpp	/^Fib::begin() const$/;"	f	class:nfd::Fib
begin	daemon/table/name-tree.hpp	/^NameTree::begin() const$/;"	f	class:nfd::NameTree
begin	daemon/table/pit.cpp	/^Pit::begin() const$/;"	f	class:nfd::Pit
begin	daemon/table/strategy-choice.cpp	/^StrategyChoice::begin() const$/;"	f	class:nfd::StrategyChoice
begin	rib/rib-entry.hpp	/^RibEntry::begin() const$/;"	f	class:nfd::rib::RibEntry
begin	rib/rib-entry.hpp	/^RibEntry::begin()$/;"	f	class:nfd::rib::RibEntry
begin	rib/rib-update-batch.cpp	/^RibUpdateBatch::begin() const$/;"	f	class:nfd::rib::RibUpdateBatch
begin	rib/rib.hpp	/^Rib::begin() const$/;"	f	class:nfd::rib::Rib
beginApplyUpdate	rib/rib.cpp	/^Rib::beginApplyUpdate(const RibUpdate& update,$/;"	f	class:nfd::rib::Rib
beginRemoveFace	rib/rib.cpp	/^Rib::beginRemoveFace(uint64_t faceId)$/;"	f	class:nfd::rib::Rib
bestFace	daemon/fw/ncc-strategy.hpp	/^    weak_ptr<Face> bestFace;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
bestFaceTimeout	daemon/fw/ncc-strategy.hpp	/^    scheduler::EventId bestFaceTimeout;$/;"	m	class:nfd::fw::NccStrategy::PitEntryInfo
binary	websocketpp/websocketpp/frame.hpp	/^        binary = 0x2,$/;"	e	enum:websocketpp::frame::opcode::value
blank	websocketpp/websocketpp/close.hpp	/^    static value const blank = 0;$/;"	m	namespace:websocketpp::close::status
body_encoding	websocketpp/websocketpp/http/parser.hpp	/^namespace body_encoding {$/;"	n	namespace:websocketpp::http::parser
body_ready	websocketpp/websocketpp/http/parser.hpp	/^    bool body_ready() const {$/;"	f	class:websocketpp::http::parser::parser
boost_error	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef boost::system::error_code boost_error;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
broadcastAddress	core/network-interface.hpp	/^  boost::asio::ip::address_v4 broadcastAddress;$/;"	m	class:nfd::NetworkInterfaceInfo
broadcast_server	websocketpp/docs/simple_broadcast_server.cpp	/^    broadcast_server() {$/;"	f	class:broadcast_server
broadcast_server	websocketpp/docs/simple_broadcast_server.cpp	/^class broadcast_server {$/;"	c	file:
broadcast_server	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    broadcast_server() {$/;"	f	class:broadcast_server
broadcast_server	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^class broadcast_server {$/;"	c	file:
broadcast_server	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    broadcast_server() {$/;"	f	class:broadcast_server
broadcast_server	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^class broadcast_server {$/;"	c	file:
bswap_16	core/city-hash.cpp	79;"	d	file:
bswap_32	core/city-hash.cpp	53;"	d	file:
bswap_32	core/city-hash.cpp	60;"	d	file:
bswap_32	core/city-hash.cpp	68;"	d	file:
bswap_32	core/city-hash.cpp	80;"	d	file:
bswap_64	core/city-hash.cpp	54;"	d	file:
bswap_64	core/city-hash.cpp	61;"	d	file:
bswap_64	core/city-hash.cpp	69;"	d	file:
bswap_64	core/city-hash.cpp	81;"	d	file:
buf	tools/ndn-autoconfig/base-dns.cpp	/^  uint8_t buf[NS_PACKETSZ];$/;"	m	union:ndn::tools::autoconfig::BaseDns::QueryAnswer	file:
buf	websocketpp/websocketpp/common/md5.hpp	/^    md5_byte_t buf[64];     \/* accumulate block *\/$/;"	m	struct:websocketpp::md5::md5_state_s
buf	websocketpp/websocketpp/transport/base/connection.hpp	/^    char const * buf;$/;"	m	struct:websocketpp::transport::buffer
buffer	websocketpp/websocketpp/transport/base/connection.hpp	/^    buffer(char const * b, size_t l) : buf(b),len(l) {}$/;"	f	struct:websocketpp::transport::buffer
buffer	websocketpp/websocketpp/transport/base/connection.hpp	/^struct buffer {$/;"	s	namespace:websocketpp::transport
buffered_amount	websocketpp/websocketpp/connection.hpp	/^    size_t buffered_amount() const {$/;"	f	class:websocketpp::connection
byte_mask	websocketpp/websocketpp/frame.hpp	/^void byte_mask(input_iter first, input_iter last, output_iter result,$/;"	f	namespace:websocketpp::frame
byte_mask	websocketpp/websocketpp/frame.hpp	/^void byte_mask(iter_type b, iter_type e, masking_key_type const & key,$/;"	f	namespace:websocketpp::frame
byte_mask_circ	websocketpp/websocketpp/frame.hpp	/^inline size_t byte_mask_circ(uint8_t * input, uint8_t * output, size_t length,$/;"	f	namespace:websocketpp::frame
byte_mask_circ	websocketpp/websocketpp/frame.hpp	/^inline size_t byte_mask_circ(uint8_t* data, size_t length, size_t prepared_key){$/;"	f	namespace:websocketpp::frame
bytes	websocketpp/websocketpp/frame.hpp	/^    uint8_t bytes[MAX_EXTENDED_HEADER_LENGTH];$/;"	m	struct:websocketpp::frame::extended_header
c	websocketpp/test/connection/connection.cpp	/^    websocketpp::connection<stub_config> c;$/;"	m	struct:connection_setup	file:
c	websocketpp/websocketpp/close.hpp	/^    char c[2];$/;"	m	union:websocketpp::close::code_converter
c	websocketpp/websocketpp/frame.hpp	/^    uint8_t  c[2];$/;"	m	union:websocketpp::frame::uint16_converter
c	websocketpp/websocketpp/frame.hpp	/^    uint8_t  c[8];$/;"	m	union:websocketpp::frame::uint64_converter
c	websocketpp/websocketpp/frame.hpp	/^    uint8_t c[4];$/;"	m	union:websocketpp::frame::uint32_converter
c1	core/city-hash.cpp	/^static const uint32_t c1 = 0xcc9e2d51;$/;"	v	file:
c2	core/city-hash.cpp	/^static const uint32_t c2 = 0x1b873593;$/;"	v	file:
calc	websocketpp/websocketpp/sha1/sha1.hpp	/^inline void calc(void const * src, size_t bytelength, unsigned char * hash) {$/;"	f	namespace:websocketpp::sha1
canForwardTo	daemon/table/pit-entry.cpp	/^Entry::canForwardTo(const Face& face) const$/;"	f	class:nfd::pit::Entry
canSatisfy	daemon/table/cs-entry.cpp	/^Entry::canSatisfy(const Interest& interest) const$/;"	f	class:nfd::cs::Entry
canStale	daemon/table/cs-entry-impl.cpp	/^EntryImpl::canStale() const$/;"	f	class:nfd::cs::EntryImpl
cancel	core/scheduler.cpp	/^ScopedEventId::cancel()$/;"	f	class:nfd::scheduler::ScopedEventId
cancel	core/scheduler.cpp	/^cancel(const EventId& eventId)$/;"	f	namespace:nfd::scheduler
cancel	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void cancel() {}$/;"	f	struct:websocketpp::transport::debug::timer
cancel	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void cancel() {}$/;"	f	struct:websocketpp::transport::iostream::timer
cancel	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void cancel() {}$/;"	f	struct:websocketpp::transport::stub::timer
cancelSelf	tests/core/scheduler.t.cpp	/^  cancelSelf()$/;"	f	class:nfd::tests::SelfCancelFixture
cancelUnsatisfyAndStragglerTimer	daemon/fw/forwarder.cpp	/^Forwarder::cancelUnsatisfyAndStragglerTimer(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::Forwarder
cancel_on_open	websocketpp/test/transport/integration.cpp	/^void cancel_on_open(server * s, websocketpp::connection_hdl) {$/;"	f
cancel_socket	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    void cancel_socket() {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
cancel_socket	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void cancel_socket() {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
case_count	websocketpp/examples/testee_client/testee_client.cpp	/^int case_count = 0;$/;"	v
category	websocketpp/websocketpp/error.hpp	/^    category() {}$/;"	f	class:websocketpp::error::category
category	websocketpp/websocketpp/error.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::error
category	websocketpp/websocketpp/extensions/extension.hpp	/^    category() {}$/;"	f	class:websocketpp::extensions::error::category
category	websocketpp/websocketpp/extensions/extension.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::extensions::error
category	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    category() {}$/;"	f	class:websocketpp::extensions::permessage_deflate::error::category
category	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::extensions::permessage_deflate::error
category	websocketpp/websocketpp/transport/asio/base.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::transport::asio::error
category	websocketpp/websocketpp/transport/base/connection.hpp	/^    category() {}$/;"	f	class:websocketpp::transport::error::category
category	websocketpp/websocketpp/transport/base/connection.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::transport::error
category	websocketpp/websocketpp/transport/debug/base.hpp	/^    category() {}$/;"	f	class:websocketpp::transport::debug::error::category
category	websocketpp/websocketpp/transport/debug/base.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::transport::debug::error
category	websocketpp/websocketpp/transport/iostream/base.hpp	/^    category() {}$/;"	f	class:websocketpp::transport::iostream::error::category
category	websocketpp/websocketpp/transport/iostream/base.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::transport::iostream::error
category	websocketpp/websocketpp/transport/stub/base.hpp	/^    category() {}$/;"	f	class:websocketpp::transport::stub::error::category
category	websocketpp/websocketpp/transport/stub/base.hpp	/^class category : public lib::error_category {$/;"	c	namespace:websocketpp::transport::stub::error
cfg_files	build/c4che/_cache.py	/^cfg_files = ['\/home\/zzfan\/Documents\/NDN\/NFD\/build\/config.hpp']$/;"	v
changeStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::changeStrategy(strategy_choice::Entry& entry,$/;"	f	class:nfd::StrategyChoice
channel1_onConnectFailed	tests/daemon/face/tcp.t.cpp	/^  channel1_onConnectFailed(const std::string& reason)$/;"	f	class:nfd::tests::EndToEndFixture
channel1_onConnectFailed	tests/daemon/face/unix-stream.t.cpp	/^  channel1_onConnectFailed(const std::string& reason)$/;"	f	class:nfd::tests::EndToEndFixture
channel1_onFaceCreated	tests/daemon/face/tcp.t.cpp	/^  channel1_onFaceCreated(const shared_ptr<Face>& newFace)$/;"	f	class:nfd::tests::EndToEndFixture
channel1_onFaceCreated	tests/daemon/face/unix-stream.t.cpp	/^  channel1_onFaceCreated(const shared_ptr<Face>& newFace)$/;"	f	class:nfd::tests::EndToEndFixture
channel1_onFaceCreated	tests/daemon/face/websocket.t.cpp	/^  channel1_onFaceCreated(const shared_ptr<Face>& newFace)$/;"	f	class:nfd::tests::EndToEndFixture
channel2_onConnectFailed	tests/daemon/face/tcp.t.cpp	/^  channel2_onConnectFailed(const std::string& reason)$/;"	f	class:nfd::tests::EndToEndFixture
channel2_onFaceCreated	tests/daemon/face/tcp.t.cpp	/^  channel2_onFaceCreated(const shared_ptr<Face>& newFace)$/;"	f	class:nfd::tests::EndToEndFixture
channel_name	websocketpp/websocketpp/logger/levels.hpp	/^    static char const * channel_name(level channel) {$/;"	f	struct:websocketpp::log::alevel
channel_name	websocketpp/websocketpp/logger/levels.hpp	/^    static char const * channel_name(level channel) {$/;"	f	struct:websocketpp::log::elevel
channel_onConnectFailed	tests/daemon/face/tcp.t.cpp	/^  channel_onConnectFailed(const std::string& reason)$/;"	f	class:nfd::tests::EndToEndFixture
channel_onConnectFailed	tests/daemon/face/unix-stream.t.cpp	/^  channel_onConnectFailed(const std::string& reason)$/;"	f	class:nfd::tests::EndToEndFixture
channel_onFaceCreated	tests/daemon/face/tcp.t.cpp	/^  channel_onFaceCreated(const shared_ptr<Face>& newFace)$/;"	f	class:nfd::tests::EndToEndFixture
channel_onFaceCreated	tests/daemon/face/unix-stream.t.cpp	/^  channel_onFaceCreated(const shared_ptr<Face>& newFace)$/;"	f	class:nfd::tests::EndToEndFixture
channel_type_hint	websocketpp/websocketpp/logger/levels.hpp	/^struct channel_type_hint {$/;"	s	namespace:websocketpp::log
checkError	tests/core/logger.t.cpp	/^checkError(const LoggerFactory::Error& error, const std::string& expected)$/;"	f	namespace:nfd::tests
checkError	tests/daemon/face/tcp.t.cpp	/^  checkError(const std::string& errorActual, const std::string& errorExpected)$/;"	f	class:nfd::tests::FaceCreateFixture
checkError	tests/daemon/face/udp.t.cpp	/^  checkError(const std::string& errorActual, const std::string& errorExpected)$/;"	f	class:nfd::tests::FaceCreateFixture
checkExceptionMessage	tests/daemon/mgmt/general-config-section.t.cpp	/^checkExceptionMessage(const ConfigFile::Error& error, const std::string& expected)$/;"	f	namespace:nfd::general::tests
checkFaceList	tests/daemon/face/tcp.t.cpp	/^  checkFaceList(size_t shouldBe)$/;"	f	class:nfd::tests::EndToEndFixture
checkMissingHandler	tests/core/config-file.t.cpp	/^  checkMissingHandler(const std::string& filename,$/;"	f	class:nfd::tests::MissingCallbackFixture
checkNextHop	tests/daemon/mgmt/fib-manager.t.cpp	/^  checkNextHop(const Name& prefix, ssize_t expectedNNextHops = -1,$/;"	f	class:nfd::tests::FibManagerFixture
checkRequest	tests/rib/auto-prefix-propagator.t.cpp	/^  checkRequest(size_t idx, const std::string& verb, const Name& registeringPrefix)$/;"	f	class:nfd::rib::tests::AutoPrefixPropagatorFixture
checkResponse	tests/daemon/mgmt/manager-common-fixture.cpp	/^ManagerCommonFixture::checkResponse(size_t idx,$/;"	f	class:nfd::tests::ManagerCommonFixture
check_ec	websocketpp/test/transport/integration.cpp	/^void check_ec(T * c, websocketpp::lib::error_code ec,$/;"	f
check_ec_and_stop	websocketpp/test/transport/integration.cpp	/^void check_ec_and_stop(T * e, websocketpp::lib::error_code ec,$/;"	f
check_on_fail	websocketpp/test/connection/connection.cpp	/^void check_on_fail(server* s, websocketpp::lib::error_code ec, bool & called, $/;"	f
chunked	websocketpp/websocketpp/http/parser.hpp	/^        chunked$/;"	e	enum:websocketpp::http::parser::body_encoding::value
ci_find_substr	websocketpp/websocketpp/utilities.hpp	/^typename T::const_iterator ci_find_substr(T const & haystack, T const & needle,$/;"	f	namespace:websocketpp::utility
ci_find_substr	websocketpp/websocketpp/utilities.hpp	/^typename T::const_iterator ci_find_substr(T const & haystack,$/;"	f	namespace:websocketpp::utility
ci_less	websocketpp/websocketpp/utilities.hpp	/^struct ci_less : std::binary_function<std::string, std::string, bool> {$/;"	s	namespace:websocketpp::utility
circshift_prepared_key	websocketpp/websocketpp/frame.hpp	/^inline size_t circshift_prepared_key(size_t prepared_key, size_t offset) {$/;"	f	namespace:websocketpp::frame
cleanup	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessageStore::cleanup(uint64_t messageIdentifier)$/;"	f	class:nfd::ndnlp::PartialMessageStore
cleanup	daemon/table/measurements.cpp	/^Measurements::cleanup(Entry& entry)$/;"	f	class:nfd::Measurements
cleanup_disconnect	websocketpp/examples/telemetry_server/index.html	/^function cleanup_disconnect() {$/;"	f
clearFibUpdates	tests/rib/fib-updates-common.hpp	/^  clearFibUpdates()$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
clearIncomingNack	daemon/table/pit-out-record.hpp	/^  clearIncomingNack()$/;"	f	class:nfd::pit::OutRecord
clearStrategyInfo	daemon/table/strategy-choice.cpp	/^clearStrategyInfo(const name_tree::Entry& nte)$/;"	f	namespace:nfd
clearStrategyInfo	daemon/table/strategy-info-host.cpp	/^StrategyInfoHost::clearStrategyInfo()$/;"	f	class:nfd::StrategyInfoHost
clearWBuffert	websocketpp/websocketpp/sha1/sha1.hpp	/^inline void clearWBuffert(unsigned int * buffert)$/;"	f	namespace:websocketpp::sha1::__anon2
clear_access_channels	websocketpp/websocketpp/endpoint.hpp	/^    void clear_access_channels(log::level channels) {$/;"	f	class:websocketpp::endpoint
clear_channels	websocketpp/websocketpp/logger/basic.hpp	/^    void clear_channels(level channels) {$/;"	f	class:websocketpp::log::basic
clear_channels	websocketpp/websocketpp/logger/stub.hpp	/^    void clear_channels(level) {}$/;"	f	class:websocketpp::log::stub
clear_error_channels	websocketpp/websocketpp/endpoint.hpp	/^    void clear_error_channels(log::level channels) {$/;"	f	class:websocketpp::endpoint
clear_function	websocketpp/websocketpp/common/functional.hpp	/^    void clear_function(T & x) {$/;"	f	namespace:websocketpp::lib
client	websocketpp/examples/debug_client/debug_client.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/examples/sip_client/sip_client.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	class:telemetry_client	file:
client	websocketpp/examples/testee_client/testee_client.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/examples/utility_client/utility_client.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/test/connection/connection_tu2.hpp	/^typedef websocketpp::client<websocketpp::config::core> client;$/;"	t
client	websocketpp/test/roles/client.cpp	/^typedef websocketpp::client<stub_config> client;$/;"	t	file:
client	websocketpp/test/transport/integration.cpp	/^typedef websocketpp::client<config> client;$/;"	t	file:
client	websocketpp/tutorials/utility_client/step2.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/tutorials/utility_client/step3.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/tutorials/utility_client/step4.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/tutorials/utility_client/step5.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/tutorials/utility_client/step6.cpp	/^typedef websocketpp::client<websocketpp::config::asio_client> client;$/;"	t	file:
client	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    explicit client() : endpoint_type(false)$/;"	f	class:websocketpp::client
client	websocketpp/websocketpp/roles/client_endpoint.hpp	/^class client : public endpoint<connection<config>,config> {$/;"	c	namespace:websocketpp
client1	tests/daemon/face/websocket.t.cpp	/^  Client client1;$/;"	m	class:nfd::tests::EndToEndFixture	file:
client1_onClose	tests/daemon/face/websocket.t.cpp	/^  client1_onClose(websocketpp::connection_hdl hdl)$/;"	f	class:nfd::tests::EndToEndFixture
client1_onFail	tests/daemon/face/websocket.t.cpp	/^  client1_onFail(websocketpp::connection_hdl hdl)$/;"	f	class:nfd::tests::EndToEndFixture
client1_onMessage	tests/daemon/face/websocket.t.cpp	/^  client1_onMessage(websocketpp::connection_hdl hdl,$/;"	f	class:nfd::tests::EndToEndFixture
client1_onOpen	tests/daemon/face/websocket.t.cpp	/^  client1_onOpen(websocketpp::connection_hdl hdl)$/;"	f	class:nfd::tests::EndToEndFixture
client1_onPing	tests/daemon/face/websocket.t.cpp	/^  client1_onPing(websocketpp::connection_hdl hdl, std::string msg)$/;"	f	class:nfd::tests::EndToEndFixture
client1_onReceiveData	tests/daemon/face/websocket.t.cpp	/^  client1_onReceiveData(const Data& data)$/;"	f	class:nfd::tests::EndToEndFixture
client1_onReceiveInterest	tests/daemon/face/websocket.t.cpp	/^  client1_onReceiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::EndToEndFixture
client1_receivedDatas	tests/daemon/face/websocket.t.cpp	/^  std::vector<Data> client1_receivedDatas;$/;"	m	class:nfd::tests::EndToEndFixture	file:
client1_receivedInterests	tests/daemon/face/websocket.t.cpp	/^  std::vector<Interest> client1_receivedInterests;$/;"	m	class:nfd::tests::EndToEndFixture	file:
client1_sendData	tests/daemon/face/websocket.t.cpp	/^  client1_sendData(const Data& data)$/;"	f	class:nfd::tests::EndToEndFixture
client1_sendInterest	tests/daemon/face/websocket.t.cpp	/^  client1_sendInterest(const Interest& interest)$/;"	f	class:nfd::tests::EndToEndFixture
clientFace	tests/daemon/face/internal-face.t.cpp	/^  shared_ptr<ndn::Face> clientFace;$/;"	m	class:nfd::face::tests::InternalFaceFixture	file:
client_handshake_request	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code client_handshake_request(request_type &, uri_ptr,$/;"	f	class:websocketpp::processor::hybi00
client_handshake_request	websocketpp/websocketpp/processors/hybi07.hpp	/^    lib::error_code client_handshake_request(request_type &, uri_ptr,$/;"	f	class:websocketpp::processor::hybi07
client_handshake_request	websocketpp/websocketpp/processors/hybi08.hpp	/^    lib::error_code client_handshake_request(request_type &, uri_ptr,$/;"	f	class:websocketpp::processor::hybi08
client_handshake_request	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code client_handshake_request(request_type & req, uri_ptr$/;"	f	class:websocketpp::processor::hybi13
client_onConnect	tests/daemon/face/unix-stream.t.cpp	/^  client_onConnect(const boost::system::error_code& error)$/;"	f	class:nfd::tests::EndToEndFixture
client_only	websocketpp/websocketpp/error.hpp	/^    client_only,$/;"	e	enum:websocketpp::error::value
client_tls	websocketpp/test/transport/integration.cpp	/^typedef websocketpp::client<config_tls> client_tls;$/;"	t	file:
client_version	websocketpp/websocketpp/config/core.hpp	/^    static const int client_version = 13; \/\/ RFC6455$/;"	m	struct:websocketpp::config::core
client_version	websocketpp/websocketpp/config/core_client.hpp	/^    static const int client_version = 13; \/\/ RFC6455$/;"	m	struct:websocketpp::config::core_client
client_version	websocketpp/websocketpp/config/debug.hpp	/^    static const int client_version = 13; \/\/ RFC6455$/;"	m	struct:websocketpp::config::debug_core
client_version	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const int client_version = 13; \/\/ RFC6455$/;"	m	struct:websocketpp::config::minimal_server
close	daemon/face/ethernet-face.cpp	/^EthernetFace::close()$/;"	f	class:nfd::EthernetFace
close	daemon/face/lp-face-wrapper.hpp	/^LpFaceWrapper::close()$/;"	f	class:nfd::face::LpFaceWrapper
close	daemon/face/lp-face.hpp	/^LpFace::close()$/;"	f	class:nfd::face::LpFace
close	daemon/face/null-face.cpp	/^NullFace::close()$/;"	f	class:nfd::NullFace
close	daemon/face/stream-face.hpp	/^StreamFace<T, U>::close()$/;"	f	class:nfd::StreamFace
close	daemon/face/transport.cpp	/^Transport::close()$/;"	f	class:nfd::face::Transport
close	daemon/face/websocket-face.cpp	/^WebSocketFace::close()$/;"	f	class:nfd::WebSocketFace
close	websocketpp/examples/utility_client/utility_client.cpp	/^    void close(int id, websocketpp::close::status::value code, std::string reason) {$/;"	f	class:websocket_endpoint
close	websocketpp/test/transport/integration.cpp	/^void close(T * e, websocketpp::connection_hdl hdl) {$/;"	f
close	websocketpp/tutorials/utility_client/step5.cpp	/^    void close(int id, websocketpp::close::status::value code, std::string reason) {$/;"	f	class:websocket_endpoint
close	websocketpp/tutorials/utility_client/step6.cpp	/^    void close(int id, websocketpp::close::status::value code, std::string reason) {$/;"	f	class:websocket_endpoint
close	websocketpp/websocketpp/close.hpp	/^namespace close {$/;"	n	namespace:websocketpp
close	websocketpp/websocketpp/frame.hpp	/^        close = 0x8,$/;"	e	enum:websocketpp::frame::opcode::value
close	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::close(close::status::value const code,$/;"	f	class:websocketpp::connection
close	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::close(connection_hdl hdl, close::status::value$/;"	f	class:websocketpp::endpoint
closeFaces	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  closeFaces()$/;"	f	class:nfd::tests::FaceManagerNode
closeIfIdle	daemon/face/unicast-udp-transport.cpp	/^UnicastUdpTransport::closeIfIdle()$/;"	f	class:nfd::face::UnicastUdpTransport
close_after_timeout	websocketpp/test/transport/integration.cpp	/^void close_after_timeout(T & e, websocketpp::connection_hdl hdl, long timeout) {$/;"	f
close_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(connection_hdl)> close_handler;$/;"	t	namespace:websocketpp
close_handshake_timeout	websocketpp/websocketpp/error.hpp	/^    close_handshake_timeout,$/;"	e	enum:websocketpp::error::value
close_reason_size	websocketpp/websocketpp/frame.hpp	/^    static uint8_t const close_reason_size = 123;$/;"	m	namespace:websocketpp::frame::limits
closed	websocketpp/websocketpp/connection.hpp	/^        closed = 3$/;"	e	enum:websocketpp::session::state::value
closed	websocketpp/websocketpp/connection.hpp	/^        closed,$/;"	e	enum:websocketpp::connection::terminate_status
closing	websocketpp/websocketpp/connection.hpp	/^        closing = 2,$/;"	e	enum:websocketpp::session::state::value
code	websocketpp/websocketpp/error.hpp	/^    lib::error_code code() const throw() {$/;"	f	class:websocketpp::exception
code_converter	websocketpp/websocketpp/close.hpp	/^union code_converter {$/;"	u	namespace:websocketpp::close
commandValidated	tests/daemon/mgmt/command-validator.t.cpp	/^  commandValidated() const$/;"	f	class:nfd::tests::CommandValidatorTester
commandValidationFailed	tests/daemon/mgmt/command-validator.t.cpp	/^  commandValidationFailed() const$/;"	f	class:nfd::tests::CommandValidatorTester
compareDataWithData	daemon/table/cs-entry-impl.cpp	/^compareDataWithData(const Data& lhs, const Data& rhs)$/;"	f	namespace:nfd::cs
compareFaceId	rib/route.hpp	/^compareFaceId(const Route& route, const uint64_t faceId)$/;"	f	namespace:nfd::rib
compareFaceIdAndOrigin	rib/route.hpp	/^compareFaceIdAndOrigin(const Route& lhs, const Route& rhs)$/;"	f	namespace:nfd::rib
compareLessSevere	daemon/fw/best-route-strategy2.cpp	/^compareLessSevere(lp::NackReason x, lp::NackReason y)$/;"	f	namespace:nfd::fw
compareNameFaceIdCostAction	tests/rib/fib-updates-common.hpp	/^compareNameFaceIdCostAction(const FibUpdate& lhs, const FibUpdate& rhs)$/;"	f	namespace:nfd::rib::tests
compareQueryWithData	daemon/table/cs-entry-impl.cpp	/^compareQueryWithData(const Name& queryName, const Data& data)$/;"	f	namespace:nfd::cs
compare_InRecord_expiry	daemon/fw/forwarder.cpp	/^compare_InRecord_expiry(const pit::InRecord& a, const pit::InRecord& b)$/;"	f	namespace:nfd
compare_pickInterest	daemon/fw/forwarder.cpp	/^compare_pickInterest(const pit::InRecord& a, const pit::InRecord& b, const Face* outFace)$/;"	f	namespace:nfd
complete	websocketpp/websocketpp/utf8_validator.hpp	/^    bool complete() {$/;"	f	class:websocketpp::utf8_validator::validator
complete_read	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void complete_read(lib::error_code const & ec) {$/;"	f	class:websocketpp::transport::debug::connection
complete_read	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void complete_read(lib::error_code const & ec) {$/;"	f	class:websocketpp::transport::iostream::connection
compress	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^    lib::error_code compress(std::string const &, std::string &) {$/;"	f	class:websocketpp::extensions::permessage_deflate::disabled
compress	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    lib::error_code compress(std::string const & in, std::string & out) {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
compressor_type	websocketpp/test/processors/extension_permessage_compress.cpp	/^    compressor_type;$/;"	t	file:
compute	daemon/table/name-tree.cpp	/^  compute(const char* buffer, size_t length)$/;"	f	class:nfd::name_tree::Hash32
compute	daemon/table/name-tree.cpp	/^  compute(const char* buffer, size_t length)$/;"	f	class:nfd::name_tree::Hash64
computeAndSendFibUpdates	rib/fib-updater.cpp	/^FibUpdater::computeAndSendFibUpdates(const RibUpdateBatch& batch,$/;"	f	class:nfd::rib::FibUpdater
computeHash	daemon/table/name-tree.cpp	/^computeHash(const Name& prefix)$/;"	f	namespace:nfd::name_tree
computeHashSet	daemon/table/name-tree.cpp	/^computeHashSet(const Name& prefix)$/;"	f	namespace:nfd::name_tree
computeMtu	daemon/face/udp-protocol.cpp	/^computeMtu(const boost::asio::ip::udp::endpoint& localEndpoint)$/;"	f	namespace:nfd::udp
computeRto	daemon/fw/rtt-estimator.cpp	/^RttEstimator::computeRto() const$/;"	f	class:nfd::RttEstimator
computeRtoAsFloatSeconds	tests/daemon/fw/rtt-estimator.t.cpp	/^computeRtoAsFloatSeconds(RttEstimator& rtt)$/;"	f	namespace:nfd::tests
computeUpdates	rib/fib-updater.cpp	/^FibUpdater::computeUpdates(const RibUpdateBatch& batch)$/;"	f	class:nfd::rib::FibUpdater
computeUpdatesForRegistration	rib/fib-updater.cpp	/^FibUpdater::computeUpdatesForRegistration(const RibUpdate& update)$/;"	f	class:nfd::rib::FibUpdater
computeUpdatesForUnregistration	rib/fib-updater.cpp	/^FibUpdater::computeUpdatesForUnregistration(const RibUpdate& update)$/;"	f	class:nfd::rib::FibUpdater
con_creation_failed	websocketpp/websocketpp/error.hpp	/^    con_creation_failed,$/;"	e	enum:websocketpp::error::value
con_list	websocketpp/docs/simple_broadcast_server.cpp	/^    typedef std::set<connection_hdl,std::owner_less<connection_hdl>> con_list;$/;"	t	class:broadcast_server	file:
con_list	websocketpp/docs/simple_count_server_thread.cpp	/^    typedef std::set<connection_hdl,std::owner_less<connection_hdl>> con_list;$/;"	t	class:count_server	file:
con_list	websocketpp/examples/associative_storage/associative_storage.cpp	/^    typedef std::map<connection_hdl,connection_data,std::owner_less<connection_hdl>> con_list;$/;"	t	class:print_server	file:
con_list	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    typedef std::set<connection_hdl,std::owner_less<connection_hdl> > con_list;$/;"	t	class:broadcast_server	file:
con_list	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    typedef std::set<connection_hdl,std::owner_less<connection_hdl>> con_list;$/;"	t	class:broadcast_server	file:
con_list	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    typedef std::set<connection_hdl,std::owner_less<connection_hdl>> con_list;$/;"	t	class:telemetry_server	file:
con_list	websocketpp/examples/utility_client/utility_client.cpp	/^    typedef std::map<int,connection_metadata::ptr> con_list;$/;"	t	class:websocket_endpoint	file:
con_list	websocketpp/tutorials/utility_client/step4.cpp	/^    typedef std::map<int,connection_metadata::ptr> con_list;$/;"	t	class:websocket_endpoint	file:
con_list	websocketpp/tutorials/utility_client/step5.cpp	/^    typedef std::map<int,connection_metadata::ptr> con_list;$/;"	t	class:websocket_endpoint	file:
con_list	websocketpp/tutorials/utility_client/step6.cpp	/^    typedef std::map<int,connection_metadata::ptr> con_list;$/;"	t	class:websocket_endpoint	file:
con_msg_man_ptr	websocketpp/test/message_buffer/alloc.cpp	/^    typedef typename con_msg_man_type::ptr con_msg_man_ptr;$/;"	t	struct:stub	file:
con_msg_man_ptr	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    typedef typename con_msg_manager::ptr con_msg_man_ptr;$/;"	t	class:websocketpp::message_buffer::alloc::endpoint_msg_manager
con_msg_man_ptr	websocketpp/websocketpp/message_buffer/message.hpp	/^    typedef typename con_msg_man_type::ptr con_msg_man_ptr;$/;"	t	class:websocketpp::message_buffer::message
con_msg_man_ptr	websocketpp/websocketpp/message_buffer/pool.hpp	/^    typedef typename con_msg_manager::ptr con_msg_man_ptr;$/;"	t	class:websocketpp::message_buffer::alloc::endpoint_msg_manager
con_msg_man_ptr	websocketpp/websocketpp/message_buffer/pool.hpp	/^    typedef typename con_msg_manager::weak_ptr con_msg_man_ptr;$/;"	t	class:websocketpp::message_buffer::message
con_msg_man_type	websocketpp/test/message_buffer/alloc.cpp	/^    typedef con_msg_manager<stub> con_msg_man_type;$/;"	t	struct:stub	file:
con_msg_man_type	websocketpp/websocketpp/message_buffer/message.hpp	/^    typedef con_msg_manager<message> con_msg_man_type;$/;"	t	class:websocketpp::message_buffer::message
con_msg_man_weak_ptr	websocketpp/test/message_buffer/alloc.cpp	/^    typedef typename con_msg_man_type::weak_ptr con_msg_man_weak_ptr;$/;"	t	struct:stub	file:
con_msg_man_weak_ptr	websocketpp/websocketpp/message_buffer/message.hpp	/^    typedef typename con_msg_man_type::weak_ptr con_msg_man_weak_ptr;$/;"	t	class:websocketpp::message_buffer::message
con_msg_manager	websocketpp/websocketpp/message_buffer/alloc.hpp	/^class con_msg_manager$/;"	c	namespace:websocketpp::message_buffer::alloc
con_msg_manager	websocketpp/websocketpp/message_buffer/pool.hpp	/^class con_msg_manager {$/;"	c	namespace:websocketpp::message_buffer::alloc
con_msg_manager	websocketpp/websocketpp/message_buffer/pool.hpp	/^class con_msg_manager {$/;"	c	namespace:websocketpp::message_buffer::pool
con_msg_manager_ptr	websocketpp/websocketpp/connection.hpp	/^    typedef typename con_msg_manager_type::ptr con_msg_manager_ptr;$/;"	t	class:websocketpp::connection
con_msg_manager_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:debug_custom	file:
con_msg_manager_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:custom_config	file:
con_msg_manager_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:testee_config	file:
con_msg_manager_type	websocketpp/test/connection/connection.cpp	/^    typedef core::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:debug_config_client	file:
con_msg_manager_type	websocketpp/test/connection/connection.cpp	/^    typedef core::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:stub_config	file:
con_msg_manager_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:stub_config	file:
con_msg_manager_type	websocketpp/test/processors/hybi00.cpp	/^        con_msg_manager_type;$/;"	t	struct:stub_config	file:
con_msg_manager_type	websocketpp/test/processors/hybi07.cpp	/^        con_msg_manager_type;$/;"	t	struct:stub_config	file:
con_msg_manager_type	websocketpp/test/processors/hybi08.cpp	/^        con_msg_manager_type;$/;"	t	struct:stub_config	file:
con_msg_manager_type	websocketpp/test/processors/hybi13.cpp	/^        con_msg_manager_type;$/;"	t	struct:stub_config	file:
con_msg_manager_type	websocketpp/test/processors/hybi13.cpp	/^        con_msg_manager_type;$/;"	t	struct:stub_config_ext	file:
con_msg_manager_type	websocketpp/test/processors/hybi13.cpp	/^typedef stub_config::con_msg_manager_type con_msg_manager_type;$/;"	t	file:
con_msg_manager_type	websocketpp/test/roles/client.cpp	/^    typedef core::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:stub_config	file:
con_msg_manager_type	websocketpp/test/transport/integration.cpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:config	file:
con_msg_manager_type	websocketpp/test/transport/integration.cpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:config_tls	file:
con_msg_manager_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:websocketpp::config::asio_tls
con_msg_manager_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:websocketpp::config::asio_tls_client
con_msg_manager_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:websocketpp::config::asio
con_msg_manager_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:websocketpp::config::asio_client
con_msg_manager_type	websocketpp/websocketpp/config/core.hpp	/^        con_msg_manager_type;$/;"	t	struct:websocketpp::config::core
con_msg_manager_type	websocketpp/websocketpp/config/core_client.hpp	/^        con_msg_manager_type;$/;"	t	struct:websocketpp::config::core_client
con_msg_manager_type	websocketpp/websocketpp/config/debug.hpp	/^        con_msg_manager_type;$/;"	t	struct:websocketpp::config::debug_core
con_msg_manager_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
con_msg_manager_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::con_msg_manager_type con_msg_manager_type;$/;"	t	struct:websocketpp::config::debug_asio
con_msg_manager_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        con_msg_manager_type;$/;"	t	struct:websocketpp::config::minimal_server
con_msg_manager_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::con_msg_manager_type con_msg_manager_type;$/;"	t	class:websocketpp::connection
con_type	websocketpp/test/transport/asio/timers.cpp	/^typedef websocketpp::transport::asio::connection<config> con_type;$/;"	t	file:
concatenateResponses	tests/daemon/mgmt/manager-common-fixture.cpp	/^ManagerCommonFixture::concatenateResponses(size_t startIndex, size_t nResponses)$/;"	f	class:nfd::tests::ManagerCommonFixture
concurrency	websocketpp/websocketpp/concurrency/basic.hpp	/^namespace concurrency {$/;"	n	namespace:websocketpp
concurrency	websocketpp/websocketpp/concurrency/none.hpp	/^namespace concurrency {$/;"	n	namespace:websocketpp
concurrency_type	websocketpp/examples/debug_server/debug_server.cpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:debug_custom::transport_config	file:
concurrency_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:debug_custom	file:
concurrency_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::concurrency_type concurrency_type;$/;"	t	struct:custom_config	file:
concurrency_type	websocketpp/examples/testee_server/testee_server.cpp	/^        typedef core::concurrency_type concurrency_type;$/;"	t	struct:testee_config::transport_config	file:
concurrency_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::concurrency_type concurrency_type;$/;"	t	struct:testee_config	file:
concurrency_type	websocketpp/test/connection/connection.cpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:debug_config_client::transport_config	file:
concurrency_type	websocketpp/test/connection/connection.cpp	/^    typedef core::concurrency_type concurrency_type;$/;"	t	struct:debug_config_client	file:
concurrency_type	websocketpp/test/connection/connection.cpp	/^    typedef core::concurrency_type concurrency_type;$/;"	t	struct:stub_config	file:
concurrency_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::concurrency_type concurrency_type;$/;"	t	struct:stub_config	file:
concurrency_type	websocketpp/test/roles/client.cpp	/^    typedef core::concurrency_type concurrency_type;$/;"	t	struct:stub_config	file:
concurrency_type	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::concurrency::none concurrency_type;$/;"	t	struct:config	file:
concurrency_type	websocketpp/test/transport/integration.cpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:config::transport_config	file:
concurrency_type	websocketpp/test/transport/integration.cpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:config_tls::transport_config	file:
concurrency_type	websocketpp/test/transport/integration.cpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:config	file:
concurrency_type	websocketpp/test/transport/integration.cpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:config_tls	file:
concurrency_type	websocketpp/test/transport/iostream/connection.cpp	/^    typedef websocketpp::concurrency::basic concurrency_type;$/;"	t	struct:config	file:
concurrency_type	websocketpp/websocketpp/config/asio.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio_tls::transport_config
concurrency_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio_tls
concurrency_type	websocketpp/websocketpp/config/asio_client.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio_tls_client::transport_config
concurrency_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio_tls_client
concurrency_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio::transport_config
concurrency_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio
concurrency_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio_client::transport_config
concurrency_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::asio_client
concurrency_type	websocketpp/websocketpp/config/core.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::core::transport_config
concurrency_type	websocketpp/websocketpp/config/core.hpp	/^    typedef websocketpp::concurrency::basic concurrency_type;$/;"	t	struct:websocketpp::config::core
concurrency_type	websocketpp/websocketpp/config/core_client.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::core_client::transport_config
concurrency_type	websocketpp/websocketpp/config/core_client.hpp	/^    typedef websocketpp::concurrency::basic concurrency_type;$/;"	t	struct:websocketpp::config::core_client
concurrency_type	websocketpp/websocketpp/config/core_client.hpp	/^    typedef websocketpp::concurrency::none concurrency_type;$/;"	t	struct:websocketpp::config::core_client
concurrency_type	websocketpp/websocketpp/config/debug.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::debug_core::transport_config
concurrency_type	websocketpp/websocketpp/config/debug.hpp	/^    typedef websocketpp::concurrency::basic concurrency_type;$/;"	t	struct:websocketpp::config::debug_core
concurrency_type	websocketpp/websocketpp/config/debug_asio.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::debug_asio_tls::transport_config
concurrency_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
concurrency_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::debug_asio::transport_config
concurrency_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::debug_asio
concurrency_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        typedef type::concurrency_type concurrency_type;$/;"	t	struct:websocketpp::config::minimal_server::transport_config
concurrency_type	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef websocketpp::concurrency::none concurrency_type;$/;"	t	struct:websocketpp::config::minimal_server
concurrency_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::connection
concurrency_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::endpoint
concurrency_type	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::client
concurrency_type	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::server
concurrency_type	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::transport::asio::endpoint
concurrency_type	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::transport::debug::connection
concurrency_type	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::transport::debug::endpoint
concurrency_type	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::transport::iostream::connection
concurrency_type	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::transport::iostream::endpoint
concurrency_type	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::transport::stub::connection
concurrency_type	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    typedef typename config::concurrency_type concurrency_type;$/;"	t	class:websocketpp::transport::stub::endpoint
config	websocketpp/test/extension/permessage_deflate.cpp	/^class config {};$/;"	c	file:
config	websocketpp/test/processors/extension_permessage_compress.cpp	/^struct config {$/;"	s	file:
config	websocketpp/test/transport/asio/timers.cpp	/^struct config {$/;"	s	file:
config	websocketpp/test/transport/integration.cpp	/^struct config : public websocketpp::config::asio_client {$/;"	s	file:
config	websocketpp/test/transport/iostream/connection.cpp	/^struct config {$/;"	s	file:
config	websocketpp/websocketpp/config/asio.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/asio_client.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/asio_no_tls.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/core.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/core_client.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/debug.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/debug_asio.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/minimal_client.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config	websocketpp/websocketpp/config/minimal_server.hpp	/^namespace config {$/;"	n	namespace:websocketpp
config_tls	websocketpp/test/transport/integration.cpp	/^struct config_tls : public websocketpp::config::asio_tls_client {$/;"	s	file:
conflict	websocketpp/websocketpp/http/constants.hpp	/^            conflict = 409,$/;"	e	enum:websocketpp::http::status_code::value
connect	daemon/face/tcp-channel.cpp	/^TcpChannel::connect(const tcp::Endpoint& remoteEndpoint,$/;"	f	class:nfd::TcpChannel
connect	daemon/face/udp-channel.cpp	/^UdpChannel::connect(const udp::Endpoint& remoteEndpoint,$/;"	f	class:nfd::UdpChannel
connect	tests/daemon/face/tcp.t.cpp	/^  connect(const shared_ptr<TcpChannel>& channel,$/;"	f	class:nfd::tests::EndToEndFixture
connect	websocketpp/examples/telemetry_server/index.html	/^function connect() {$/;"	f
connect	websocketpp/examples/utility_client/utility_client.cpp	/^    int connect(std::string const & uri) {$/;"	f	class:websocket_endpoint
connect	websocketpp/test/transport/asio/timers.cpp	/^    void connect(std::string u) {$/;"	f	struct:mock_endpoint
connect	websocketpp/tutorials/utility_client/step4.cpp	/^    int connect(std::string const & uri) {$/;"	f	class:websocket_endpoint
connect	websocketpp/tutorials/utility_client/step5.cpp	/^    int connect(std::string const & uri) {$/;"	f	class:websocket_endpoint
connect	websocketpp/tutorials/utility_client/step6.cpp	/^    int connect(std::string const & uri) {$/;"	f	class:websocket_endpoint
connect	websocketpp/websocketpp/logger/levels.hpp	/^    static level const connect = 0x1;$/;"	m	struct:websocketpp::log::alevel
connect	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    connection_ptr connect(connection_ptr con) {$/;"	f	class:websocketpp::client
connectToAcceptor	tests/daemon/face/unix-stream-transport.t.cpp	/^connectToAcceptor(unix_stream::acceptor& acceptor, unix_stream::socket& sock1, unix_stream::socket& sock2)$/;"	f	namespace:nfd::face::tests
connectToForwarder	daemon/face/internal-transport.cpp	/^InternalClientTransport::connectToForwarder(InternalForwarderTransport* forwarderTransport)$/;"	f	class:nfd::face::InternalClientTransport
connectToHub	tests/rib/auto-prefix-propagator.t.cpp	/^  connectToHub()$/;"	f	class:nfd::rib::tests::AutoPrefixPropagatorFixture
connectToHub	tools/ndn-autoconfig/base.cpp	/^Base::connectToHub(const std::string& uri)$/;"	f	class:ndn::tools::autoconfig::Base
connect_handler	websocketpp/websocketpp/transport/base/endpoint.hpp	/^typedef lib::function<void(lib::error_code const &)> connect_handler;$/;"	t	namespace:websocketpp::transport
connecting	websocketpp/websocketpp/connection.hpp	/^        connecting = 0,$/;"	e	enum:websocketpp::session::state::value
connection	websocketpp/websocketpp/connection.hpp	/^    explicit connection(bool p_is_server, std::string const & ua, alog_type& alog,$/;"	f	class:websocketpp::connection
connection	websocketpp/websocketpp/connection.hpp	/^class connection$/;"	c	namespace:websocketpp
connection	websocketpp/websocketpp/transport/asio/connection.hpp	/^    explicit connection(bool is_server, alog_type& alog, elog_type& elog)$/;"	f	class:websocketpp::transport::asio::connection
connection	websocketpp/websocketpp/transport/asio/connection.hpp	/^class connection : public config::socket_type::socket_con_type {$/;"	c	namespace:websocketpp::transport::asio
connection	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    explicit connection() : m_state(UNINITIALIZED) {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
connection	websocketpp/websocketpp/transport/asio/security/none.hpp	/^class connection : public lib::enable_shared_from_this<connection> {$/;"	c	namespace:websocketpp::transport::asio::basic_socket
connection	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    explicit connection() {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
connection	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^class connection : public lib::enable_shared_from_this<connection> {$/;"	c	namespace:websocketpp::transport::asio::tls_socket
connection	websocketpp/websocketpp/transport/debug/connection.hpp	/^    explicit connection(bool is_server, alog_type & alog, elog_type & elog)$/;"	f	class:websocketpp::transport::debug::connection
connection	websocketpp/websocketpp/transport/debug/connection.hpp	/^class connection : public lib::enable_shared_from_this< connection<config> > {$/;"	c	namespace:websocketpp::transport::debug
connection	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    explicit connection(bool is_server, alog_type & alog, elog_type & elog)$/;"	f	class:websocketpp::transport::iostream::connection
connection	websocketpp/websocketpp/transport/iostream/connection.hpp	/^class connection : public lib::enable_shared_from_this< connection<config> > {$/;"	c	namespace:websocketpp::transport::iostream
connection	websocketpp/websocketpp/transport/stub/connection.hpp	/^    explicit connection(bool is_server, alog_type & alog, elog_type & elog)$/;"	f	class:websocketpp::transport::stub::connection
connection	websocketpp/websocketpp/transport/stub/connection.hpp	/^class connection : public lib::enable_shared_from_this< connection<config> > {$/;"	c	namespace:websocketpp::transport::stub
connection_base	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef connection_data connection_base;$/;"	t	struct:custom_config	file:
connection_base	websocketpp/test/connection/connection.cpp	/^    typedef connection_extension connection_base;$/;"	t	struct:debug_config_client	file:
connection_base	websocketpp/test/connection/connection.cpp	/^    typedef connection_extension connection_base;$/;"	t	struct:stub_config	file:
connection_base	websocketpp/websocketpp/config/core.hpp	/^    typedef websocketpp::connection_base connection_base;$/;"	t	struct:websocketpp::config::core
connection_base	websocketpp/websocketpp/config/core_client.hpp	/^    typedef websocketpp::connection_base connection_base;$/;"	t	struct:websocketpp::config::core_client
connection_base	websocketpp/websocketpp/config/debug.hpp	/^    typedef websocketpp::connection_base connection_base;$/;"	t	struct:websocketpp::config::debug_core
connection_base	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef websocketpp::connection_base connection_base;$/;"	t	struct:websocketpp::config::minimal_server
connection_base	websocketpp/websocketpp/connection_base.hpp	/^class connection_base {};$/;"	c	namespace:websocketpp
connection_data	websocketpp/examples/associative_storage/associative_storage.cpp	/^struct connection_data {$/;"	s	file:
connection_data	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^struct connection_data {$/;"	s	file:
connection_extension	websocketpp/test/connection/connection.cpp	/^    connection_extension() : extension_value(5) {}$/;"	f	struct:connection_extension
connection_extension	websocketpp/test/connection/connection.cpp	/^struct connection_extension {$/;"	s	file:
connection_hdl	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    typedef websocketpp::connection_hdl connection_hdl;$/;"	t	class:telemetry_server	file:
connection_hdl	websocketpp/websocketpp/common/connection_hdl.hpp	/^typedef lib::weak_ptr<void> connection_hdl;$/;"	t	namespace:websocketpp
connection_metadata	websocketpp/examples/utility_client/utility_client.cpp	/^    connection_metadata(int id, websocketpp::connection_hdl hdl, std::string uri)$/;"	f	class:connection_metadata
connection_metadata	websocketpp/examples/utility_client/utility_client.cpp	/^class connection_metadata {$/;"	c	file:
connection_metadata	websocketpp/tutorials/utility_client/step4.cpp	/^    connection_metadata(int id, websocketpp::connection_hdl hdl, std::string uri)$/;"	f	class:connection_metadata
connection_metadata	websocketpp/tutorials/utility_client/step4.cpp	/^class connection_metadata {$/;"	c	file:
connection_metadata	websocketpp/tutorials/utility_client/step5.cpp	/^    connection_metadata(int id, websocketpp::connection_hdl hdl, std::string uri)$/;"	f	class:connection_metadata
connection_metadata	websocketpp/tutorials/utility_client/step5.cpp	/^class connection_metadata {$/;"	c	file:
connection_metadata	websocketpp/tutorials/utility_client/step6.cpp	/^    connection_metadata(int id, websocketpp::connection_hdl hdl, std::string uri)$/;"	f	class:connection_metadata
connection_metadata	websocketpp/tutorials/utility_client/step6.cpp	/^class connection_metadata {$/;"	c	file:
connection_ptr	websocketpp/examples/debug_client/debug_client.cpp	/^typedef client::connection_ptr connection_ptr;$/;"	t	file:
connection_ptr	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^typedef server::connection_ptr connection_ptr;$/;"	t	file:
connection_ptr	websocketpp/test/roles/client.cpp	/^typedef client::connection_ptr connection_ptr;$/;"	t	file:
connection_ptr	websocketpp/test/transport/asio/timers.cpp	/^typedef websocketpp::lib::shared_ptr<mock_con> connection_ptr;$/;"	t	file:
connection_ptr	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename connection_type::ptr connection_ptr;$/;"	t	class:websocketpp::endpoint
connection_ptr	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef typename connection_type::ptr connection_ptr;$/;"	t	class:websocketpp::client
connection_ptr	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef typename connection_type::ptr connection_ptr;$/;"	t	class:websocketpp::server
connection_read_buffer_size	websocketpp/websocketpp/config/core.hpp	/^    static const size_t connection_read_buffer_size = 16384;$/;"	m	struct:websocketpp::config::core
connection_read_buffer_size	websocketpp/websocketpp/config/core_client.hpp	/^    static const size_t connection_read_buffer_size = 16384;$/;"	m	struct:websocketpp::config::core_client
connection_read_buffer_size	websocketpp/websocketpp/config/debug.hpp	/^    static const size_t connection_read_buffer_size = 16384;$/;"	m	struct:websocketpp::config::debug_core
connection_read_buffer_size	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const size_t connection_read_buffer_size = 16384;$/;"	m	struct:websocketpp::config::minimal_server
connection_setup	websocketpp/test/connection/connection.cpp	/^    connection_setup(bool p_is_server) : c(p_is_server, "", alog, elog, rng) {}$/;"	f	struct:connection_setup
connection_setup	websocketpp/test/connection/connection.cpp	/^struct connection_setup {$/;"	s	file:
connection_token	websocketpp/websocketpp/processors/base.hpp	/^static char const connection_token[] = "upgrade";$/;"	m	namespace:websocketpp::processor::constants
connection_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef connection connection_type;$/;"	t	class:websocketpp::endpoint
connection_type	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef connection<config> connection_type;$/;"	t	class:websocketpp::client
connection_type	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef connection<config> connection_type;$/;"	t	class:websocketpp::server
connection_weak_ptr	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename connection_type::weak_ptr connection_weak_ptr;$/;"	t	class:websocketpp::endpoint
const_iterator	daemon/fw/face-table.hpp	/^  typedef boost::range_iterator<ForwardRange>::type const_iterator;$/;"	t	class:nfd::FaceTable
const_iterator	daemon/table/cs.hpp	/^  typedef boost::transform_iterator<EntryFromEntryImpl, iterator, const Entry&> const_iterator;$/;"	t	class:nfd::cs::Cs
const_iterator	daemon/table/fib.hpp	/^  class const_iterator : public std::iterator<std::forward_iterator_tag, const fib::Entry>$/;"	c	class:nfd::Fib
const_iterator	daemon/table/fib.hpp	/^Fib::const_iterator::const_iterator(const NameTree::const_iterator& it)$/;"	f	class:nfd::Fib::const_iterator
const_iterator	daemon/table/name-tree.cpp	/^NameTree::const_iterator::const_iterator()$/;"	f	class:nfd::NameTree::const_iterator
const_iterator	daemon/table/name-tree.cpp	/^NameTree::const_iterator::const_iterator(NameTree::IteratorType type,$/;"	f	class:nfd::NameTree::const_iterator
const_iterator	daemon/table/name-tree.hpp	/^  class const_iterator : public std::iterator<std::forward_iterator_tag, const name_tree::Entry>$/;"	c	class:nfd::NameTree
const_iterator	daemon/table/pit.hpp	/^  class const_iterator : public std::iterator<std::forward_iterator_tag, const pit::Entry>$/;"	c	class:nfd::Pit
const_iterator	daemon/table/pit.hpp	/^Pit::const_iterator::const_iterator()$/;"	f	class:nfd::Pit::const_iterator
const_iterator	daemon/table/pit.hpp	/^Pit::const_iterator::const_iterator(const NameTree::const_iterator& it)$/;"	f	class:nfd::Pit::const_iterator
const_iterator	daemon/table/strategy-choice.hpp	/^  class const_iterator$/;"	c	class:nfd::StrategyChoice
const_iterator	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::const_iterator(const NameTree::const_iterator& it)$/;"	f	class:nfd::StrategyChoice::const_iterator
const_iterator	rib/rib-entry.hpp	/^  typedef RouteList::const_iterator const_iterator;$/;"	t	class:nfd::rib::RibEntry
const_iterator	rib/rib-update-batch.hpp	/^  typedef RibUpdateList::const_iterator const_iterator;$/;"	t	class:nfd::rib::RibUpdateBatch
const_iterator	rib/rib.hpp	/^  typedef RibTable::const_iterator const_iterator;$/;"	t	class:nfd::rib::Rib
constants	websocketpp/websocketpp/processors/base.hpp	/^namespace constants {$/;"	n	namespace:websocketpp::processor
construct	tests/daemon/face/face-history.hpp	/^  construct(Face& face)$/;"	f	class:nfd::tests::FaceHistory
consume	websocketpp/websocketpp/http/impl/request.hpp	/^inline size_t request::consume(char const * buf, size_t len) {$/;"	f	class:websocketpp::http::parser::request
consume	websocketpp/websocketpp/http/impl/response.hpp	/^inline size_t response::consume(char const * buf, size_t len) {$/;"	f	class:websocketpp::http::parser::response
consume	websocketpp/websocketpp/http/impl/response.hpp	/^inline size_t response::consume(std::istream & s) {$/;"	f	class:websocketpp::http::parser::response
consume	websocketpp/websocketpp/processors/hybi00.hpp	/^    size_t consume(uint8_t * buf, size_t len, lib::error_code & ec) {$/;"	f	class:websocketpp::processor::hybi00
consume	websocketpp/websocketpp/processors/hybi13.hpp	/^    size_t consume(uint8_t * buf, size_t len, lib::error_code & ec) {$/;"	f	class:websocketpp::processor::hybi13
consume	websocketpp/websocketpp/utf8_validator.hpp	/^    bool consume (uint8_t byte) {$/;"	f	class:websocketpp::utf8_validator::validator
context_ptr	websocketpp/examples/debug_client/debug_client.cpp	/^typedef websocketpp::lib::shared_ptr<boost::asio::ssl::context> context_ptr;$/;"	t	file:
context_ptr	websocketpp/examples/echo_server_both/echo_server_both.cpp	/^typedef websocketpp::lib::shared_ptr<boost::asio::ssl::context> context_ptr;$/;"	t	file:
context_ptr	websocketpp/examples/echo_server_tls/echo_server_tls.cpp	/^typedef websocketpp::lib::shared_ptr<boost::asio::ssl::context> context_ptr;$/;"	t	file:
context_ptr	websocketpp/test/transport/asio/timers.cpp	/^typedef websocketpp::lib::shared_ptr<boost::asio::ssl::context> context_ptr;$/;"	t	file:
context_ptr	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef lib::shared_ptr<boost::asio::ssl::context> context_ptr;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
continuation	websocketpp/websocketpp/frame.hpp	/^        continuation = 0x0,$/;"	e	enum:websocketpp::frame::opcode::value
continueProcessPacket	tests/daemon/fw/forwarder.t.cpp	/^  continueProcessPacket()$/;"	f	class:nfd::tests::MalformedPacketFixture	file:
continue_code	websocketpp/websocketpp/http/constants.hpp	/^            continue_code = 100,$/;"	e	enum:websocketpp::http::status_code::value
control	websocketpp/websocketpp/logger/levels.hpp	/^    static level const control = 0x4;$/;"	m	struct:websocketpp::log::alevel
control_rsvb	websocketpp/websocketpp/frame.hpp	/^        control_rsvb = 0xB,$/;"	e	enum:websocketpp::frame::opcode::value
control_rsvc	websocketpp/websocketpp/frame.hpp	/^        control_rsvc = 0xC,$/;"	e	enum:websocketpp::frame::opcode::value
control_rsvd	websocketpp/websocketpp/frame.hpp	/^        control_rsvd = 0xD,$/;"	e	enum:websocketpp::frame::opcode::value
control_rsve	websocketpp/websocketpp/frame.hpp	/^        control_rsve = 0xE,$/;"	e	enum:websocketpp::frame::opcode::value
control_rsvf	websocketpp/websocketpp/frame.hpp	/^        control_rsvf = 0xF,$/;"	e	enum:websocketpp::frame::opcode::value
control_too_big	websocketpp/websocketpp/processors/base.hpp	/^    control_too_big,$/;"	e	enum:websocketpp::processor::error::processor_errors
controller	tests/rib/fib-updates-common.hpp	/^  ndn::nfd::Controller controller;$/;"	m	class:nfd::rib::tests::FibUpdatesFixture
copyStatusTo	daemon/face/face.cpp	/^Face::copyStatusTo(FaceTraits& traits) const$/;"	f	class:nfd::Face
copyTo	daemon/face/face-counters.hpp	/^  copyTo(R& recipient) const$/;"	f	class:nfd::FaceCounters
copyTo	daemon/face/face-counters.hpp	/^  copyTo(R& recipient) const$/;"	f	class:nfd::LinkLayerCounters
copyTo	daemon/face/face-counters.hpp	/^  copyTo(R& recipient) const$/;"	f	class:nfd::NetworkLayerCounters
copyTo	daemon/fw/forwarder-counters.hpp	/^  copyTo(R& recipient) const$/;"	f	class:nfd::ForwarderCounters
copy_basic_header_bytes	websocketpp/websocketpp/processors/hybi13.hpp	/^    size_t copy_basic_header_bytes(uint8_t const * buf, size_t len) {$/;"	f	class:websocketpp::processor::hybi13
copy_extended_header_bytes	websocketpp/websocketpp/processors/hybi13.hpp	/^    size_t copy_extended_header_bytes(uint8_t const * buf, size_t len) {$/;"	f	class:websocketpp::processor::hybi13
copy_payload	websocketpp/websocketpp/frame.hpp	/^    int copy_payload(uint64_t payload_size) {$/;"	f	struct:websocketpp::frame::extended_header
copyright	docs/conf.py	/^copyright = u'2014, Named Data Networking Project'$/;"	v
core	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef websocketpp::config::asio core;$/;"	t	struct:custom_config	file:
core	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef websocketpp::config::asio core;$/;"	t	struct:testee_config	file:
core	websocketpp/websocketpp/config/core.hpp	/^struct core {$/;"	s	namespace:websocketpp::config
core_client	websocketpp/websocketpp/config/core_client.hpp	/^struct core_client {$/;"	s	namespace:websocketpp::config
cost	rib/fib-update.hpp	/^  uint64_t cost;$/;"	m	class:nfd::rib::FibUpdate
cost	rib/route.hpp	/^  uint64_t cost;$/;"	m	class:nfd::rib::Route
count	daemon/face/ndnlp-sequence-generator.hpp	/^SequenceBlock::count() const$/;"	f	class:nfd::ndnlp::SequenceBlock
count	websocketpp/docs/simple_count_server_thread.cpp	/^    void count() {$/;"	f	class:count_server
count	websocketpp/websocketpp/common/md5.hpp	/^    md5_word_t count[2];    \/* message length in bits, lsw first *\/$/;"	m	struct:websocketpp::md5::md5_state_s
count1	tests/core/scheduler.t.cpp	/^  int count1;$/;"	m	class:nfd::tests::SchedulerFixture	file:
count2	tests/core/scheduler.t.cpp	/^  int count2;$/;"	m	class:nfd::tests::SchedulerFixture	file:
count3	tests/core/scheduler.t.cpp	/^  int count3;$/;"	m	class:nfd::tests::SchedulerFixture	file:
countMarks	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::countMarks() const$/;"	f	class:nfd::DeadNonceList
count_server	websocketpp/docs/simple_count_server_thread.cpp	/^    count_server() : m_count(0) {$/;"	f	class:count_server
count_server	websocketpp/docs/simple_count_server_thread.cpp	/^class count_server {$/;"	c	file:
create	core/logger-factory.cpp	/^LoggerFactory::create(const std::string& moduleName)$/;"	f	class:nfd::LoggerFactory
createAddUpdate	rib/fib-update.cpp	/^FibUpdate::createAddUpdate(const Name& name, const uint64_t faceId, const uint64_t cost)$/;"	f	class:nfd::rib::FibUpdate
createChannel	daemon/face/tcp-factory.cpp	/^TcpFactory::createChannel(const std::string& localIp, const std::string& localPort)$/;"	f	class:nfd::TcpFactory
createChannel	daemon/face/tcp-factory.cpp	/^TcpFactory::createChannel(const tcp::Endpoint& endpoint)$/;"	f	class:nfd::TcpFactory
createChannel	daemon/face/udp-factory.cpp	/^UdpFactory::createChannel(const std::string& localIp, const std::string& localPort,$/;"	f	class:nfd::UdpFactory
createChannel	daemon/face/udp-factory.cpp	/^UdpFactory::createChannel(const udp::Endpoint& endpoint,$/;"	f	class:nfd::UdpFactory
createChannel	daemon/face/unix-stream-factory.cpp	/^UnixStreamFactory::createChannel(const std::string& unixSocketPath)$/;"	f	class:nfd::UnixStreamFactory
createChannel	daemon/face/websocket-factory.cpp	/^WebSocketFactory::createChannel(const std::string& localIp, const std::string& localPort)$/;"	f	class:nfd::WebSocketFactory
createChannel	daemon/face/websocket-factory.cpp	/^WebSocketFactory::createChannel(const websocket::Endpoint& endpoint)$/;"	f	class:nfd::WebSocketFactory
createDataPacket	tools/ndn-tlv-poke.cpp	/^  createDataPacket()$/;"	f	class:ndntlvpoke::NdnTlvPoke
createFace	daemon/face/ethernet-factory.cpp	/^EthernetFactory::createFace(const FaceUri& uri,$/;"	f	class:nfd::EthernetFactory
createFace	daemon/face/tcp-channel.cpp	/^TcpChannel::createFace(ip::tcp::socket socket,$/;"	f	class:nfd::TcpChannel
createFace	daemon/face/tcp-factory.cpp	/^TcpFactory::createFace(const FaceUri& uri,$/;"	f	class:nfd::TcpFactory
createFace	daemon/face/udp-channel.cpp	/^UdpChannel::createFace(const udp::Endpoint& remoteEndpoint, ndn::nfd::FacePersistency persistency)$/;"	f	class:nfd::UdpChannel
createFace	daemon/face/udp-factory.cpp	/^UdpFactory::createFace(const FaceUri& uri,$/;"	f	class:nfd::UdpFactory
createFace	daemon/face/unix-stream-factory.cpp	/^UnixStreamFactory::createFace(const FaceUri& uri,$/;"	f	class:nfd::UnixStreamFactory
createFace	daemon/face/websocket-factory.cpp	/^WebSocketFactory::createFace(const FaceUri& uri,$/;"	f	class:nfd::WebSocketFactory
createFace	daemon/mgmt/face-manager.cpp	/^FaceManager::createFace(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FaceManager
createFibUpdatesForErasedRibEntry	rib/fib-updater.cpp	/^FibUpdater::createFibUpdatesForErasedRibEntry(const RibEntry& entry)$/;"	f	class:nfd::rib::FibUpdater
createFibUpdatesForErasedRoute	rib/fib-updater.cpp	/^FibUpdater::createFibUpdatesForErasedRoute(const RibEntry& entry, const Route& route,$/;"	f	class:nfd::rib::FibUpdater
createFibUpdatesForNewRibEntry	rib/fib-updater.cpp	/^FibUpdater::createFibUpdatesForNewRibEntry(const Name& name, const Route& route,$/;"	f	class:nfd::rib::FibUpdater
createFibUpdatesForNewRoute	rib/fib-updater.cpp	/^FibUpdater::createFibUpdatesForNewRoute(const RibEntry& entry, const Route& route,$/;"	f	class:nfd::rib::FibUpdater
createFibUpdatesForUpdatedRoute	rib/fib-updater.cpp	/^FibUpdater::createFibUpdatesForUpdatedRoute(const RibEntry& entry, const Route& route,$/;"	f	class:nfd::rib::FibUpdater
createInterestPacket	tools/ndn-tlv-peek.cpp	/^  createInterestPacket()$/;"	f	class:ndntlvpeek::NdnTlvPeek
createLogger	core/logger-factory.cpp	/^LoggerFactory::createLogger(const std::string& moduleName)$/;"	f	class:nfd::LoggerFactory
createMulticastFace	daemon/face/ethernet-factory.cpp	/^EthernetFactory::createMulticastFace(const NetworkInterfaceInfo& interface,$/;"	f	class:nfd::EthernetFactory
createMulticastFace	daemon/face/udp-factory.cpp	/^UdpFactory::createMulticastFace(const std::string& localIp,$/;"	f	class:nfd::UdpFactory
createMulticastFace	daemon/face/udp-factory.cpp	/^UdpFactory::createMulticastFace(const udp::Endpoint& localEndpoint,$/;"	f	class:nfd::UdpFactory
createRemoveUpdate	rib/fib-update.cpp	/^FibUpdate::createRemoveUpdate(const Name& name, const uint64_t faceId)$/;"	f	class:nfd::rib::FibUpdate
createRoute	tests/rib/rib-test-common.hpp	/^createRoute(uint64_t faceId, uint64_t origin, uint64_t cost, uint64_t flags)$/;"	f	namespace:nfd::rib::tests
create_connection	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^endpoint<connection,config>::create_connection() {$/;"	f	class:websocketpp::endpoint
created	websocketpp/websocketpp/http/constants.hpp	/^            created = 201,$/;"	e	enum:websocketpp::http::status_code::value
cs	daemon/table/cs-entry-impl.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	daemon/table/cs-entry-impl.hpp	/^namespace cs {$/;"	n	namespace:nfd
cs	daemon/table/cs-entry.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	daemon/table/cs-entry.hpp	/^namespace cs {$/;"	n	namespace:nfd
cs	daemon/table/cs-internal.hpp	/^namespace cs {$/;"	n	namespace:nfd
cs	daemon/table/cs-policy-lru.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	daemon/table/cs-policy-lru.hpp	/^namespace cs {$/;"	n	namespace:nfd
cs	daemon/table/cs-policy-priority-fifo.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	daemon/table/cs-policy-priority-fifo.hpp	/^namespace cs {$/;"	n	namespace:nfd
cs	daemon/table/cs-policy.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	daemon/table/cs-policy.hpp	/^namespace cs {$/;"	n	namespace:nfd
cs	daemon/table/cs.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	daemon/table/cs.hpp	/^namespace cs {$/;"	n	namespace:nfd
cs	tests/daemon/table/cs-policy-lru.t.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	tests/daemon/table/cs-policy-priority-fifo.t.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	tests/daemon/table/cs.t.cpp	/^namespace cs {$/;"	n	namespace:nfd	file:
cs	tests/other/cs-benchmark.cpp	/^  Cs cs;$/;"	m	class:nfd::tests::CsBenchmarkFixture	file:
custom_alloc_handler	websocketpp/websocketpp/transport/asio/base.hpp	/^  custom_alloc_handler(handler_allocator& a, Handler h)$/;"	f	class:websocketpp::transport::asio::custom_alloc_handler
custom_alloc_handler	websocketpp/websocketpp/transport/asio/base.hpp	/^class custom_alloc_handler$/;"	c	namespace:websocketpp::transport::asio
custom_config	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^struct custom_config : public websocketpp::config::asio {$/;"	s	file:
custom_on_msg	websocketpp/examples/handler_switch/handler_switch.cpp	/^void custom_on_msg(server & s, connection_hdl hdl, server::message_ptr msg) {$/;"	f
cwd	waf	/^cwd = os.getcwd()$/;"	v
cxxprogram_PATTERN	build/c4che/_cache.py	/^cxxprogram_PATTERN = '%s'$/;"	v
cxxshlib_PATTERN	build/c4che/_cache.py	/^cxxshlib_PATTERN = 'lib%s.so'$/;"	v
cxxstlib_PATTERN	build/c4che/_cache.py	/^cxxstlib_PATTERN = 'lib%s.a'$/;"	v
data	tests/daemon/face/packet-datasets.hpp	/^  Container data;$/;"	m	class:nfd::tests::CorruptedInterest
data	tests/daemon/face/packet-datasets.hpp	/^  Container data;$/;"	m	class:nfd::tests::CorruptedInterestWithLocalControlHeader
deallocate	websocketpp/websocketpp/transport/asio/base.hpp	/^  void deallocate(void* pointer)$/;"	f	class:websocketpp::transport::asio::handler_allocator
debug	websocketpp/websocketpp/transport/debug/base.hpp	/^namespace debug {$/;"	n	namespace:websocketpp::transport
debug	websocketpp/websocketpp/transport/debug/connection.hpp	/^namespace debug {$/;"	n	namespace:websocketpp::transport
debug	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^namespace debug {$/;"	n	namespace:websocketpp::transport
debug_asio	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^struct debug_asio : public debug_core {$/;"	s	namespace:websocketpp::config
debug_asio_tls	websocketpp/websocketpp/config/debug_asio.hpp	/^struct debug_asio_tls : public debug_core {$/;"	s	namespace:websocketpp::config
debug_client	websocketpp/test/connection/connection.cpp	/^typedef websocketpp::client<debug_config_client> debug_client;$/;"	t	file:
debug_close	websocketpp/websocketpp/logger/levels.hpp	/^    static level const debug_close = 0x200;$/;"	m	struct:websocketpp::log::alevel
debug_config_client	websocketpp/test/connection/connection.cpp	/^struct debug_config_client : public websocketpp::config::core {$/;"	s	file:
debug_core	websocketpp/websocketpp/config/debug.hpp	/^struct debug_core {$/;"	s	namespace:websocketpp::config
debug_custom	websocketpp/examples/debug_server/debug_server.cpp	/^struct debug_custom : public websocketpp::config::debug_asio {$/;"	s	file:
debug_handshake	websocketpp/websocketpp/logger/levels.hpp	/^    static level const debug_handshake = 0x100;$/;"	m	struct:websocketpp::log::alevel
debug_server	websocketpp/test/connection/connection.cpp	/^typedef websocketpp::server<debug_config_client> debug_server;$/;"	t	file:
decide	daemon/fw/retx-suppression-exponential.cpp	/^RetxSuppressionExponential::decide(const Face& inFace, const Interest& interest,$/;"	f	class:nfd::fw::RetxSuppressionExponential
decide	daemon/fw/retx-suppression-fixed.cpp	/^RetxSuppressionFixed::decide(const Face& inFace, const Interest& interest,$/;"	f	class:nfd::fw::RetxSuppressionFixed
decline	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    decline,$/;"	e	enum:websocketpp::extensions::permessage_deflate::mode::value
decode	websocketpp/websocketpp/utf8_validator.hpp	/^    bool decode (iterator_type begin, iterator_type end) {$/;"	f	class:websocketpp::utf8_validator::validator
decode	websocketpp/websocketpp/utf8_validator.hpp	/^inline uint32_t decode(uint32_t * state, uint32_t * codep, uint8_t byte) {$/;"	f	namespace:websocketpp::utf8_validator
decodeAndDispatchInput	daemon/face/face.cpp	/^Face::decodeAndDispatchInput(const Block& element)$/;"	f	class:nfd::Face
decodeAndDispatchInput	daemon/face/local-face.hpp	/^LocalFace::decodeAndDispatchInput(const Block& element)$/;"	f	class:nfd::LocalFace
decodeData	daemon/face/generic-link-service.cpp	/^GenericLinkService::decodeData(const Block& netPkt, const lp::Packet& firstPkt)$/;"	f	class:nfd::face::GenericLinkService
decodeInterest	daemon/face/generic-link-service.cpp	/^GenericLinkService::decodeInterest(const Block& netPkt, const lp::Packet& firstPkt)$/;"	f	class:nfd::face::GenericLinkService
decodeNack	daemon/face/generic-link-service.cpp	/^GenericLinkService::decodeNack(const Block& netPkt, const lp::Packet& firstPkt)$/;"	f	class:nfd::face::GenericLinkService
decodeRibEntryBlock	tests/rib/rib-status-publisher-common.hpp	/^  decodeRibEntryBlock(const Data& data, const Name& referenceName, const Route& referenceRoute)$/;"	f	class:nfd::rib::tests::RibStatusPublisherFixture
decode_client_key	websocketpp/websocketpp/processors/hybi00.hpp	/^    void decode_client_key(std::string const & key, char * result) const {$/;"	f	class:websocketpp::processor::hybi00
decompress	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^    lib::error_code decompress(uint8_t const *, size_t, std::string &) {$/;"	f	class:websocketpp::extensions::permessage_deflate::disabled
decompress	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    lib::error_code decompress(uint8_t const * buf, size_t len, std::string &$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
default_c2s_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^static uint8_t const default_c2s_max_window_bits = 15;$/;"	m	namespace:websocketpp::extensions::permessage_deflate
default_level	websocketpp/websocketpp/logger/syslog.hpp	/^    static int const default_level = LOG_INFO;$/;"	m	class:websocketpp::log::syslog
default_on_msg	websocketpp/examples/handler_switch/handler_switch.cpp	/^void default_on_msg(server & s, connection_hdl hdl, server::message_ptr msg) {$/;"	f
default_s2c_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^static uint8_t const default_s2c_max_window_bits = 15;$/;"	m	namespace:websocketpp::extensions::permessage_deflate
defer	tests/limited-io.hpp	/^  defer(const time::nanoseconds& d)$/;"	f	class:nfd::tests::LimitedIo
deferredClose	daemon/face/stream-face.hpp	/^StreamFace<T, U>::deferredClose(const shared_ptr<Face>& face)$/;"	f	class:nfd::StreamFace
deferredClose	daemon/face/stream-transport.hpp	/^StreamTransport<T>::deferredClose()$/;"	f	class:nfd::face::StreamTransport
define_key	build/c4che/_cache.py	/^define_key = []$/;"	v
delay	websocketpp/test/transport/integration.cpp	/^void delay(websocketpp::connection_hdl, long duration) {$/;"	f
deleteInRecord	daemon/table/pit-entry.cpp	/^Entry::deleteInRecord(const Face& face)$/;"	f	class:nfd::pit::Entry
deleteInRecords	daemon/table/pit-entry.cpp	/^Entry::deleteInRecords()$/;"	f	class:nfd::pit::Entry
deleteOutRecord	daemon/table/pit-entry.cpp	/^Entry::deleteOutRecord(const Face& face)$/;"	f	class:nfd::pit::Entry
destroyFace	daemon/mgmt/face-manager.cpp	/^FaceManager::destroyFace(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FaceManager
destroyFace	tests/rib/fib-updates-common.hpp	/^  destroyFace(uint64_t faceId)$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
detachQueue	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::detachQueue(iterator i)$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
devel	websocketpp/websocketpp/logger/levels.hpp	/^    static level const devel = 0x1;$/;"	m	struct:websocketpp::log::elevel
devel	websocketpp/websocketpp/logger/levels.hpp	/^    static level const devel = 0x400;$/;"	m	struct:websocketpp::log::alevel
disable	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::disable()$/;"	f	class:nfd::rib::AutoPrefixPropagator
disableLocalControl	daemon/mgmt/face-manager.cpp	/^FaceManager::disableLocalControl(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FaceManager
disabled	websocketpp/websocketpp/extensions/extension.hpp	/^    disabled$/;"	e	enum:websocketpp::extensions::error::value
disabled	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^class disabled {$/;"	c	namespace:websocketpp::extensions::permessage_deflate
disabled_type	websocketpp/test/extension/permessage_deflate.cpp	/^typedef websocketpp::extensions::permessage_deflate::disabled<config> disabled_type;$/;"	t	file:
disconnect	websocketpp/examples/telemetry_server/index.html	/^function disconnect() {$/;"	f
disconnect	websocketpp/websocketpp/logger/levels.hpp	/^    static level const disconnect = 0x2;$/;"	m	struct:websocketpp::log::alevel
disconnectFromHub	tests/rib/auto-prefix-propagator.t.cpp	/^  disconnectFromHub()$/;"	f	class:nfd::rib::tests::AutoPrefixPropagatorFixture
dispatch	tools/nfdc.cpp	/^Nfdc::dispatch(const std::string& command)$/;"	f	class:nfdc::Nfdc
dispatch	websocketpp/websocketpp/transport/asio/connection.hpp	/^    lib::error_code dispatch(dispatch_handler handler) {$/;"	f	class:websocketpp::transport::asio::connection
dispatch	websocketpp/websocketpp/transport/debug/connection.hpp	/^    lib::error_code dispatch(dispatch_handler handler) {$/;"	f	class:websocketpp::transport::debug::connection
dispatch	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    lib::error_code dispatch(dispatch_handler handler) {$/;"	f	class:websocketpp::transport::iostream::connection
dispatch	websocketpp/websocketpp/transport/stub/connection.hpp	/^    lib::error_code dispatch(dispatch_handler handler) {$/;"	f	class:websocketpp::transport::stub::connection
dispatchData	daemon/face/lp-face-wrapper.cpp	/^LpFaceWrapper::dispatchData(const Data& data)$/;"	f	class:nfd::face::LpFaceWrapper
dispatchInterest	daemon/face/lp-face-wrapper.cpp	/^LpFaceWrapper::dispatchInterest(const Interest& interest)$/;"	f	class:nfd::face::LpFaceWrapper
dispatchNack	daemon/face/lp-face-wrapper.cpp	/^LpFaceWrapper::dispatchNack(const ndn::lp::Nack& nack)$/;"	f	class:nfd::face::LpFaceWrapper
dispatchToStrategy	daemon/fw/forwarder.hpp	/^Forwarder::dispatchToStrategy(shared_ptr<pit::Entry> pitEntry, function<void(fw::Strategy*)> trigger)$/;"	f	class:nfd::Forwarder
dispatchToStrategy_count	tests/daemon/fw/forwarder.t.cpp	/^  int dispatchToStrategy_count;$/;"	m	class:nfd::tests::ScopeLocalhostIncomingTestForwarder	file:
dispatch_handler	websocketpp/websocketpp/transport/base/connection.hpp	/^typedef lib::function<void()> dispatch_handler;$/;"	t	namespace:websocketpp::transport
dispatcher	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  ndn::mgmt::Dispatcher dispatcher;$/;"	m	class:nfd::tests::FaceManagerNode	file:
dnl	tests/daemon/table/dead-nonce-list.t.cpp	/^  DeadNonceList dnl;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
doAfterInsert	daemon/table/cs-policy-lru.cpp	/^LruPolicy::doAfterInsert(iterator i)$/;"	f	class:nfd::cs::lru::LruPolicy
doAfterInsert	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::doAfterInsert(iterator i)$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
doAfterRefresh	daemon/table/cs-policy-lru.cpp	/^LruPolicy::doAfterRefresh(iterator i)$/;"	f	class:nfd::cs::lru::LruPolicy
doAfterRefresh	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::doAfterRefresh(iterator i)$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
doBeforeErase	daemon/table/cs-policy-lru.cpp	/^LruPolicy::doBeforeErase(iterator i)$/;"	f	class:nfd::cs::lru::LruPolicy
doBeforeErase	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::doBeforeErase(iterator i)$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
doBeforeUse	daemon/table/cs-policy-lru.cpp	/^LruPolicy::doBeforeUse(iterator i)$/;"	f	class:nfd::cs::lru::LruPolicy
doBeforeUse	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::doBeforeUse(iterator i)$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
doClose	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::doClose()$/;"	f	class:nfd::face::DatagramTransport
doClose	daemon/face/internal-transport.cpp	/^InternalForwarderTransport::doClose()$/;"	f	class:nfd::face::InternalForwarderTransport
doClose	daemon/face/multicast-udp-transport.cpp	/^MulticastUdpTransport::doClose()$/;"	f	class:nfd::face::MulticastUdpTransport
doClose	daemon/face/stream-transport.hpp	/^StreamTransport<T>::doClose()$/;"	f	class:nfd::face::StreamTransport
doPropagate	daemon/fw/ncc-strategy.cpp	/^NccStrategy::doPropagate(weak_ptr<pit::Entry> pitEntryWeak, weak_ptr<fib::Entry> fibEntryWeak)$/;"	f	class:nfd::fw::NccStrategy
doReceivePacket	daemon/face/generic-link-service.cpp	/^GenericLinkService::doReceivePacket(Transport::Packet&& packet)$/;"	f	class:nfd::face::GenericLinkService
doSend	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::doSend(Transport::Packet&& packet)$/;"	f	class:nfd::face::DatagramTransport
doSend	daemon/face/internal-transport.cpp	/^InternalForwarderTransport::doSend(Packet&& packet)$/;"	f	class:nfd::face::InternalForwarderTransport
doSend	daemon/face/multicast-udp-transport.cpp	/^MulticastUdpTransport::doSend(Transport::Packet&& packet)$/;"	f	class:nfd::face::MulticastUdpTransport
doSend	daemon/face/stream-transport.hpp	/^StreamTransport<T>::doSend(Transport::Packet&& packet)$/;"	f	class:nfd::face::StreamTransport
doSendData	daemon/face/generic-link-service.cpp	/^GenericLinkService::doSendData(const Data& data)$/;"	f	class:nfd::face::GenericLinkService
doSendInterest	daemon/face/generic-link-service.cpp	/^GenericLinkService::doSendInterest(const Interest& interest)$/;"	f	class:nfd::face::GenericLinkService
doSendNack	daemon/face/generic-link-service.cpp	/^GenericLinkService::doSendNack(const lp::Nack& nack)$/;"	f	class:nfd::face::GenericLinkService
do_GET	tools/nfd-status-http-server.py	/^    def do_GET(self):$/;"	m	class:StatusHandler
doesContain	core/network.hpp	/^  doesContain(const boost::asio::ip::address& address) const$/;"	f	class:nfd::Network
doesCurrentPropagatedPrefixWork	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::doesCurrentPropagatedPrefixWork(const Name& prefix)$/;"	f	class:nfd::rib::AutoPrefixPropagator
doesMatchFilter	daemon/mgmt/face-manager.cpp	/^FaceManager::doesMatchFilter(const ndn::nfd::FaceQueryFilter& filter, shared_ptr<Face> face)$/;"	f	class:nfd::FaceManager
doubleMultiplier	daemon/fw/rtt-estimator.cpp	/^RttEstimator::doubleMultiplier()$/;"	f	class:nfd::RttEstimator
double_read	websocketpp/websocketpp/transport/base/connection.hpp	/^    double_read,$/;"	e	enum:websocketpp::transport::error::value
double_read	websocketpp/websocketpp/transport/debug/base.hpp	/^    double_read$/;"	e	enum:websocketpp::transport::debug::error::value
double_read	websocketpp/websocketpp/transport/iostream/base.hpp	/^    double_read,$/;"	e	enum:websocketpp::transport::iostream::error::value
doxylink	docs/conf.py	/^doxylink = {$/;"	v
drop	core/privilege-helper.cpp	/^PrivilegeHelper::drop()$/;"	f	class:nfd::PrivilegeHelper
drop_on_protocol_error	websocketpp/websocketpp/config/core.hpp	/^    static const bool drop_on_protocol_error = false;$/;"	m	struct:websocketpp::config::core
drop_on_protocol_error	websocketpp/websocketpp/config/core_client.hpp	/^    static const bool drop_on_protocol_error = false;$/;"	m	struct:websocketpp::config::core_client
drop_on_protocol_error	websocketpp/websocketpp/config/debug.hpp	/^    static const bool drop_on_protocol_error = false;$/;"	m	struct:websocketpp::config::debug_core
drop_on_protocol_error	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const bool drop_on_protocol_error = false;$/;"	m	struct:websocketpp::config::minimal_server
dump	daemon/table/cs.cpp	/^Cs::dump()$/;"	f	class:nfd::cs::Cs
dump	daemon/table/name-tree.cpp	/^NameTree::dump(std::ostream& output) const$/;"	f	class:nfd::NameTree
dur_type	websocketpp/examples/debug_client/debug_client.cpp	/^    typedef std::chrono::duration<int,std::micro> dur_type;$/;"	t	class:perftest	file:
dynamic_test	websocketpp/websocketpp/logger/basic.hpp	/^    bool dynamic_test(level channel) {$/;"	f	class:websocketpp::log::basic
dynamic_test	websocketpp/websocketpp/logger/stub.hpp	/^    bool dynamic_test(level) {$/;"	f	class:websocketpp::log::stub
ec	websocketpp/test/connection/connection.cpp	/^    websocketpp::lib::error_code ec;$/;"	m	struct:connection_setup	file:
ec	websocketpp/test/extension/permessage_deflate.cpp	/^    websocketpp::lib::error_code ec;$/;"	m	struct:ext_vars	file:
ec	websocketpp/test/processors/hybi00.cpp	/^    websocketpp::lib::error_code ec;$/;"	m	struct:processor_setup	file:
ec	websocketpp/test/processors/hybi13.cpp	/^    websocketpp::lib::error_code ec;$/;"	m	struct:processor_setup	file:
ec	websocketpp/test/processors/hybi13.cpp	/^    websocketpp::lib::error_code ec;$/;"	m	struct:processor_setup_ext	file:
ec	websocketpp/test/transport/iostream/connection.cpp	/^    websocketpp::lib::error_code ec;$/;"	m	struct:stub_con	file:
echo_func	websocketpp/test/connection/connection_tu2.cpp	/^void echo_func(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
echo_func	websocketpp/test/roles/server.cpp	/^void echo_func(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
echo_handler	websocketpp/examples/echo_server/echo_handler.hpp	/^class echo_handler : public server::handler {$/;"	c
elevel	websocketpp/websocketpp/logger/levels.hpp	/^struct elevel {$/;"	s	namespace:websocketpp::log
elog	websocketpp/test/connection/connection.cpp	/^    stub_config::elog_type elog;$/;"	m	struct:connection_setup	file:
elog	websocketpp/test/transport/asio/timers.cpp	/^    config::elog_type elog;$/;"	m	struct:mock_endpoint	file:
elog_level	websocketpp/examples/testee_server/testee_server.cpp	/^    static const websocketpp::log::level elog_level =$/;"	m	struct:testee_config	file:
elog_level	websocketpp/test/connection/connection.cpp	/^    static const websocketpp::log::level elog_level = websocketpp::log::elevel::none;$/;"	m	struct:debug_config_client	file:
elog_level	websocketpp/test/roles/client.cpp	/^    static const websocketpp::log::level elog_level = websocketpp::log::elevel::none;$/;"	m	struct:stub_config	file:
elog_level	websocketpp/websocketpp/config/core.hpp	/^    static const websocketpp::log::level elog_level =$/;"	m	struct:websocketpp::config::core
elog_level	websocketpp/websocketpp/config/core_client.hpp	/^    static const websocketpp::log::level elog_level =$/;"	m	struct:websocketpp::config::core_client
elog_level	websocketpp/websocketpp/config/debug.hpp	/^    static const websocketpp::log::level elog_level =$/;"	m	struct:websocketpp::config::debug_core
elog_level	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const websocketpp::log::level elog_level =$/;"	m	struct:websocketpp::config::minimal_server
elog_type	websocketpp/examples/debug_server/debug_server.cpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:debug_custom::transport_config	file:
elog_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:debug_custom	file:
elog_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::elog_type elog_type;$/;"	t	struct:custom_config	file:
elog_type	websocketpp/examples/testee_server/testee_server.cpp	/^        typedef core::elog_type elog_type;$/;"	t	struct:testee_config::transport_config	file:
elog_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::elog_type elog_type;$/;"	t	struct:testee_config	file:
elog_type	websocketpp/test/connection/connection.cpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:debug_config_client::transport_config	file:
elog_type	websocketpp/test/connection/connection.cpp	/^    typedef core::elog_type elog_type;$/;"	t	struct:debug_config_client	file:
elog_type	websocketpp/test/connection/connection.cpp	/^    typedef core::elog_type elog_type;$/;"	t	struct:stub_config	file:
elog_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::elog_type elog_type;$/;"	t	struct:stub_config	file:
elog_type	websocketpp/test/roles/client.cpp	/^    typedef core::elog_type elog_type;$/;"	t	struct:stub_config	file:
elog_type	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::log::stub elog_type;$/;"	t	struct:config	file:
elog_type	websocketpp/test/transport/integration.cpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:config::transport_config	file:
elog_type	websocketpp/test/transport/integration.cpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:config_tls::transport_config	file:
elog_type	websocketpp/test/transport/integration.cpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:config	file:
elog_type	websocketpp/test/transport/integration.cpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:config_tls	file:
elog_type	websocketpp/test/transport/iostream/connection.cpp	/^        websocketpp::log::elevel> elog_type;$/;"	t	struct:config	file:
elog_type	websocketpp/websocketpp/config/asio.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio_tls::transport_config
elog_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio_tls
elog_type	websocketpp/websocketpp/config/asio_client.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio_tls_client::transport_config
elog_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio_tls_client
elog_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio::transport_config
elog_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio
elog_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio_client::transport_config
elog_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:websocketpp::config::asio_client
elog_type	websocketpp/websocketpp/config/core.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::core::transport_config
elog_type	websocketpp/websocketpp/config/core.hpp	/^        websocketpp::log::elevel> elog_type;$/;"	t	struct:websocketpp::config::core
elog_type	websocketpp/websocketpp/config/core_client.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::core_client::transport_config
elog_type	websocketpp/websocketpp/config/core_client.hpp	/^        websocketpp::log::elevel> elog_type;$/;"	t	struct:websocketpp::config::core_client
elog_type	websocketpp/websocketpp/config/debug.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::debug_core::transport_config
elog_type	websocketpp/websocketpp/config/debug.hpp	/^        websocketpp::log::elevel> elog_type;$/;"	t	struct:websocketpp::config::debug_core
elog_type	websocketpp/websocketpp/config/debug_asio.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::debug_asio_tls::transport_config
elog_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
elog_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::debug_asio::transport_config
elog_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::elog_type elog_type;$/;"	t	struct:websocketpp::config::debug_asio
elog_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        typedef type::elog_type elog_type;$/;"	t	struct:websocketpp::config::minimal_server::transport_config
elog_type	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef websocketpp::log::stub elog_type;$/;"	t	struct:websocketpp::config::minimal_server
elog_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::connection
elog_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::endpoint
elog_type	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::asio::connection
elog_type	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::asio::endpoint
elog_type	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::debug::connection
elog_type	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::debug::endpoint
elog_type	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::iostream::connection
elog_type	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::iostream::endpoint
elog_type	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::stub::connection
elog_type	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    typedef typename config::elog_type elog_type;$/;"	t	class:websocketpp::transport::stub::endpoint
elogger	websocketpp/test/transport/iostream/connection.cpp	/^config::elog_type elogger;$/;"	v
empty	rib/rib.hpp	/^Rib::empty() const$/;"	f	class:nfd::rib::Rib
empty	tools/ndn-autoconfig-server.cpp	/^  empty() const$/;"	f	class:ndn::PrefixCollection
empty_header	websocketpp/websocketpp/http/constants.hpp	/^    static std::string const empty_header = "";$/;"	m	class:websocketpp::http::std
enable	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::enable()$/;"	f	class:nfd::rib::AutoPrefixPropagator
enableChannelStatusRetrieval	tools/nfd-status.cpp	/^  enableChannelStatusRetrieval()$/;"	f	class:ndn::NfdStatus
enableFaceStatusRetrieval	tools/nfd-status.cpp	/^  enableFaceStatusRetrieval()$/;"	f	class:ndn::NfdStatus
enableFibEnumerationRetrieval	tools/nfd-status.cpp	/^  enableFibEnumerationRetrieval()$/;"	f	class:ndn::NfdStatus
enableLocalControl	daemon/mgmt/face-manager.cpp	/^FaceManager::enableLocalControl(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FaceManager
enableLocalControlHeader	rib/rib-manager.cpp	/^RibManager::enableLocalControlHeader()$/;"	f	class:nfd::rib::RibManager
enableRibStatusRetrieval	tools/nfd-status.cpp	/^  enableRibStatusRetrieval()$/;"	f	class:ndn::NfdStatus
enableStrategyChoiceRetrieval	tools/nfd-status.cpp	/^  enableStrategyChoiceRetrieval()$/;"	f	class:ndn::NfdStatus
enableVersionRetrieval	tools/nfd-status.cpp	/^  enableVersionRetrieval()$/;"	f	class:ndn::NfdStatus
enableXmlOutput	tools/nfd-status.cpp	/^  enableXmlOutput()$/;"	f	class:ndn::NfdStatus
enable_c2s_no_context_takeover	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    void enable_c2s_no_context_takeover() {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
enable_extensions	websocketpp/test/processors/hybi07.cpp	/^    static const bool enable_extensions = false;$/;"	m	struct:stub_config	file:
enable_extensions	websocketpp/test/processors/hybi08.cpp	/^    static const bool enable_extensions = false;$/;"	m	struct:stub_config	file:
enable_extensions	websocketpp/test/processors/hybi13.cpp	/^    static const bool enable_extensions = false;$/;"	m	struct:stub_config	file:
enable_extensions	websocketpp/test/processors/hybi13.cpp	/^    static const bool enable_extensions = true;$/;"	m	struct:stub_config_ext	file:
enable_extensions	websocketpp/websocketpp/config/core.hpp	/^    static const bool enable_extensions = true;$/;"	m	struct:websocketpp::config::core
enable_extensions	websocketpp/websocketpp/config/core_client.hpp	/^    static const bool enable_extensions = true;$/;"	m	struct:websocketpp::config::core_client
enable_extensions	websocketpp/websocketpp/config/debug.hpp	/^    static const bool enable_extensions = true;$/;"	m	struct:websocketpp::config::debug_core
enable_extensions	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const bool enable_extensions = true;$/;"	m	struct:websocketpp::config::minimal_server
enable_multithreading	websocketpp/examples/testee_server/testee_server.cpp	/^        static bool const enable_multithreading = true;$/;"	m	struct:testee_config::transport_config	file:
enable_multithreading	websocketpp/examples/testee_server/testee_server.cpp	/^    static bool const enable_multithreading = true;$/;"	m	struct:testee_config	file:
enable_multithreading	websocketpp/test/connection/connection.cpp	/^        static bool const enable_multithreading = true;$/;"	m	struct:debug_config_client::transport_config	file:
enable_multithreading	websocketpp/test/transport/asio/timers.cpp	/^    static const bool enable_multithreading = true;$/;"	m	struct:config	file:
enable_multithreading	websocketpp/websocketpp/config/core.hpp	/^        static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::core::transport_config
enable_multithreading	websocketpp/websocketpp/config/core.hpp	/^    static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::core
enable_multithreading	websocketpp/websocketpp/config/core_client.hpp	/^        static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::core_client::transport_config
enable_multithreading	websocketpp/websocketpp/config/core_client.hpp	/^    static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::core_client
enable_multithreading	websocketpp/websocketpp/config/debug.hpp	/^        static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::debug_core::transport_config
enable_multithreading	websocketpp/websocketpp/config/debug.hpp	/^    static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::debug_core
enable_multithreading	websocketpp/websocketpp/config/minimal_server.hpp	/^        static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::minimal_server::transport_config
enable_multithreading	websocketpp/websocketpp/config/minimal_server.hpp	/^    static bool const enable_multithreading = true;$/;"	m	struct:websocketpp::config::minimal_server
enable_s2c_no_context_takeover	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    void enable_s2c_no_context_takeover() {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
enabled	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    enabled()$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
enabled	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^class enabled {$/;"	c	namespace:websocketpp::extensions::permessage_deflate
enabled_type	websocketpp/test/extension/permessage_deflate.cpp	/^typedef websocketpp::extensions::permessage_deflate::enabled<config> enabled_type;$/;"	t	file:
encodeFragment	daemon/face/ndnlp-slicer.cpp	/^Slicer::encodeFragment(ndn::EncodingImpl<T>& blk,$/;"	f	class:nfd::ndnlp::Slicer
encodeLocalFields	daemon/face/generic-link-service.cpp	/^GenericLinkService::encodeLocalFields(const Data& data, lp::Packet& lpPacket)$/;"	f	class:nfd::face::GenericLinkService
encodeLocalFields	daemon/face/generic-link-service.cpp	/^GenericLinkService::encodeLocalFields(const Interest& interest, lp::Packet& lpPacket)$/;"	f	class:nfd::face::GenericLinkService
end	daemon/fw/face-table.cpp	/^FaceTable::end() const$/;"	f	class:nfd::FaceTable
end	daemon/table/cs.hpp	/^  end() const$/;"	f	class:nfd::cs::Cs
end	daemon/table/fib.hpp	/^Fib::end() const$/;"	f	class:nfd::Fib
end	daemon/table/name-tree.hpp	/^NameTree::end() const$/;"	f	class:nfd::NameTree
end	daemon/table/pit.hpp	/^Pit::end() const$/;"	f	class:nfd::Pit
end	daemon/table/strategy-choice.hpp	/^StrategyChoice::end() const$/;"	f	class:nfd::StrategyChoice
end	rib/rib-entry.hpp	/^RibEntry::end() const$/;"	f	class:nfd::rib::RibEntry
end	rib/rib-entry.hpp	/^RibEntry::end()$/;"	f	class:nfd::rib::RibEntry
end	rib/rib-update-batch.cpp	/^RibUpdateBatch::end() const$/;"	f	class:nfd::rib::RibUpdateBatch
end	rib/rib.hpp	/^Rib::end() const$/;"	f	class:nfd::rib::Rib
end	tests/daemon/table/name-tree.t.cpp	/^  end()$/;"	f	class:nfd::tests::EnumerationVerifier
endpoint	websocketpp/websocketpp/endpoint.hpp	/^    explicit endpoint(bool p_is_server)$/;"	f	class:websocketpp::endpoint
endpoint	websocketpp/websocketpp/endpoint.hpp	/^class endpoint : public config::transport_type, public config::endpoint_base {$/;"	c	namespace:websocketpp
endpoint	websocketpp/websocketpp/logger/levels.hpp	/^    static level const endpoint = 0x80;$/;"	m	struct:websocketpp::log::alevel
endpoint	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    endpoint (endpoint&& src)$/;"	f	class:websocketpp::transport::asio::endpoint
endpoint	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    explicit endpoint()$/;"	f	class:websocketpp::transport::asio::endpoint
endpoint	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^class endpoint : public config::socket_type {$/;"	c	namespace:websocketpp::transport::asio
endpoint	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    explicit endpoint() {}$/;"	f	class:websocketpp::transport::asio::basic_socket::endpoint
endpoint	websocketpp/websocketpp/transport/asio/security/none.hpp	/^class endpoint {$/;"	c	namespace:websocketpp::transport::asio::basic_socket
endpoint	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    explicit endpoint() {}$/;"	f	class:websocketpp::transport::asio::tls_socket::endpoint
endpoint	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^class endpoint {$/;"	c	namespace:websocketpp::transport::asio::tls_socket
endpoint	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    explicit endpoint()$/;"	f	class:websocketpp::transport::debug::endpoint
endpoint	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^class endpoint {$/;"	c	namespace:websocketpp::transport::debug
endpoint	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    explicit endpoint() : m_output_stream(NULL), m_is_secure(false)$/;"	f	class:websocketpp::transport::iostream::endpoint
endpoint	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^class endpoint {$/;"	c	namespace:websocketpp::transport::iostream
endpoint	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    explicit endpoint()$/;"	f	class:websocketpp::transport::stub::endpoint
endpoint	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^class endpoint {$/;"	c	namespace:websocketpp::transport::stub
endpoint_base	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::endpoint_base endpoint_base;$/;"	t	struct:custom_config	file:
endpoint_base	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::endpoint_base endpoint_base;$/;"	t	struct:testee_config	file:
endpoint_base	websocketpp/test/connection/connection.cpp	/^    typedef core::endpoint_base endpoint_base;$/;"	t	struct:debug_config_client	file:
endpoint_base	websocketpp/test/connection/connection.cpp	/^    typedef core::endpoint_base endpoint_base;$/;"	t	struct:stub_config	file:
endpoint_base	websocketpp/test/endpoint/endpoint.cpp	/^    typedef endpoint_extension endpoint_base;$/;"	t	struct:stub_config	file:
endpoint_base	websocketpp/test/roles/client.cpp	/^    typedef core::endpoint_base endpoint_base;$/;"	t	struct:stub_config	file:
endpoint_base	websocketpp/websocketpp/config/core.hpp	/^    typedef websocketpp::endpoint_base endpoint_base;$/;"	t	struct:websocketpp::config::core
endpoint_base	websocketpp/websocketpp/config/core_client.hpp	/^    typedef websocketpp::endpoint_base endpoint_base;$/;"	t	struct:websocketpp::config::core_client
endpoint_base	websocketpp/websocketpp/config/debug.hpp	/^    typedef websocketpp::endpoint_base endpoint_base;$/;"	t	struct:websocketpp::config::debug_core
endpoint_base	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef websocketpp::endpoint_base endpoint_base;$/;"	t	struct:websocketpp::config::minimal_server
endpoint_base	websocketpp/websocketpp/endpoint_base.hpp	/^class endpoint_base {};$/;"	c	namespace:websocketpp
endpoint_extension	websocketpp/test/endpoint/endpoint.cpp	/^    endpoint_extension() : extension_value(5) {}$/;"	f	struct:endpoint_extension
endpoint_extension	websocketpp/test/endpoint/endpoint.cpp	/^struct endpoint_extension {$/;"	s	file:
endpoint_msg_manager	websocketpp/websocketpp/message_buffer/alloc.hpp	/^class endpoint_msg_manager {$/;"	c	namespace:websocketpp::message_buffer::alloc
endpoint_msg_manager	websocketpp/websocketpp/message_buffer/pool.hpp	/^class endpoint_msg_manager {$/;"	c	namespace:websocketpp::message_buffer::alloc
endpoint_msg_manager	websocketpp/websocketpp/message_buffer/pool.hpp	/^class endpoint_msg_manager {$/;"	c	namespace:websocketpp::message_buffer::pool
endpoint_msg_manager_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:debug_custom	file:
endpoint_msg_manager_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:custom_config	file:
endpoint_msg_manager_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:testee_config	file:
endpoint_msg_manager_type	websocketpp/test/connection/connection.cpp	/^    typedef core::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:debug_config_client	file:
endpoint_msg_manager_type	websocketpp/test/connection/connection.cpp	/^    typedef core::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:stub_config	file:
endpoint_msg_manager_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:stub_config	file:
endpoint_msg_manager_type	websocketpp/test/roles/client.cpp	/^    typedef core::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:stub_config	file:
endpoint_msg_manager_type	websocketpp/test/transport/integration.cpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:config	file:
endpoint_msg_manager_type	websocketpp/test/transport/integration.cpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:config_tls	file:
endpoint_msg_manager_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::asio_tls
endpoint_msg_manager_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::asio_tls_client
endpoint_msg_manager_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::asio
endpoint_msg_manager_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::asio_client
endpoint_msg_manager_type	websocketpp/websocketpp/config/core.hpp	/^        endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::core
endpoint_msg_manager_type	websocketpp/websocketpp/config/core_client.hpp	/^        endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::core_client
endpoint_msg_manager_type	websocketpp/websocketpp/config/debug.hpp	/^        endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::debug_core
endpoint_msg_manager_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
endpoint_msg_manager_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::endpoint_msg_manager_type endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::debug_asio
endpoint_msg_manager_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        endpoint_msg_manager_type;$/;"	t	struct:websocketpp::config::minimal_server
endpoint_not_secure	websocketpp/websocketpp/error.hpp	/^    endpoint_not_secure,$/;"	e	enum:websocketpp::error::value
endpoint_type	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef endpoint<connection_type,config> endpoint_type;$/;"	t	class:websocketpp::client
endpoint_type	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef endpoint<connection_type,config> endpoint_type;$/;"	t	class:websocketpp::server
endpoint_unavailable	websocketpp/websocketpp/error.hpp	/^    endpoint_unavailable,$/;"	e	enum:websocketpp::error::value
ensureTablesAreConfigured	daemon/mgmt/tables-config-section.cpp	/^TablesConfigSection::ensureTablesAreConfigured()$/;"	f	class:nfd::TablesConfigSection
eof	websocketpp/websocketpp/transport/base/connection.hpp	/^    eof,$/;"	e	enum:websocketpp::transport::error::value
eof	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void eof() {$/;"	f	class:websocketpp::transport::iostream::connection
erase	daemon/table/cs.hpp	/^  erase(const Name& exactName)$/;"	f	class:nfd::cs::Cs
erase	daemon/table/fib.cpp	/^Fib::erase(const Name& prefix)$/;"	f	class:nfd::Fib
erase	daemon/table/fib.cpp	/^Fib::erase(const fib::Entry& entry)$/;"	f	class:nfd::Fib
erase	daemon/table/fib.cpp	/^Fib::erase(shared_ptr<name_tree::Entry> nameTreeEntry)$/;"	f	class:nfd::Fib
erase	daemon/table/pit.cpp	/^Pit::erase(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::Pit
erase	daemon/table/strategy-choice.cpp	/^StrategyChoice::erase(const Name& prefix)$/;"	f	class:nfd::StrategyChoice
erase	rib/rib.cpp	/^Rib::erase(const Name& prefix, const Route& route)$/;"	f	class:nfd::rib::Rib
eraseEntry	rib/rib.cpp	/^Rib::eraseEntry(RibTable::iterator it)$/;"	f	class:nfd::rib::Rib
eraseEntryFromRib	tests/rib/auto-prefix-propagator.t.cpp	/^  eraseEntryFromRib(const Name& name)$/;"	f	class:nfd::rib::tests::AutoPrefixPropagatorFixture
eraseEntryIfEmpty	daemon/table/name-tree.cpp	/^NameTree::eraseEntryIfEmpty(shared_ptr<name_tree::Entry> entry)$/;"	f	class:nfd::NameTree
erasePitEntry	daemon/table/name-tree-entry.cpp	/^Entry::erasePitEntry(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::name_tree::Entry
eraseRoute	rib/rib-entry.cpp	/^RibEntry::eraseRoute(RouteList::iterator route)$/;"	f	class:nfd::rib::RibEntry
eraseRoute	rib/rib-entry.cpp	/^RibEntry::eraseRoute(const Route& route)$/;"	f	class:nfd::rib::RibEntry
eraseRoute	tests/rib/fib-updates-common.hpp	/^  eraseRoute(const Name& name, uint64_t faceId, uint64_t origin)$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
err	waf	/^def err(m):$/;"	f
err_str_pair	websocketpp/websocketpp/error.hpp	/^typedef std::pair<lib::error_code,std::string> err_str_pair;$/;"	t	namespace:websocketpp
err_str_pair	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^    typedef std::pair<lib::error_code,std::string> err_str_pair;$/;"	t	class:websocketpp::extensions::permessage_deflate::disabled
err_str_pair	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef std::pair<lib::error_code,std::string> err_str_pair;$/;"	t	class:websocketpp::processor::hybi13
err_str_pair	websocketpp/websocketpp/processors/processor.hpp	/^    typedef std::pair<lib::error_code,std::string> err_str_pair;$/;"	t	class:websocketpp::processor::processor
error	websocketpp/websocketpp/error.hpp	/^namespace error {$/;"	n	namespace:websocketpp
error	websocketpp/websocketpp/extensions/extension.hpp	/^namespace error {$/;"	n	namespace:websocketpp::extensions
error	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^namespace error {$/;"	n	namespace:websocketpp::extensions::permessage_deflate
error	websocketpp/websocketpp/logger/levels.hpp	/^    static value const error = 2;$/;"	m	struct:websocketpp::log::channel_type_hint
error	websocketpp/websocketpp/processors/base.hpp	/^namespace error {$/;"	n	namespace:websocketpp::processor
error	websocketpp/websocketpp/transport/asio/base.hpp	/^namespace error {$/;"	n	namespace:websocketpp::transport::asio
error	websocketpp/websocketpp/transport/asio/security/base.hpp	/^namespace error {$/;"	n	namespace:websocketpp::transport::asio::socket
error	websocketpp/websocketpp/transport/base/connection.hpp	/^namespace error {$/;"	n	namespace:websocketpp::transport
error	websocketpp/websocketpp/transport/debug/base.hpp	/^namespace error {$/;"	n	namespace:websocketpp::transport::debug
error	websocketpp/websocketpp/transport/iostream/base.hpp	/^namespace error {$/;"	n	namespace:websocketpp::transport::iostream
error	websocketpp/websocketpp/transport/stub/base.hpp	/^namespace error {$/;"	n	namespace:websocketpp::transport::stub
error_cat	websocketpp/websocketpp/processors/base.hpp	/^namespace error_cat {$/;"	n	namespace:websocketpp::processor
escapeSpecialCharacters	tools/nfd-status.cpp	/^  escapeSpecialCharacters(std::string *data)$/;"	f	class:ndn::NfdStatus
esp	websocketpp/test/extension/permessage_deflate.cpp	/^    websocketpp::err_str_pair esp;$/;"	m	struct:ext_vars	file:
estimateOverhead	daemon/face/ndnlp-slicer.cpp	/^Slicer::estimateOverhead()$/;"	f	class:nfd::ndnlp::Slicer
etherAddress	core/network-interface.hpp	/^  ethernet::Address etherAddress;$/;"	m	class:nfd::NetworkInterfaceInfo
event1	tests/core/scheduler.t.cpp	/^  event1()$/;"	f	class:nfd::tests::SchedulerFixture
event2	tests/core/scheduler.t.cpp	/^  event2()$/;"	f	class:nfd::tests::SchedulerFixture
event3	tests/core/scheduler.t.cpp	/^  event3()$/;"	f	class:nfd::tests::SchedulerFixture
evictEntries	daemon/table/cs-policy-lru.cpp	/^LruPolicy::evictEntries()$/;"	f	class:nfd::cs::lru::LruPolicy
evictEntries	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::evictEntries()$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
evictEntries	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::evictEntries()$/;"	f	class:nfd::DeadNonceList
evictOne	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::evictOne()$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
exception	websocketpp/websocketpp/error.hpp	/^    exception(std::string const & msg, lib::error_code ec = make_error_code(error::general))$/;"	f	class:websocketpp::exception
exception	websocketpp/websocketpp/error.hpp	/^    explicit exception(lib::error_code ec)$/;"	f	class:websocketpp::exception
exception	websocketpp/websocketpp/error.hpp	/^class exception : public std::exception {$/;"	c	namespace:websocketpp
exception	websocketpp/websocketpp/http/constants.hpp	/^        exception(const std::string& log_msg,$/;"	f	class:websocketpp::http::exception
exception	websocketpp/websocketpp/http/constants.hpp	/^    class exception : public std::exception {$/;"	c	namespace:websocketpp::http
exclude_patterns	docs/conf.py	/^exclude_patterns = []$/;"	v
expect	tests/daemon/table/name-tree.t.cpp	/^  expect(const Name& name)$/;"	f	class:nfd::tests::EnumerationVerifier
expectation_failed	websocketpp/websocketpp/http/constants.hpp	/^            expectation_failed = 417,$/;"	e	enum:websocketpp::http::status_code::value
expireEvent	daemon/face/ethernet-face.hpp	/^    scheduler::EventId expireEvent;$/;"	m	struct:nfd::EthernetFace::Reassembler
expire_timer	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void expire_timer(lib::error_code const & ec) {$/;"	f	class:websocketpp::transport::debug::connection
expires	rib/route.hpp	/^  time::steady_clock::TimePoint expires;$/;"	m	class:nfd::rib::Route
expiry	daemon/face/ndnlp-partial-message-store.hpp	/^  scheduler::ScopedEventId expiry;$/;"	m	class:nfd::ndnlp::PartialMessage
ext_vars	websocketpp/test/extension/permessage_deflate.cpp	/^struct ext_vars {$/;"	s	file:
extc	websocketpp/test/extension/permessage_deflate.cpp	/^    enabled_type extc;$/;"	m	struct:ext_vars	file:
extendLifetime	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::extendLifetime(measurements::Entry& entry,$/;"	f	class:nfd::MeasurementsAccessor
extendLifetime	daemon/table/measurements.cpp	/^Measurements::extendLifetime(Entry& entry,$/;"	f	class:nfd::Measurements
extended_header	websocketpp/websocketpp/frame.hpp	/^    extended_header() {$/;"	f	struct:websocketpp::frame::extended_header
extended_header	websocketpp/websocketpp/frame.hpp	/^    extended_header(uint64_t payload_size) {$/;"	f	struct:websocketpp::frame::extended_header
extended_header	websocketpp/websocketpp/frame.hpp	/^    extended_header(uint64_t payload_size, uint32_t masking_key) {$/;"	f	struct:websocketpp::frame::extended_header
extended_header	websocketpp/websocketpp/frame.hpp	/^struct extended_header {$/;"	s	namespace:websocketpp::frame
extension_method	websocketpp/test/connection/connection.cpp	/^    int extension_method() {$/;"	f	struct:connection_extension
extension_method	websocketpp/test/endpoint/endpoint.cpp	/^    int extension_method() {$/;"	f	struct:endpoint_extension
extension_parse_error	websocketpp/websocketpp/processors/base.hpp	/^    extension_parse_error,$/;"	e	enum:websocketpp::processor::error::processor_errors
extension_required	websocketpp/websocketpp/close.hpp	/^    static value const extension_required = 1010;$/;"	m	namespace:websocketpp::close::status
extension_value	websocketpp/test/connection/connection.cpp	/^    int extension_value;$/;"	m	struct:connection_extension	file:
extension_value	websocketpp/test/endpoint/endpoint.cpp	/^    int extension_value;$/;"	m	struct:endpoint_extension	file:
extensions	docs/conf.py	/^extensions = [$/;"	v
extensions	websocketpp/websocketpp/extensions/extension.hpp	/^namespace extensions {$/;"	n	namespace:websocketpp
extensions	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^namespace extensions {$/;"	n	namespace:websocketpp
extensions	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^namespace extensions {$/;"	n	namespace:websocketpp
extensions_disabled	websocketpp/websocketpp/processors/base.hpp	/^    extensions_disabled,$/;"	e	enum:websocketpp::processor::error::processor_errors
extractLevel	core/logger-factory.cpp	/^LoggerFactory::extractLevel(const ConfigSection& item, const std::string& key)$/;"	f	class:nfd::LoggerFactory
extractLocalControlParameters	daemon/mgmt/face-manager.cpp	/^FaceManager::extractLocalControlParameters(const Interest& request,$/;"	f	class:nfd::FaceManager
extractParameters	rib/rib-manager.cpp	/^RibManager::extractParameters(const Name::Component& parameterComponent,$/;"	f	class:nfd::rib::RibManager
extractParameters	tests/rib/rib-manager.t.cpp	/^  extractParameters(Interest& interest, Name::Component& verb,$/;"	f	class:nfd::rib::tests::RibManagerFixture
extractRequester	daemon/mgmt/manager-base.cpp	/^ManagerBase::extractRequester(const Interest& interest,$/;"	f	class:nfd::ManagerBase
extract_all_lws	websocketpp/websocketpp/http/parser.hpp	/^InputIterator extract_all_lws(InputIterator begin, InputIterator end) {$/;"	f	namespace:websocketpp::http::parser
extract_attributes	websocketpp/websocketpp/http/parser.hpp	/^InputIterator extract_attributes(InputIterator begin, InputIterator end,$/;"	f	namespace:websocketpp::http::parser
extract_code	websocketpp/websocketpp/close.hpp	/^inline status::value extract_code(std::string const & payload, lib::error_code$/;"	f	namespace:websocketpp::close
extract_lws	websocketpp/websocketpp/http/parser.hpp	/^InputIterator extract_lws(InputIterator begin, InputIterator end) {$/;"	f	namespace:websocketpp::http::parser
extract_parameters	websocketpp/websocketpp/http/parser.hpp	/^InputIterator extract_parameters(InputIterator begin, InputIterator end,$/;"	f	namespace:websocketpp::http::parser
extract_quoted_string	websocketpp/websocketpp/http/parser.hpp	/^std::pair<std::string,InputIterator> extract_quoted_string(InputIterator begin,$/;"	f	namespace:websocketpp::http::parser
extract_reason	websocketpp/websocketpp/close.hpp	/^inline std::string extract_reason(std::string const & payload, lib::error_code$/;"	f	namespace:websocketpp::close
extract_subprotocols	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code extract_subprotocols(request_type const &, $/;"	f	class:websocketpp::processor::hybi00
extract_subprotocols	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code extract_subprotocols(request_type const & req,$/;"	f	class:websocketpp::processor::hybi13
extract_token	websocketpp/websocketpp/http/parser.hpp	/^std::pair<std::string,InputIterator> extract_token(InputIterator begin,$/;"	f	namespace:websocketpp::http::parser
exts	websocketpp/test/extension/permessage_deflate.cpp	/^    enabled_type exts;$/;"	m	struct:ext_vars	file:
face	daemon/face/datagram-transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/face-log.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/generic-link-service.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/generic-link-service.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/internal-face.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/internal-face.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/internal-transport.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/internal-transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/link-service.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/link-service.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/lp-face-wrapper.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/lp-face-wrapper.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/lp-face.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/lp-face.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/multicast-udp-transport.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/multicast-udp-transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/stream-transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/transport.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/unicast-udp-transport.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/unicast-udp-transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/face/unix-stream-transport.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	daemon/face/unix-stream-transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	daemon/mgmt/face-manager.hpp	/^    shared_ptr<LocalFace> face;$/;"	m	struct:nfd::FaceManager::ExtractLocalControlParametersResult
face	daemon/mgmt/face-manager.hpp	/^namespace face {$/;"	n	namespace:nfd
face	tests/daemon/face/dummy-lp-face.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	tests/daemon/face/dummy-lp-face.hpp	/^namespace face {$/;"	n	namespace:nfd
face	tests/daemon/face/dummy-transport.hpp	/^namespace face {$/;"	n	namespace:nfd
face	tests/daemon/face/generic-link-service.t.cpp	/^  unique_ptr<LpFace> face;$/;"	m	class:nfd::face::tests::GenericLinkServiceFixture	file:
face	tests/daemon/face/generic-link-service.t.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	tests/daemon/face/internal-face.t.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	tests/daemon/face/lp-face-wrapper.t.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	tests/daemon/face/multicast-udp-transport.t.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	tests/daemon/face/unicast-udp-transport.t.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	tests/daemon/face/unix-stream-transport.t.cpp	/^namespace face {$/;"	n	namespace:nfd	file:
face	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  shared_ptr<ndn::util::DummyClientFace> face;$/;"	m	class:nfd::tests::FaceManagerNode	file:
face	tests/rib/fib-updates-common.hpp	/^  shared_ptr<ndn::util::DummyClientFace> face;$/;"	m	class:nfd::rib::tests::FibUpdatesFixture
face	tests/rib/rib-manager.t.cpp	/^  shared_ptr<ndn::util::DummyClientFace> face;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
face1	tests/daemon/face/tcp.t.cpp	/^  shared_ptr<Face> face1;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1	tests/daemon/face/tcp.t.cpp	/^  shared_ptr<Face> face1;$/;"	m	class:nfd::tests::FaceCreateTimeoutFixture	file:
face1	tests/daemon/face/unix-stream.t.cpp	/^  shared_ptr<LpFaceWrapper> face1;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1	tests/daemon/face/websocket.t.cpp	/^  shared_ptr<Face> face1;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1	tests/daemon/fw/best-route-strategy2.t.cpp	/^  shared_ptr<DummyFace> face1;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
face1	tests/daemon/fw/forwarder.t.cpp	/^  shared_ptr<DummyFace> face1; \/\/ face of incoming bad packet$/;"	m	class:nfd::tests::MalformedPacketFixture	file:
face1_onFail	tests/daemon/face/tcp.t.cpp	/^  face1_onFail()$/;"	f	class:nfd::tests::EndToEndFixture
face1_onFail	tests/daemon/face/websocket.t.cpp	/^  face1_onFail()$/;"	f	class:nfd::tests::EndToEndFixture
face1_onReceiveData	tests/daemon/face/tcp.t.cpp	/^  face1_onReceiveData(const Data& data)$/;"	f	class:nfd::tests::EndToEndFixture
face1_onReceiveData	tests/daemon/face/unix-stream.t.cpp	/^  face1_onReceiveData(const Data& data)$/;"	f	class:nfd::tests::EndToEndFixture
face1_onReceiveData	tests/daemon/face/websocket.t.cpp	/^  face1_onReceiveData(const Data& data)$/;"	f	class:nfd::tests::EndToEndFixture
face1_onReceiveInterest	tests/daemon/face/tcp.t.cpp	/^  face1_onReceiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::EndToEndFixture
face1_onReceiveInterest	tests/daemon/face/unix-stream.t.cpp	/^  face1_onReceiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::EndToEndFixture
face1_onReceiveInterest	tests/daemon/face/websocket.t.cpp	/^  face1_onReceiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::EndToEndFixture
face1_receivedDatas	tests/daemon/face/tcp.t.cpp	/^  std::vector<Data> face1_receivedDatas;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1_receivedDatas	tests/daemon/face/unix-stream.t.cpp	/^  std::vector<Data> face1_receivedDatas;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1_receivedDatas	tests/daemon/face/websocket.t.cpp	/^  std::vector<Data> face1_receivedDatas;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1_receivedInterests	tests/daemon/face/tcp.t.cpp	/^  std::vector<Interest> face1_receivedInterests;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1_receivedInterests	tests/daemon/face/unix-stream.t.cpp	/^  std::vector<Interest> face1_receivedInterests;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face1_receivedInterests	tests/daemon/face/websocket.t.cpp	/^  std::vector<Interest> face1_receivedInterests;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face2	tests/daemon/face/tcp.t.cpp	/^  shared_ptr<Face> face2;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face2	tests/daemon/face/unix-stream.t.cpp	/^  shared_ptr<LpFaceWrapper> face2;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face2	tests/daemon/fw/best-route-strategy2.t.cpp	/^  shared_ptr<DummyFace> face2;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
face2	tests/daemon/fw/forwarder.t.cpp	/^  shared_ptr<DummyFace> face2; \/\/ another face for setting up states$/;"	m	class:nfd::tests::MalformedPacketFixture	file:
face2_onFail	tests/daemon/face/tcp.t.cpp	/^  face2_onFail()$/;"	f	class:nfd::tests::EndToEndFixture
face2_onReceiveData	tests/daemon/face/tcp.t.cpp	/^  face2_onReceiveData(const Data& data)$/;"	f	class:nfd::tests::EndToEndFixture
face2_onReceiveData	tests/daemon/face/unix-stream.t.cpp	/^  face2_onReceiveData(const Data& data)$/;"	f	class:nfd::tests::EndToEndFixture
face2_onReceiveInterest	tests/daemon/face/tcp.t.cpp	/^  face2_onReceiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::EndToEndFixture
face2_onReceiveInterest	tests/daemon/face/unix-stream.t.cpp	/^  face2_onReceiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::EndToEndFixture
face2_receivedDatas	tests/daemon/face/tcp.t.cpp	/^  std::vector<Data> face2_receivedDatas;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face2_receivedDatas	tests/daemon/face/unix-stream.t.cpp	/^  std::vector<Data> face2_receivedDatas;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face2_receivedInterests	tests/daemon/face/tcp.t.cpp	/^  std::vector<Interest> face2_receivedInterests;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face2_receivedInterests	tests/daemon/face/unix-stream.t.cpp	/^  std::vector<Interest> face2_receivedInterests;$/;"	m	class:nfd::tests::EndToEndFixture	file:
face3	tests/daemon/fw/best-route-strategy2.t.cpp	/^  shared_ptr<DummyFace> face3;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
face4	tests/daemon/fw/best-route-strategy2.t.cpp	/^  shared_ptr<DummyFace> face4;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
face5	tests/daemon/fw/best-route-strategy2.t.cpp	/^  shared_ptr<DummyFace> face5;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
faceCreate	tools/nfdc.cpp	/^Nfdc::faceCreate()$/;"	f	class:nfdc::Nfdc
faceDestroy	tools/nfdc.cpp	/^Nfdc::faceDestroy()$/;"	f	class:nfdc::Nfdc
faceId	rib/fib-update.hpp	/^  uint64_t faceId;$/;"	m	class:nfd::rib::FibUpdate
faceId	rib/route.hpp	/^  uint64_t faceId;$/;"	m	class:nfd::rib::Route
faces	tests/daemon/face/tcp.t.cpp	/^  std::list<shared_ptr<Face>> faces;$/;"	m	class:nfd::tests::EndToEndFixture	file:
faces	tests/daemon/face/unix-stream.t.cpp	/^  std::list<shared_ptr<LpFaceWrapper>> faces;$/;"	m	class:nfd::tests::EndToEndFixture	file:
fail	daemon/face/face.cpp	/^Face::fail(const std::string& reason)$/;"	f	class:nfd::Face
fail	rib/propagated-entry.cpp	/^PropagatedEntry::fail(const scheduler::EventId& event)$/;"	f	class:nfd::rib::PropagatedEntry
fail	tests/daemon/fw/topology-tester.cpp	/^TopologyAppLink::fail()$/;"	f	class:nfd::fw::tests::TopologyAppLink
fail	tests/daemon/fw/topology-tester.hpp	/^  fail()$/;"	f	class:nfd::fw::tests::TopologyLink
fail	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::fail(const std::string& reason)$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
fail	websocketpp/websocketpp/connection.hpp	/^namespace fail {$/;"	n	namespace:websocketpp::session
fail	websocketpp/websocketpp/logger/levels.hpp	/^    static level const fail = 0x2000;$/;"	m	struct:websocketpp::log::alevel
failCount	tests/daemon/face/face.t.cpp	/^  int failCount;$/;"	m	class:nfd::tests::FaceFailTestFace	file:
failHandler	tests/daemon/face/face.t.cpp	/^  failHandler(const std::string& reason)$/;"	f	class:nfd::tests::FaceFailTestFace	file:
failIfError	tests/daemon/face/tcp.t.cpp	/^  failIfError(const std::string& errorActual)$/;"	f	class:nfd::tests::FaceCreateFixture
failIfError	tests/daemon/face/udp.t.cpp	/^  failIfError(const std::string& errorActual)$/;"	f	class:nfd::tests::FaceCreateFixture
failOnce	tests/daemon/face/face.t.cpp	/^  failOnce()$/;"	f	class:nfd::tests::FaceFailTestFace
fail_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(connection_hdl)> fail_handler;$/;"	t	namespace:websocketpp
fail_on_http	websocketpp/test/connection/connection.cpp	/^void fail_on_http(websocketpp::connection_hdl) {$/;"	f
fail_on_open	websocketpp/test/connection/connection.cpp	/^void fail_on_open(websocketpp::connection_hdl) {$/;"	f
fail_on_open	websocketpp/test/transport/integration.cpp	/^void fail_on_open(websocketpp::connection_hdl) {$/;"	f
fail_on_pong	websocketpp/test/transport/integration.cpp	/^void fail_on_pong(websocketpp::connection_hdl, std::string) {$/;"	f
fail_on_pong_timeout	websocketpp/test/transport/integration.cpp	/^void fail_on_pong_timeout(websocketpp::connection_hdl, std::string) {$/;"	f
failed	websocketpp/websocketpp/connection.hpp	/^        failed = 1,$/;"	e	enum:websocketpp::connection::terminate_status
failures	tests/daemon/face/face-history.hpp	/^  std::vector<std::string> failures;$/;"	m	class:nfd::tests::FaceHistory
fake_lock_guard	websocketpp/websocketpp/concurrency/none.hpp	/^    explicit fake_lock_guard(fake_mutex) {}$/;"	f	class:websocketpp::concurrency::none_impl::fake_lock_guard
fake_lock_guard	websocketpp/websocketpp/concurrency/none.hpp	/^class fake_lock_guard {$/;"	c	namespace:websocketpp::concurrency::none_impl
fake_mutex	websocketpp/websocketpp/concurrency/none.hpp	/^    fake_mutex() {}$/;"	f	class:websocketpp::concurrency::none_impl::fake_mutex
fake_mutex	websocketpp/websocketpp/concurrency/none.hpp	/^class fake_mutex {$/;"	c	namespace:websocketpp::concurrency::none_impl
fatal	websocketpp/websocketpp/logger/levels.hpp	/^    static level const fatal = 0x20;$/;"	m	struct:websocketpp::log::elevel
fatal_error	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void fatal_error() {$/;"	f	class:websocketpp::transport::iostream::connection
feature	daemon/mgmt/face-manager.hpp	/^    LocalControlFeature feature;$/;"	m	struct:nfd::FaceManager::ExtractLocalControlParametersResult
fetchActiveFaces	rib/rib-manager.cpp	/^RibManager::fetchActiveFaces()$/;"	f	class:nfd::rib::RibManager
fetchChannelStatusInformation	tools/nfd-status.cpp	/^  fetchChannelStatusInformation()$/;"	f	class:ndn::NfdStatus
fetchFaceStatusInformation	tools/nfd-status.cpp	/^  fetchFaceStatusInformation()$/;"	f	class:ndn::NfdStatus
fetchFaceStatusSegments	tools/nfd-autoreg.cpp	/^  fetchFaceStatusSegments(const Data& data, const shared_ptr<ndn::OBufferStream>& buffer)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
fetchFibEnumerationInformation	tools/nfd-status.cpp	/^  fetchFibEnumerationInformation()$/;"	f	class:ndn::NfdStatus
fetchInformation	tools/nfd-status.cpp	/^  fetchInformation()$/;"	f	class:ndn::NfdStatus
fetchRibStatusInformation	tools/nfd-status.cpp	/^  fetchRibStatusInformation()$/;"	f	class:ndn::NfdStatus
fetchSegments	rib/rib-manager.cpp	/^RibManager::fetchSegments(const Data& data, shared_ptr<ndn::OBufferStream> buffer)$/;"	f	class:nfd::rib::RibManager
fetchStrategyChoiceInformation	tools/nfd-status.cpp	/^  fetchStrategyChoiceInformation()$/;"	f	class:ndn::NfdStatus
fetchVersionInformation	tools/nfd-status.cpp	/^  fetchVersionInformation()$/;"	f	class:ndn::NfdStatus
fib	daemon/table/fib-entry.cpp	/^namespace fib {$/;"	n	namespace:nfd	file:
fib	daemon/table/fib-entry.hpp	/^namespace fib {$/;"	n	namespace:nfd
fib	daemon/table/fib-nexthop.cpp	/^namespace fib {$/;"	n	namespace:nfd	file:
fib	daemon/table/fib-nexthop.hpp	/^namespace fib {$/;"	n	namespace:nfd
fib	daemon/table/measurements.hpp	/^namespace fib {$/;"	n	namespace:nfd
fib	tests/daemon/fw/best-route-strategy2.t.cpp	/^  Fib& fib;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
fibAddNextHop	tools/nfdc.cpp	/^Nfdc::fibAddNextHop()$/;"	f	class:nfdc::Nfdc
fibRemoveNextHop	tools/nfdc.cpp	/^Nfdc::fibRemoveNextHop()$/;"	f	class:nfdc::Nfdc
fibUpdater	tests/rib/fib-updates-common.hpp	/^  rib::FibUpdater fibUpdater;$/;"	m	class:nfd::rib::tests::FibUpdatesFixture
fibUpdates	tests/rib/fib-updates-common.hpp	/^  FibUpdater::FibUpdateList fibUpdates;$/;"	m	class:nfd::rib::tests::FibUpdatesFixture
filter	daemon/table/measurements-accessor.cpp	/^MeasurementsAccessor::filter(const shared_ptr<measurements::Entry>& entry) const$/;"	f	class:nfd::MeasurementsAccessor
filterAndEncodeLocalControlHeader	daemon/face/local-face.hpp	/^LocalFace::filterAndEncodeLocalControlHeader(const Packet& packet)$/;"	f	class:nfd::LocalFace
find	daemon/table/cs.cpp	/^Cs::find(const Interest& interest,$/;"	f	class:nfd::cs::Cs
find	daemon/table/pit.hpp	/^Pit::find(const Interest& interest) const$/;"	f	class:nfd::Pit
find	rib/rib.cpp	/^Rib::find(const Name& prefix) const$/;"	f	class:nfd::rib::Rib
find	rib/rib.cpp	/^Rib::find(const Name& prefix, const Route& route) const$/;"	f	class:nfd::rib::Rib
find	tests/daemon/table/cs.t.cpp	/^  find(const std::function<void(uint32_t)>& check)$/;"	f	class:nfd::cs::tests::FindFixture
find	tests/other/cs-benchmark.cpp	/^  find(const Interest& interest)$/;"	f	class:nfd::tests::CsBenchmarkFixture
findAllDataMatches	daemon/table/pit.cpp	/^Pit::findAllDataMatches(const Data& data) const$/;"	f	class:nfd::Pit
findAllMatches	daemon/table/name-tree.cpp	/^NameTree::findAllMatches(const Name& prefix,$/;"	f	class:nfd::NameTree
findChannel	daemon/face/tcp-factory.cpp	/^TcpFactory::findChannel(const tcp::Endpoint& localEndpoint) const$/;"	f	class:nfd::TcpFactory
findChannel	daemon/face/udp-factory.cpp	/^UdpFactory::findChannel(const udp::Endpoint& localEndpoint) const$/;"	f	class:nfd::UdpFactory
findChannel	daemon/face/unix-stream-factory.cpp	/^UnixStreamFactory::findChannel(const unix_stream::Endpoint& endpoint) const$/;"	f	class:nfd::UnixStreamFactory
findChannel	daemon/face/websocket-factory.cpp	/^WebSocketFactory::findChannel(const websocket::Endpoint& endpoint) const$/;"	f	class:nfd::WebSocketFactory
findDescendants	rib/rib.cpp	/^Rib::findDescendants(const Name& prefix) const$/;"	f	class:nfd::rib::Rib
findDescendantsForNonInsertedName	rib/rib.cpp	/^Rib::findDescendantsForNonInsertedName(const Name& prefix) const$/;"	f	class:nfd::rib::Rib
findEffectiveStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::findEffectiveStrategy(const Name& prefix) const$/;"	f	class:nfd::StrategyChoice
findEffectiveStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::findEffectiveStrategy(const measurements::Entry& measurementsEntry) const$/;"	f	class:nfd::StrategyChoice
findEffectiveStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::findEffectiveStrategy(const pit::Entry& pitEntry) const$/;"	f	class:nfd::StrategyChoice
findEffectiveStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::findEffectiveStrategy(shared_ptr<name_tree::Entry> nte) const$/;"	f	class:nfd::StrategyChoice
findEligibleNextHopWithEarliestOutRecord	daemon/fw/best-route-strategy2.cpp	/^findEligibleNextHopWithEarliestOutRecord(const shared_ptr<pit::Entry>& pitEntry,$/;"	f	namespace:nfd::fw
findExactMatch	daemon/table/fib.cpp	/^Fib::findExactMatch(const Name& prefix) const$/;"	f	class:nfd::Fib
findExactMatch	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::findExactMatch(const Name& name) const$/;"	f	class:nfd::MeasurementsAccessor
findExactMatch	daemon/table/measurements.cpp	/^Measurements::findExactMatch(const Name& name) const$/;"	f	class:nfd::Measurements
findExactMatch	daemon/table/name-tree.cpp	/^NameTree::findExactMatch(const Name& prefix) const$/;"	f	class:nfd::NameTree
findInheritedRoute	rib/rib-entry.cpp	/^RibEntry::findInheritedRoute(const Route& route) const$/;"	f	class:nfd::rib::RibEntry
findLeftmost	daemon/table/cs.cpp	/^Cs::findLeftmost(const Interest& interest, iterator first, iterator last) const$/;"	f	class:nfd::cs::Cs
findLongestPrefixMatch	daemon/table/fib.cpp	/^Fib::findLongestPrefixMatch(const Name& prefix) const$/;"	f	class:nfd::Fib
findLongestPrefixMatch	daemon/table/fib.cpp	/^Fib::findLongestPrefixMatch(const measurements::Entry& measurementsEntry) const$/;"	f	class:nfd::Fib
findLongestPrefixMatch	daemon/table/fib.cpp	/^Fib::findLongestPrefixMatch(const pit::Entry& pitEntry) const$/;"	f	class:nfd::Fib
findLongestPrefixMatch	daemon/table/fib.cpp	/^Fib::findLongestPrefixMatch(shared_ptr<name_tree::Entry> nameTreeEntry) const$/;"	f	class:nfd::Fib
findLongestPrefixMatch	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::findLongestPrefixMatch(const Name& name,$/;"	f	class:nfd::MeasurementsAccessor
findLongestPrefixMatch	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::findLongestPrefixMatch(const pit::Entry& pitEntry,$/;"	f	class:nfd::MeasurementsAccessor
findLongestPrefixMatch	daemon/table/measurements.cpp	/^Measurements::findLongestPrefixMatch(const Name& name,$/;"	f	class:nfd::Measurements
findLongestPrefixMatch	daemon/table/measurements.cpp	/^Measurements::findLongestPrefixMatch(const pit::Entry& pitEntry,$/;"	f	class:nfd::Measurements
findLongestPrefixMatch	daemon/table/name-tree.cpp	/^NameTree::findLongestPrefixMatch(const Name& prefix, const name_tree::EntrySelector& entrySelector) const$/;"	f	class:nfd::NameTree
findLongestPrefixMatch	daemon/table/name-tree.cpp	/^NameTree::findLongestPrefixMatch(shared_ptr<name_tree::Entry> entry,$/;"	f	class:nfd::NameTree
findLongestPrefixMatchImpl	daemon/table/measurements.cpp	/^Measurements::findLongestPrefixMatchImpl(const K& key,$/;"	f	class:nfd::Measurements
findMulticastFace	daemon/face/ethernet-factory.cpp	/^EthernetFactory::findMulticastFace(const std::string& interfaceName,$/;"	f	class:nfd::EthernetFactory
findMulticastFace	daemon/face/udp-factory.cpp	/^UdpFactory::findMulticastFace(const udp::Endpoint& localEndpoint) const$/;"	f	class:nfd::UdpFactory
findNextHop	daemon/table/fib-entry.cpp	/^Entry::findNextHop(Face& face)$/;"	f	class:nfd::fib::Entry
findNonce	daemon/table/pit-entry.cpp	/^Entry::findNonce(uint32_t nonce, const Face& face) const$/;"	f	class:nfd::pit::Entry
findOrInsert	daemon/table/pit.cpp	/^Pit::findOrInsert(const Interest& interest, bool allowInsert)$/;"	f	class:nfd::Pit
findParent	rib/rib.cpp	/^Rib::findParent(const Name& prefix) const$/;"	f	class:nfd::rib::Rib
findPrefixMeasurements	daemon/fw/access-strategy.cpp	/^AccessStrategy::findPrefixMeasurements(const pit::Entry& pitEntry)$/;"	f	class:nfd::fw::AccessStrategy
findRightmost	daemon/table/cs.cpp	/^Cs::findRightmost(const Interest& interest, iterator first, iterator last) const$/;"	f	class:nfd::cs::Cs
findRightmostAmongExact	daemon/table/cs.cpp	/^Cs::findRightmostAmongExact(const Interest& interest, iterator first, iterator last) const$/;"	f	class:nfd::cs::Cs
findRoute	rib/rib-entry.cpp	/^RibEntry::findRoute(const Route& route) const$/;"	f	class:nfd::rib::RibEntry
findRoute	rib/rib-entry.cpp	/^RibEntry::findRoute(const Route& route)$/;"	f	class:nfd::rib::RibEntry
findRoutesWithFaceId	rib/rib.cpp	/^Rib::findRoutesWithFaceId(uint64_t faceId)$/;"	f	class:nfd::rib::Rib
findStrategy	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^  findStrategy(const Name& name)$/;"	f	class:nfd::tests::StrategyChoiceManagerFixture
find_last_if	core/algorithm.hpp	/^find_last_if(It first, It last, Pred p)$/;"	f	namespace:nfd
find_lib	waf	/^def find_lib():$/;"	f
flags	core/network-interface.hpp	/^  unsigned int flags;$/;"	m	class:nfd::NetworkInterfaceInfo
flags	rib/route.hpp	/^  uint64_t flags;$/;"	m	class:nfd::rib::Route
fmix	core/city-hash.cpp	/^static uint32 fmix(uint32 h)$/;"	f	file:
forbidden	websocketpp/websocketpp/http/constants.hpp	/^            forbidden = 403,$/;"	e	enum:websocketpp::http::status_code::value
force_tcp_drop	websocketpp/websocketpp/close.hpp	/^    static value const force_tcp_drop = 2;$/;"	m	namespace:websocketpp::close::status
forwarder	tests/daemon/fw/best-route-strategy2.t.cpp	/^  Forwarder forwarder;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
forwarder	tests/daemon/fw/forwarder.t.cpp	/^  Forwarder forwarder;$/;"	m	class:nfd::tests::MalformedPacketFixture	file:
forwarder	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  Forwarder forwarder;$/;"	m	class:nfd::tests::FaceManagerNode	file:
forwarder	tests/daemon/table/measurements-accessor.t.cpp	/^  Forwarder forwarder;$/;"	m	class:nfd::tests::MeasurementsAccessorFixture	file:
forwarderFace	tests/daemon/face/internal-face.t.cpp	/^  shared_ptr<nfd::Face> forwarderFace;$/;"	m	class:nfd::face::tests::InternalFaceFixture	file:
found	websocketpp/websocketpp/http/constants.hpp	/^            found = 302,$/;"	e	enum:websocketpp::http::status_code::value
fragCount	daemon/face/ndnlp-data.hpp	/^  uint16_t fragCount;$/;"	m	class:nfd::ndnlp::NdnlpData
fragIndex	daemon/face/ndnlp-data.hpp	/^  uint16_t fragIndex;$/;"	m	class:nfd::ndnlp::NdnlpData
fragmented_control	websocketpp/websocketpp/processors/base.hpp	/^    fragmented_control,$/;"	e	enum:websocketpp::processor::error::processor_errors
frame	websocketpp/websocketpp/frame.hpp	/^namespace frame {$/;"	n	namespace:websocketpp
frame_header	websocketpp/websocketpp/logger/levels.hpp	/^    static level const frame_header = 0x8;$/;"	m	struct:websocketpp::log::alevel
frame_payload	websocketpp/websocketpp/logger/levels.hpp	/^    static level const frame_payload = 0x10;$/;"	m	struct:websocketpp::log::alevel
fromBlock	daemon/face/ndnlp-data.cpp	/^NdnlpData::fromBlock(const Block& wire)$/;"	f	class:nfd::ndnlp::NdnlpData
fullEnumerate	daemon/table/name-tree.cpp	/^NameTree::fullEnumerate(const name_tree::EntrySelector& entrySelector) const$/;"	f	class:nfd::NameTree
fullfil_write	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void fullfil_write() {$/;"	f	class:websocketpp::transport::debug::connection
fw	daemon/fw/access-strategy.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/access-strategy.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/best-route-strategy.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/best-route-strategy.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/best-route-strategy2.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/best-route-strategy2.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/broadcast-strategy.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/broadcast-strategy.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/client-control-strategy.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/client-control-strategy.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/forwarder.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/multicast-strategy.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/multicast-strategy.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/ncc-strategy.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/ncc-strategy.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/retx-suppression-exponential.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/retx-suppression-exponential.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/retx-suppression-fixed.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/retx-suppression-fixed.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/retx-suppression.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/retx-suppression.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/strategy-info.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/strategy-registry.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/strategy-registry.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/fw/strategy.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	daemon/fw/strategy.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/table/measurements-accessor.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	daemon/table/strategy-choice-entry.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	tests/daemon/fw/access-strategy.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/best-route-strategy2.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/broadcast-strategy.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/client-control-strategy.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/multicast-strategy.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/ncc-strategy.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/retx-suppression.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/strategy-tester.hpp	/^namespace fw {$/;"	n	namespace:nfd
fw	tests/daemon/fw/strategy.t.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/topology-tester.cpp	/^namespace fw {$/;"	n	namespace:nfd	file:
fw	tests/daemon/fw/topology-tester.hpp	/^namespace fw {$/;"	n	namespace:nfd
g_DummyStrategyInfo_count	tests/daemon/table/strategy-info-host.t.cpp	/^static int g_DummyStrategyInfo_count = 0;$/;"	m	namespace:nfd::tests	file:
g_io	tests/test-common.hpp	/^  boost::asio::io_service& g_io;$/;"	m	class:nfd::tests::BaseFixture
g_ioService	core/global-io.cpp	/^static boost::thread_specific_ptr<boost::asio::io_service> g_ioService;$/;"	m	namespace:nfd	file:
g_logMutex	core/logger.cpp	/^std::mutex g_logMutex;$/;"	m	namespace:nfd	file:
g_rng	core/random.cpp	/^static boost::thread_specific_ptr<boost::random::mt19937> g_rng;$/;"	m	namespace:nfd	file:
g_scheduler	core/scheduler.cpp	/^static boost::thread_specific_ptr<Scheduler> g_scheduler;$/;"	m	namespace:nfd::scheduler	file:
gateway_timeout	websocketpp/websocketpp/http/constants.hpp	/^            gateway_timeout = 504,$/;"	e	enum:websocketpp::http::status_code::value
general	daemon/mgmt/general-config-section.cpp	/^namespace general {$/;"	n	namespace:nfd	file:
general	daemon/mgmt/general-config-section.hpp	/^namespace general {$/;"	n	namespace:nfd
general	tests/daemon/mgmt/general-config-section.t.cpp	/^namespace general {$/;"	n	namespace:nfd	file:
general	websocketpp/websocketpp/error.hpp	/^    general = 1,$/;"	e	enum:websocketpp::error::value
general	websocketpp/websocketpp/extensions/extension.hpp	/^    general = 1,$/;"	e	enum:websocketpp::extensions::error::value
general	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    general = 1,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
general	websocketpp/websocketpp/processors/base.hpp	/^    general = 1,$/;"	e	enum:websocketpp::processor::error::processor_errors
general	websocketpp/websocketpp/transport/asio/base.hpp	/^    general = 1,$/;"	e	enum:websocketpp::transport::asio::error::value
general	websocketpp/websocketpp/transport/base/connection.hpp	/^    general = 1,$/;"	e	enum:websocketpp::transport::error::value
general	websocketpp/websocketpp/transport/debug/base.hpp	/^    general = 1,$/;"	e	enum:websocketpp::transport::debug::error::value
general	websocketpp/websocketpp/transport/iostream/base.hpp	/^    general = 1,$/;"	e	enum:websocketpp::transport::iostream::error::value
general	websocketpp/websocketpp/transport/stub/base.hpp	/^    general = 1,$/;"	e	enum:websocketpp::transport::stub::error::value
generate	rib/rib-status-publisher.cpp	/^RibStatusPublisher::generate(ndn::EncodingBuffer& outBuffer)$/;"	f	class:nfd::rib::RibStatusPublisher
generate	tests/core/segment-publisher.t.cpp	/^  generate(ndn::EncodingBuffer& outBuffer)$/;"	f	class:nfd::tests::SegmentPublisherTester
generateIdentity	tests/daemon/mgmt/command-validator.t.cpp	/^  generateIdentity(const Name& prefix)$/;"	f	class:nfd::tests::CommandValidatorTester
generate_offer	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    std::string generate_offer() const {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
generate_response	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    std::string generate_response() {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
get	daemon/fw/face-table.cpp	/^FaceTable::get(FaceId id) const$/;"	f	class:nfd::FaceTable
get	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::get(const Name& name)$/;"	f	class:nfd::MeasurementsAccessor
get	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::get(const fib::Entry& fibEntry)$/;"	f	class:nfd::MeasurementsAccessor
get	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::get(const pit::Entry& pitEntry)$/;"	f	class:nfd::MeasurementsAccessor
get	daemon/table/measurements.cpp	/^Measurements::get(const Name& name)$/;"	f	class:nfd::Measurements
get	daemon/table/measurements.cpp	/^Measurements::get(const fib::Entry& fibEntry)$/;"	f	class:nfd::Measurements
get	daemon/table/measurements.cpp	/^Measurements::get(const pit::Entry& pitEntry)$/;"	f	class:nfd::Measurements
get	daemon/table/measurements.cpp	/^Measurements::get(name_tree::Entry& nte)$/;"	f	class:nfd::Measurements
get	daemon/table/name-tree.hpp	/^NameTree::get(const fib::Entry& fibEntry) const$/;"	f	class:nfd::NameTree
get	daemon/table/name-tree.hpp	/^NameTree::get(const measurements::Entry& measurementsEntry) const$/;"	f	class:nfd::NameTree
get	daemon/table/name-tree.hpp	/^NameTree::get(const pit::Entry& pitEntry) const$/;"	f	class:nfd::NameTree
get	daemon/table/name-tree.hpp	/^NameTree::get(const strategy_choice::Entry& strategyChoiceEntry) const$/;"	f	class:nfd::NameTree
get	daemon/table/strategy-choice.cpp	/^StrategyChoice::get(const Name& prefix) const$/;"	f	class:nfd::StrategyChoice
getAction	rib/rib-update.hpp	/^RibUpdate::getAction() const$/;"	f	class:nfd::rib::RibUpdate
getAncestorRoutes	rib/rib.cpp	/^Rib::getAncestorRoutes(const Name& name) const$/;"	f	class:nfd::rib::Rib
getAncestorRoutes	rib/rib.cpp	/^Rib::getAncestorRoutes(const RibEntry& entry) const$/;"	f	class:nfd::rib::Rib
getBestFace	daemon/fw/ncc-strategy.cpp	/^NccStrategy::MeasurementsEntryInfo::getBestFace(void) {$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
getChannels	daemon/face/ethernet-factory.cpp	/^EthernetFactory::getChannels() const$/;"	f	class:nfd::EthernetFactory
getChannels	daemon/face/tcp-factory.cpp	/^TcpFactory::getChannels() const$/;"	f	class:nfd::TcpFactory
getChannels	daemon/face/udp-factory.cpp	/^UdpFactory::getChannels() const$/;"	f	class:nfd::UdpFactory
getChannels	daemon/face/unix-stream-factory.cpp	/^UnixStreamFactory::getChannels() const$/;"	f	class:nfd::UnixStreamFactory
getChannels	daemon/face/websocket-factory.cpp	/^WebSocketFactory::getChannels() const$/;"	f	class:nfd::WebSocketFactory
getChildren	daemon/table/name-tree-entry.hpp	/^Entry::getChildren()$/;"	f	class:nfd::name_tree::Entry
getChildren	rib/rib-entry.hpp	/^RibEntry::getChildren() const$/;"	f	class:nfd::rib::RibEntry
getClientFace	tests/daemon/fw/topology-tester.hpp	/^  getClientFace()$/;"	f	class:nfd::fw::tests::TopologyAppLink
getCost	daemon/table/fib-nexthop.cpp	/^NextHop::getCost() const$/;"	f	class:nfd::fib::NextHop
getCounters	daemon/face/face.hpp	/^Face::getCounters() const$/;"	f	class:nfd::Face
getCounters	daemon/face/lp-face-wrapper.hpp	/^LpFaceWrapper::getCounters() const$/;"	f	class:nfd::face::LpFaceWrapper
getCounters	daemon/face/lp-face.hpp	/^LpFace::getCounters() const$/;"	f	class:nfd::face::LpFace
getCounters	daemon/fw/forwarder.hpp	/^Forwarder::getCounters() const$/;"	f	class:nfd::Forwarder
getCs	daemon/fw/forwarder.hpp	/^Forwarder::getCs()$/;"	f	class:nfd::Forwarder
getCs	daemon/table/cs-policy.hpp	/^Policy::getCs() const$/;"	f	class:nfd::cs::Policy
getData	daemon/table/cs-entry.hpp	/^  getData() const$/;"	f	class:nfd::cs::Entry
getDeadNonceList	daemon/fw/forwarder.hpp	/^Forwarder::getDeadNonceList()$/;"	f	class:nfd::Forwarder
getDefaultFreshness	core/segment-publisher.hpp	/^  getDefaultFreshness()$/;"	f	class:nfd::SegmentPublisher
getDefaultInterestLifetime	tools/ndn-tlv-peek.cpp	/^  getDefaultInterestLifetime()$/;"	f	class:ndntlvpeek::NdnTlvPeek
getDefaultLevel	core/logger-factory.hpp	/^LoggerFactory::getDefaultLevel() const$/;"	f	class:nfd::LoggerFactory
getDefaultTimeout	tools/ndn-tlv-poke.cpp	/^  getDefaultTimeout()$/;"	f	class:ndntlvpoke::NdnTlvPoke
getDescription	daemon/face/face.hpp	/^Face::getDescription() const$/;"	f	class:nfd::Face
getExpected	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getExpected()$/;"	f	class:nfd::tests::Failure
getExpected	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getExpected()$/;"	f	class:nfd::tests::Success
getExpectedResult	tests/daemon/fw/best-route-strategy2.t.cpp	/^  getExpectedResult() const$/;"	f	struct:nfd::fw::tests::NackReasonCombination
getExpirationEvent	rib/route.hpp	/^  getExpirationEvent() const$/;"	f	class:nfd::rib::Route
getExpiry	daemon/table/pit-face-record.hpp	/^FaceRecord::getExpiry() const$/;"	f	class:nfd::pit::FaceRecord
getExtendedErrorMessage	core/extended-error-message.hpp	/^getExtendedErrorMessage(const E& exception)$/;"	f	namespace:nfd
getFace	daemon/face/link-service.hpp	/^LinkService::getFace() const$/;"	f	class:nfd::face::LinkService
getFace	daemon/face/transport.hpp	/^Transport::getFace() const$/;"	f	class:nfd::face::Transport
getFace	daemon/fw/forwarder.hpp	/^Forwarder::getFace(FaceId id) const$/;"	f	class:nfd::Forwarder
getFace	daemon/fw/strategy.hpp	/^Strategy::getFace(FaceId id)$/;"	f	class:nfd::fw::Strategy
getFace	daemon/table/fib-nexthop.cpp	/^NextHop::getFace() const$/;"	f	class:nfd::fib::NextHop
getFace	daemon/table/pit-face-record.hpp	/^FaceRecord::getFace() const$/;"	f	class:nfd::pit::FaceRecord
getFace	tests/daemon/fw/topology-tester.hpp	/^  getFace(TopologyNode i)$/;"	f	class:nfd::fw::tests::TopologyLink
getFaceId	rib/rib-update-batch.hpp	/^RibUpdateBatch::getFaceId() const$/;"	f	class:nfd::rib::RibUpdateBatch
getFaceStatus	daemon/face/face.cpp	/^Face::getFaceStatus() const$/;"	f	class:nfd::Face
getFaceTable	daemon/fw/forwarder.hpp	/^Forwarder::getFaceTable()$/;"	f	class:nfd::Forwarder
getFaceTable	daemon/fw/strategy.hpp	/^Strategy::getFaceTable()$/;"	f	class:nfd::fw::Strategy
getFaceUri1	tests/daemon/face/udp.t.cpp	/^  getFaceUri1()$/;"	f	class:nfd::tests::EndToEndIpv4
getFaceUri1	tests/daemon/face/udp.t.cpp	/^  getFaceUri1()$/;"	f	class:nfd::tests::EndToEndIpv6
getFaceUri2	tests/daemon/face/udp.t.cpp	/^  getFaceUri2()$/;"	f	class:nfd::tests::EndToEndIpv4
getFaceUri2	tests/daemon/face/udp.t.cpp	/^  getFaceUri2()$/;"	f	class:nfd::tests::EndToEndIpv6
getFaceUri3	tests/daemon/face/udp.t.cpp	/^  getFaceUri3()$/;"	f	class:nfd::tests::EndToEndIpv4
getFaceUri3	tests/daemon/face/udp.t.cpp	/^  getFaceUri3()$/;"	f	class:nfd::tests::EndToEndIpv6
getFib	daemon/fw/forwarder.hpp	/^Forwarder::getFib()$/;"	f	class:nfd::Forwarder
getFibEntry	daemon/table/name-tree-entry.hpp	/^Entry::getFibEntry() const$/;"	f	class:nfd::name_tree::Entry
getFibUpdates	tests/rib/fib-updates-common.hpp	/^  getFibUpdates()$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
getForwardRange	daemon/fw/face-table.cpp	/^FaceTable::getForwardRange() const$/;"	f	class:nfd::FaceTable
getForwarder	tests/daemon/fw/topology-tester.hpp	/^  getForwarder(TopologyNode i)$/;"	f	class:nfd::fw::tests::TopologyTester
getForwarderFace	tests/daemon/fw/topology-tester.hpp	/^  getForwarderFace()$/;"	f	class:nfd::fw::tests::TopologyAppLink
getFullName	daemon/table/cs-entry.hpp	/^  getFullName() const$/;"	f	class:nfd::cs::Entry
getGlobalIoService	core/global-io.cpp	/^getGlobalIoService()$/;"	f	namespace:nfd
getGlobalRng	core/random.cpp	/^getGlobalRng()$/;"	f	namespace:nfd
getGlobalScheduler	core/scheduler.cpp	/^getGlobalScheduler()$/;"	f	namespace:nfd::scheduler
getHash	daemon/table/name-tree-entry.hpp	/^Entry::getHash() const$/;"	f	class:nfd::name_tree::Entry
getId	daemon/face/face.hpp	/^Face::getId() const$/;"	f	class:nfd::Face
getId	daemon/face/lp-face.hpp	/^LpFace::getId() const$/;"	f	class:nfd::face::LpFace
getIdentityName	tests/daemon/mgmt/command-validator.t.cpp	/^  getIdentityName() const$/;"	f	class:nfd::tests::CommandValidatorTester
getInRecord	daemon/table/pit-entry.cpp	/^Entry::getInRecord(const Face& face) const$/;"	f	class:nfd::pit::Entry
getInRecords	daemon/table/pit-entry.hpp	/^Entry::getInRecords() const$/;"	f	class:nfd::pit::Entry
getIncomingNack	daemon/table/pit-out-record.hpp	/^  getIncomingNack() const$/;"	f	class:nfd::pit::OutRecord
getInheritedRoutes	rib/rib-entry.hpp	/^RibEntry::getInheritedRoutes() const$/;"	f	class:nfd::rib::RibEntry
getInitialLifetime	daemon/table/measurements.hpp	/^Measurements::getInitialLifetime()$/;"	f	class:nfd::Measurements
getInitialRtt	daemon/fw/rtt-estimator.hpp	/^  getInitialRtt(void)$/;"	f	class:nfd::RttEstimator
getInstance	core/logger-factory.cpp	/^LoggerFactory::getInstance()$/;"	f	class:nfd::LoggerFactory
getInterest	daemon/table/pit-entry.hpp	/^Entry::getInterest() const$/;"	f	class:nfd::pit::Entry
getInterest	daemon/table/pit-in-record.hpp	/^InRecord::getInterest() const$/;"	f	class:nfd::pit::InRecord
getInterestName	tests/daemon/fw/best-route-strategy2.t.cpp	/^  getInterestName()$/;"	f	class:nfd::fw::tests::EmptyNextHopList
getInterestName	tests/daemon/fw/best-route-strategy2.t.cpp	/^  getInterestName()$/;"	f	class:nfd::fw::tests::NextHopIsDownstream
getInterestName	tests/daemon/fw/best-route-strategy2.t.cpp	/^  getInterestName()$/;"	f	class:nfd::fw::tests::NextHopViolatesScope
getInterfaceMtu	daemon/face/ethernet-face.cpp	/^EthernetFace::getInterfaceMtu()$/;"	f	class:nfd::EthernetFace
getIpType	tools/nfd-status-http-server.py	/^    def getIpType(self, ipAddr):$/;"	m	class:ThreadHttpServer
getLastException	tests/limited-io.cpp	/^LimitedIo::getLastException() const$/;"	f	class:nfd::tests::LimitedIo
getLastNonce	daemon/table/pit-face-record.hpp	/^FaceRecord::getLastNonce() const$/;"	f	class:nfd::pit::FaceRecord
getLastOutgoing	daemon/fw/retx-suppression.cpp	/^RetxSuppression::getLastOutgoing(const pit::Entry& pitEntry) const$/;"	f	class:nfd::fw::RetxSuppression
getLastRenewed	daemon/table/pit-face-record.hpp	/^FaceRecord::getLastRenewed() const$/;"	f	class:nfd::pit::FaceRecord
getLifetime	daemon/table/dead-nonce-list.hpp	/^DeadNonceList::getLifetime() const$/;"	f	class:nfd::DeadNonceList
getLimit	daemon/table/cs-policy.hpp	/^Policy::getLimit() const$/;"	f	class:nfd::cs::Policy
getLimit	daemon/table/cs.cpp	/^Cs::getLimit() const$/;"	f	class:nfd::cs::Cs
getLimit	tests/core/segment-publisher.t.cpp	/^  getLimit() const$/;"	f	class:nfd::tests::SegmentPublisherTester
getLinkService	daemon/face/lp-face.hpp	/^LpFace::getLinkService()$/;"	f	class:nfd::face::LpFace
getLinkService	daemon/face/transport.hpp	/^Transport::getLinkService() const$/;"	f	class:nfd::face::Transport
getLinkService	daemon/face/transport.hpp	/^Transport::getLinkService()$/;"	f	class:nfd::face::Transport
getLinkServiceInternal	tests/daemon/face/dummy-lp-face.cpp	/^DummyLpFace::getLinkServiceInternal()$/;"	f	class:nfd::face::tests::DummyLpFace
getLinkType	daemon/face/lp-face.hpp	/^LpFace::getLinkType() const$/;"	f	class:nfd::face::LpFace
getLinkType	daemon/face/transport.hpp	/^Transport::getLinkType() const$/;"	f	class:nfd::face::Transport
getLocalFaces	tests/daemon/fw/strategy.t.cpp	/^  getLocalFaces()$/;"	f	class:nfd::fw::tests::FaceTableAccessTestStrategy
getLocalIp	tests/daemon/face/udp.t.cpp	/^  getLocalIp()$/;"	f	class:nfd::tests::EndToEndIpv4
getLocalIp	tests/daemon/face/udp.t.cpp	/^  getLocalIp()$/;"	f	class:nfd::tests::EndToEndIpv6
getLocalNfdTransport	rib/nrd.cpp	/^Nrd::getLocalNfdTransport()$/;"	f	class:nfd::rib::Nrd
getLocalUri	daemon/face/face.hpp	/^Face::getLocalUri() const$/;"	f	class:nfd::Face
getLocalUri	daemon/face/lp-face.hpp	/^LpFace::getLocalUri() const$/;"	f	class:nfd::face::LpFace
getLocalUri	daemon/face/transport.hpp	/^Transport::getLocalUri() const$/;"	f	class:nfd::face::Transport
getLpFace	daemon/face/lp-face-wrapper.hpp	/^LpFaceWrapper::getLpFace()$/;"	f	class:nfd::face::LpFaceWrapper
getMaxRangeV4	core/network.cpp	/^Network::getMaxRangeV4()$/;"	f	class:nfd::Network
getMaxRangeV6	core/network.cpp	/^Network::getMaxRangeV6()$/;"	f	class:nfd::Network
getMaxSegmentSize	core/segment-publisher.hpp	/^  getMaxSegmentSize()$/;"	f	class:nfd::SegmentPublisher
getMeasurements	daemon/fw/forwarder.hpp	/^Forwarder::getMeasurements()$/;"	f	class:nfd::Forwarder
getMeasurements	daemon/fw/strategy.hpp	/^Strategy::getMeasurements()$/;"	f	class:nfd::fw::Strategy
getMeasurementsAccessor	tests/daemon/table/measurements-accessor.t.cpp	/^  getMeasurementsAccessor()$/;"	f	class:nfd::tests::MeasurementsAccessorTestStrategy
getMeasurementsEntry	daemon/table/name-tree-entry.hpp	/^Entry::getMeasurementsEntry() const$/;"	f	class:nfd::name_tree::Entry
getMeasurementsEntryInfo	daemon/fw/ncc-strategy.cpp	/^NccStrategy::getMeasurementsEntryInfo(shared_ptr<measurements::Entry> entry)$/;"	f	class:nfd::fw::NccStrategy
getMeasurementsEntryInfo	daemon/fw/ncc-strategy.cpp	/^NccStrategy::getMeasurementsEntryInfo(shared_ptr<pit::Entry> entry)$/;"	f	class:nfd::fw::NccStrategy
getMessage	tests/core/simple-notification.hpp	/^  getMessage() const$/;"	f	class:nfd::tests::SimpleNotification
getModules	core/logger-factory.cpp	/^LoggerFactory::getModules() const$/;"	f	class:nfd::LoggerFactory
getMtu	daemon/face/transport.hpp	/^Transport::getMtu() const$/;"	f	class:nfd::face::Transport
getMulticastFaces	daemon/face/ethernet-factory.hpp	/^EthernetFactory::getMulticastFaces() const$/;"	f	class:nfd::EthernetFactory
getMulticastFaces	daemon/face/udp-factory.hpp	/^UdpFactory::getMulticastFaces() const$/;"	f	class:nfd::UdpFactory
getMutableCounters	daemon/face/face.hpp	/^Face::getMutableCounters()$/;"	f	class:nfd::Face
getMutableCounters	daemon/face/lp-face.hpp	/^LpFace::getMutableCounters()$/;"	f	class:nfd::face::LpFace
getNBuckets	daemon/table/name-tree.hpp	/^NameTree::getNBuckets() const$/;"	f	class:nfd::NameTree
getNInBytes	daemon/face/face-counters.hpp	/^  getNInBytes() const$/;"	f	class:nfd::LinkLayerCounters
getNInBytes	daemon/face/face-counters.hpp	/^  getNInBytes()$/;"	f	class:nfd::LinkLayerCounters
getNInDatas	daemon/face/face-counters.hpp	/^  getNInDatas() const$/;"	f	class:nfd::NetworkLayerCounters
getNInDatas	daemon/face/face-counters.hpp	/^  getNInDatas()$/;"	f	class:nfd::NetworkLayerCounters
getNInInterests	daemon/face/face-counters.hpp	/^  getNInInterests() const$/;"	f	class:nfd::NetworkLayerCounters
getNInInterests	daemon/face/face-counters.hpp	/^  getNInInterests()$/;"	f	class:nfd::NetworkLayerCounters
getNOutBytes	daemon/face/face-counters.hpp	/^  getNOutBytes() const$/;"	f	class:nfd::LinkLayerCounters
getNOutBytes	daemon/face/face-counters.hpp	/^  getNOutBytes()$/;"	f	class:nfd::LinkLayerCounters
getNOutDatas	daemon/face/face-counters.hpp	/^  getNOutDatas() const$/;"	f	class:nfd::NetworkLayerCounters
getNOutDatas	daemon/face/face-counters.hpp	/^  getNOutDatas()$/;"	f	class:nfd::NetworkLayerCounters
getNOutInterests	daemon/face/face-counters.hpp	/^  getNOutInterests() const$/;"	f	class:nfd::NetworkLayerCounters
getNOutInterests	daemon/face/face-counters.hpp	/^  getNOutInterests()$/;"	f	class:nfd::NetworkLayerCounters
getNRoutes	rib/rib-entry.cpp	/^RibEntry::getNRoutes() const$/;"	f	class:nfd::rib::RibEntry
getName	core/logger.hpp	/^  getName() const$/;"	f	class:nfd::Logger
getName	daemon/fw/strategy.hpp	/^Strategy::getName() const$/;"	f	class:nfd::fw::Strategy
getName	daemon/table/cs-entry.hpp	/^  getName() const$/;"	f	class:nfd::cs::Entry
getName	daemon/table/cs-policy.hpp	/^Policy::getName() const$/;"	f	class:nfd::cs::Policy
getName	daemon/table/measurements-entry.hpp	/^Entry::getName() const$/;"	f	class:nfd::measurements::Entry
getName	daemon/table/pit-entry.cpp	/^Entry::getName() const$/;"	f	class:nfd::pit::Entry
getName	rib/rib-entry.hpp	/^RibEntry::getName() const$/;"	f	class:nfd::rib::RibEntry
getName	rib/rib-update.hpp	/^RibUpdate::getName() const$/;"	f	class:nfd::rib::RibUpdate
getName	tests/daemon/face/packet-datasets.hpp	/^  getName()$/;"	f	class:nfd::tests::CorruptedInterest
getName	tests/daemon/face/packet-datasets.hpp	/^  getName()$/;"	f	class:nfd::tests::CorruptedInterestWithLocalControlHeader
getNameTree	daemon/fw/forwarder.hpp	/^Forwarder::getNameTree()$/;"	f	class:nfd::Forwarder
getNetworkRegionTable	daemon/fw/forwarder.hpp	/^Forwarder::getNetworkRegionTable()$/;"	f	class:nfd::Forwarder
getNextHops	daemon/table/fib-entry.hpp	/^Entry::getNextHops() const$/;"	f	class:nfd::fib::Entry
getNfdStatus	tools/nfd-status-http-server.py	/^    def getNfdStatus(self):$/;"	m	class:StatusHandler
getOptions	daemon/face/generic-link-service.hpp	/^GenericLinkService::getOptions() const$/;"	f	class:nfd::face::GenericLinkService
getOrCreateStrategyInfo	daemon/table/strategy-info-host.hpp	/^StrategyInfoHost::getOrCreateStrategyInfo(A&&... args)$/;"	f	class:nfd::StrategyInfoHost
getOutRecord	daemon/table/pit-entry.cpp	/^Entry::getOutRecord(const Face& face)$/;"	f	class:nfd::pit::Entry
getOutRecords	daemon/table/pit-entry.hpp	/^Entry::getOutRecords() const$/;"	f	class:nfd::pit::Entry
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::TcpFaceOnDemand
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::TcpFacePermanent
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::TcpFacePersistent
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::UdpFace
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::UdpFaceCannotConnect
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::UdpFaceOnDemand
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::UdpFacePermanent
getParameters	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  getParameters()$/;"	f	class:nfd::tests::UdpFacePersistent
getParent	daemon/table/measurements-accessor.hpp	/^MeasurementsAccessor::getParent(const measurements::Entry& child)$/;"	f	class:nfd::MeasurementsAccessor
getParent	daemon/table/measurements.cpp	/^Measurements::getParent(const Entry& child)$/;"	f	class:nfd::Measurements
getParent	daemon/table/name-tree-entry.hpp	/^Entry::getParent() const$/;"	f	class:nfd::name_tree::Entry
getParent	rib/rib-entry.hpp	/^RibEntry::getParent() const$/;"	f	class:nfd::rib::RibEntry
getPersistency	daemon/face/face.hpp	/^Face::getPersistency() const$/;"	f	class:nfd::Face
getPersistency	daemon/face/lp-face.hpp	/^LpFace::getPersistency() const$/;"	f	class:nfd::face::LpFace
getPersistency	daemon/face/transport.hpp	/^Transport::getPersistency() const$/;"	f	class:nfd::face::Transport
getPit	daemon/fw/forwarder.hpp	/^Forwarder::getPit()$/;"	f	class:nfd::Forwarder
getPitEntries	daemon/table/name-tree-entry.hpp	/^Entry::getPitEntries() const$/;"	f	class:nfd::name_tree::Entry
getPolicy	daemon/table/cs.hpp	/^  getPolicy() const$/;"	f	class:nfd::cs::Cs
getPort1	tests/daemon/face/udp.t.cpp	/^  getPort1()$/;"	f	class:nfd::tests::EndToEndIpv4
getPort1	tests/daemon/face/udp.t.cpp	/^  getPort1()$/;"	f	class:nfd::tests::EndToEndIpv6
getPort2	tests/daemon/face/udp.t.cpp	/^  getPort2()$/;"	f	class:nfd::tests::EndToEndIpv4
getPort2	tests/daemon/face/udp.t.cpp	/^  getPort2()$/;"	f	class:nfd::tests::EndToEndIpv6
getPort3	tests/daemon/face/udp.t.cpp	/^  getPort3()$/;"	f	class:nfd::tests::EndToEndIpv4
getPort3	tests/daemon/face/udp.t.cpp	/^  getPort3()$/;"	f	class:nfd::tests::EndToEndIpv6
getPrefix	daemon/table/fib-entry.hpp	/^Entry::getPrefix() const$/;"	f	class:nfd::fib::Entry
getPrefix	daemon/table/name-tree-entry.hpp	/^Entry::getPrefix() const$/;"	f	class:nfd::name_tree::Entry
getPrefix	daemon/table/strategy-choice-entry.hpp	/^Entry::getPrefix() const$/;"	f	class:nfd::strategy_choice::Entry
getPrefixPropagationParameters	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::getPrefixPropagationParameters(const Name& localRibPrefix)$/;"	f	class:nfd::rib::AutoPrefixPropagator
getPublicKeyName	tests/daemon/mgmt/command-validator.t.cpp	/^  getPublicKeyName() const$/;"	f	class:nfd::tests::CommandValidatorTester
getRemoteUri	daemon/face/face.hpp	/^Face::getRemoteUri() const$/;"	f	class:nfd::Face
getRemoteUri	daemon/face/lp-face.hpp	/^LpFace::getRemoteUri() const$/;"	f	class:nfd::face::LpFace
getRemoteUri	daemon/face/transport.hpp	/^Transport::getRemoteUri() const$/;"	f	class:nfd::face::Transport
getRoute	rib/rib-update.hpp	/^RibUpdate::getRoute() const$/;"	f	class:nfd::rib::RibUpdate
getRouteWithLowestCostAndChildInheritByFaceId	rib/rib-entry.cpp	/^RibEntry::getRouteWithLowestCostAndChildInheritByFaceId(uint64_t faceId) const$/;"	f	class:nfd::rib::RibEntry
getRouteWithLowestCostByFaceId	rib/rib-entry.cpp	/^RibEntry::getRouteWithLowestCostByFaceId(uint64_t faceId) const$/;"	f	class:nfd::rib::RibEntry
getRouteWithSecondLowestCostByFaceId	rib/rib-entry.cpp	/^RibEntry::getRouteWithSecondLowestCostByFaceId(uint64_t faceId) const$/;"	f	class:nfd::rib::RibEntry
getRoutes	rib/rib-entry.hpp	/^RibEntry::getRoutes()$/;"	f	class:nfd::rib::RibEntry
getScheme	tests/daemon/face/udp.t.cpp	/^  getScheme()$/;"	f	class:nfd::tests::EndToEndIpv4
getScheme	tests/daemon/face/udp.t.cpp	/^  getScheme()$/;"	f	class:nfd::tests::EndToEndIpv6
getScope	daemon/face/lp-face.hpp	/^LpFace::getScope() const$/;"	f	class:nfd::face::LpFace
getScope	daemon/face/transport.hpp	/^Transport::getScope() const$/;"	f	class:nfd::face::Transport
getSigningIdentity	rib/propagated-entry.cpp	/^PropagatedEntry::getSigningIdentity() const$/;"	f	class:nfd::rib::PropagatedEntry
getSortedFibUpdates	tests/rib/fib-updates-common.hpp	/^  getSortedFibUpdates()$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
getStaleTime	daemon/table/cs-entry.hpp	/^  getStaleTime() const$/;"	f	class:nfd::cs::Entry
getState	daemon/face/lp-face.hpp	/^LpFace::getState() const$/;"	f	class:nfd::face::LpFace
getState	daemon/face/transport.hpp	/^Transport::getState() const$/;"	f	class:nfd::face::Transport
getStrategy	daemon/table/strategy-choice-entry.hpp	/^Entry::getStrategy() const$/;"	f	class:nfd::strategy_choice::Entry
getStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::getStrategy(const Name& strategyName) const$/;"	f	class:nfd::StrategyChoice
getStrategyChoice	daemon/fw/forwarder.hpp	/^Forwarder::getStrategyChoice()$/;"	f	class:nfd::Forwarder
getStrategyChoiceEntry	daemon/table/name-tree-entry.hpp	/^Entry::getStrategyChoiceEntry() const$/;"	f	class:nfd::name_tree::Entry
getStrategyFactories	daemon/fw/strategy-registry.cpp	/^getStrategyFactories()$/;"	f	namespace:nfd::fw
getStrategyInfo	daemon/table/strategy-info-host.hpp	/^StrategyInfoHost::getStrategyInfo() const$/;"	f	class:nfd::StrategyInfoHost
getStrategyName	daemon/table/strategy-choice-entry.cpp	/^Entry::getStrategyName() const$/;"	f	class:nfd::strategy_choice::Entry
getTotalPayloadLength	tests/core/segment-publisher.t.cpp	/^  getTotalPayloadLength() const$/;"	f	class:nfd::tests::SegmentPublisherTester
getTransport	daemon/face/link-service.hpp	/^LinkService::getTransport() const$/;"	f	class:nfd::face::LinkService
getTransport	daemon/face/link-service.hpp	/^LinkService::getTransport()$/;"	f	class:nfd::face::LinkService
getTransport	daemon/face/lp-face.hpp	/^LpFace::getTransport()$/;"	f	class:nfd::face::LpFace
getTransportInternal	tests/daemon/face/dummy-lp-face.cpp	/^DummyLpFace::getTransportInternal()$/;"	f	class:nfd::face::tests::DummyLpFace
getTypeId	daemon/fw/access-strategy.hpp	/^    getTypeId()$/;"	f	class:nfd::fw::AccessStrategy::MtInfo
getTypeId	daemon/fw/access-strategy.hpp	/^    getTypeId()$/;"	f	class:nfd::fw::AccessStrategy::PitInfo
getTypeId	daemon/fw/ncc-strategy.hpp	/^    getTypeId()$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
getTypeId	daemon/fw/ncc-strategy.hpp	/^    getTypeId()$/;"	f	class:nfd::fw::NccStrategy::PitEntryInfo
getTypeId	daemon/fw/retx-suppression-exponential.cpp	/^  getTypeId()$/;"	f	class:nfd::fw::RetxSuppressionExponential::PitInfo
getTypeId	daemon/fw/strategy-info.hpp	/^  getTypeId()$/;"	f	class:nfd::fw::StrategyInfo
getTypeId	tests/daemon/table/measurements.t.cpp	/^  getTypeId()$/;"	f	class:nfd::tests::DummyStrategyInfo1
getTypeId	tests/daemon/table/measurements.t.cpp	/^  getTypeId()$/;"	f	class:nfd::tests::DummyStrategyInfo2
getTypeId	tests/daemon/table/strategy-choice.t.cpp	/^  getTypeId()$/;"	f	class:nfd::tests::PStrategyInfo
getTypeId	tests/daemon/table/strategy-info-host.t.cpp	/^  getTypeId()$/;"	f	class:nfd::tests::DummyStrategyInfo
getTypeId	tests/daemon/table/strategy-info-host.t.cpp	/^  getTypeId()$/;"	f	class:nfd::tests::DummyStrategyInfo2
getUri	daemon/face/channel.hpp	/^Channel::getUri() const$/;"	f	class:nfd::Channel
getX	tests/daemon/fw/best-route-strategy2.t.cpp	/^  getX() const$/;"	f	struct:nfd::fw::tests::NackReasonCombination
getY	tests/daemon/fw/best-route-strategy2.t.cpp	/^  getY() const$/;"	f	struct:nfd::fw::tests::NackReasonCombination
get_alog	websocketpp/websocketpp/endpoint.hpp	/^    alog_type & get_alog() {$/;"	f	class:websocketpp::endpoint
get_authority	websocketpp/websocketpp/uri.hpp	/^    std::string get_authority() const {$/;"	f	class:websocketpp::uri
get_basic_size	websocketpp/websocketpp/frame.hpp	/^inline uint8_t get_basic_size(const basic_header &h) {$/;"	f	namespace:websocketpp::frame
get_body	websocketpp/websocketpp/http/parser.hpp	/^    std::string const & get_body() const {$/;"	f	class:websocketpp::http::parser::parser::std
get_buffered_amount	websocketpp/websocketpp/impl/connection_impl.hpp	/^size_t connection<config>::get_buffered_amount() const {$/;"	f	class:websocketpp::connection
get_bytes_needed	websocketpp/websocketpp/processors/hybi13.hpp	/^    size_t get_bytes_needed() const {$/;"	f	class:websocketpp::processor::hybi13
get_bytes_needed	websocketpp/websocketpp/processors/processor.hpp	/^    virtual size_t get_bytes_needed() const {$/;"	f	class:websocketpp::processor::processor
get_category	websocketpp/websocketpp/error.hpp	/^inline const lib::error_category& get_category() {$/;"	f	namespace:websocketpp::error
get_category	websocketpp/websocketpp/extensions/extension.hpp	/^inline const lib::error_category& get_category() {$/;"	f	namespace:websocketpp::extensions::error
get_category	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^lib::error_category const & get_category() {$/;"	f	class:websocketpp::extensions::permessage_deflate::error::lib
get_category	websocketpp/websocketpp/transport/asio/base.hpp	/^inline lib::error_category const & get_category() {$/;"	f	class:websocketpp::transport::asio::error::lib
get_category	websocketpp/websocketpp/transport/base/connection.hpp	/^inline lib::error_category const & get_category() {$/;"	f	class:websocketpp::transport::error::lib
get_category	websocketpp/websocketpp/transport/debug/base.hpp	/^inline lib::error_category const & get_category() {$/;"	f	class:websocketpp::transport::debug::error::lib
get_category	websocketpp/websocketpp/transport/iostream/base.hpp	/^inline lib::error_category const & get_category() {$/;"	f	class:websocketpp::transport::iostream::error::lib
get_category	websocketpp/websocketpp/transport/stub/base.hpp	/^inline lib::error_category const & get_category() {$/;"	f	class:websocketpp::transport::stub::error::lib
get_compressed	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool get_compressed() const {$/;"	f	class:websocketpp::message_buffer::message
get_con_from_hdl	websocketpp/websocketpp/endpoint.hpp	/^    connection_ptr get_con_from_hdl(connection_hdl hdl) {$/;"	f	class:websocketpp::endpoint
get_con_from_hdl	websocketpp/websocketpp/endpoint.hpp	/^    connection_ptr get_con_from_hdl(connection_hdl hdl, lib::error_code & ec) {$/;"	f	class:websocketpp::endpoint
get_connection	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    connection_ptr get_connection(std::string const & u, lib::error_code & ec) {$/;"	f	class:websocketpp::client
get_connection	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    connection_ptr get_connection(uri_ptr location, lib::error_code & ec) {$/;"	f	class:websocketpp::client
get_connection	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    connection_ptr get_connection() {$/;"	f	class:websocketpp::server
get_data_from_hdl	websocketpp/examples/associative_storage/associative_storage.cpp	/^    connection_data& get_data_from_hdl(connection_hdl hdl) {$/;"	f	class:print_server
get_ec	websocketpp/websocketpp/connection.hpp	/^    lib::error_code get_ec() const {$/;"	f	class:websocketpp::connection
get_ec	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    lib::error_code get_ec() const {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
get_ec	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    lib::error_code get_ec() const {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
get_elog	websocketpp/websocketpp/endpoint.hpp	/^    elog_type & get_elog() {$/;"	f	class:websocketpp::endpoint
get_error	websocketpp/websocketpp/processors/hybi00.hpp	/^    bool get_error() const {$/;"	f	class:websocketpp::processor::hybi00
get_error	websocketpp/websocketpp/processors/hybi13.hpp	/^    bool get_error() const {$/;"	f	class:websocketpp::processor::hybi13
get_extended_size	websocketpp/websocketpp/frame.hpp	/^inline uint16_t get_extended_size(const extended_header &e) {$/;"	f	namespace:websocketpp::frame
get_extension_data	websocketpp/websocketpp/message_buffer/message.hpp	/^    std::string const & get_extension_data() const {$/;"	f	class:websocketpp::message_buffer::message::std
get_extension_data	websocketpp/websocketpp/message_buffer/pool.hpp	/^    const std::string& get_extension_data() const {$/;"	f	class:websocketpp::message_buffer::message
get_fin	websocketpp/websocketpp/frame.hpp	/^inline bool get_fin(basic_header const & h) {$/;"	f	namespace:websocketpp::frame
get_fin	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool get_fin() const {$/;"	f	class:websocketpp::message_buffer::message
get_handle	websocketpp/websocketpp/connection.hpp	/^    connection_hdl get_handle() const {$/;"	f	class:websocketpp::connection
get_handle	websocketpp/websocketpp/transport/asio/connection.hpp	/^    connection_hdl get_handle() const {$/;"	f	class:websocketpp::transport::asio::connection
get_handle	websocketpp/websocketpp/transport/debug/connection.hpp	/^    connection_hdl get_handle() const {$/;"	f	class:websocketpp::transport::debug::connection
get_handle	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    connection_hdl get_handle() const {$/;"	f	class:websocketpp::transport::iostream::connection
get_handle	websocketpp/websocketpp/transport/stub/connection.hpp	/^    connection_hdl get_handle() const {$/;"	f	class:websocketpp::transport::stub::connection
get_handshake_type	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    socket_type::handshake_type get_handshake_type() {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
get_hdl	websocketpp/examples/utility_client/utility_client.cpp	/^    websocketpp::connection_hdl get_hdl() const {$/;"	f	class:connection_metadata
get_hdl	websocketpp/tutorials/utility_client/step5.cpp	/^    websocketpp::connection_hdl get_hdl() const {$/;"	f	class:connection_metadata
get_hdl	websocketpp/tutorials/utility_client/step6.cpp	/^    websocketpp::connection_hdl get_hdl() const {$/;"	f	class:connection_metadata
get_header	websocketpp/websocketpp/http/impl/parser.hpp	/^inline std::string const & parser::get_header(std::string const & key) const {$/;"	f	class:websocketpp::http::parser::std::parser
get_header	websocketpp/websocketpp/message_buffer/message.hpp	/^    std::string const & get_header() const {$/;"	f	class:websocketpp::message_buffer::message::std
get_header	websocketpp/websocketpp/message_buffer/pool.hpp	/^    const std::string& get_header() const {$/;"	f	class:websocketpp::message_buffer::message
get_header_as_plist	websocketpp/websocketpp/http/impl/parser.hpp	/^inline bool parser::get_header_as_plist(std::string const & key,$/;"	f	class:websocketpp::http::parser::parser
get_header_len	websocketpp/websocketpp/frame.hpp	/^inline size_t get_header_len(basic_header const & h) {$/;"	f	namespace:websocketpp::frame
get_host	websocketpp/websocketpp/impl/connection_impl.hpp	/^std::string const & connection<config>::get_host() const {$/;"	f	class:websocketpp::std::connection
get_host	websocketpp/websocketpp/uri.hpp	/^    std::string const & get_host() const {$/;"	f	class:websocketpp::uri::std
get_host_port	websocketpp/websocketpp/uri.hpp	/^    std::string get_host_port() const {$/;"	f	class:websocketpp::uri
get_id	websocketpp/examples/utility_client/utility_client.cpp	/^    int get_id() const {$/;"	f	class:connection_metadata
get_id	websocketpp/tutorials/utility_client/step5.cpp	/^    int get_id() const {$/;"	f	class:connection_metadata
get_id	websocketpp/tutorials/utility_client/step6.cpp	/^    int get_id() const {$/;"	f	class:connection_metadata
get_io_service	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    boost::asio::io_service & get_io_service() {$/;"	f	class:websocketpp::transport::asio::endpoint
get_jumbo_size	websocketpp/websocketpp/frame.hpp	/^inline uint64_t get_jumbo_size(const extended_header &e) {$/;"	f	namespace:websocketpp::frame
get_key3	websocketpp/websocketpp/processors/hybi00.hpp	/^    std::string get_key3() const {$/;"	f	class:websocketpp::processor::hybi00
get_local_close_code	websocketpp/websocketpp/connection.hpp	/^    close::status::value get_local_close_code() const {$/;"	f	class:websocketpp::connection
get_local_close_reason	websocketpp/websocketpp/connection.hpp	/^    std::string const & get_local_close_reason() const {$/;"	f	class:websocketpp::connection::std
get_manager	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    con_msg_man_ptr get_manager() const {$/;"	f	class:websocketpp::message_buffer::alloc::endpoint_msg_manager
get_manager	websocketpp/websocketpp/message_buffer/pool.hpp	/^    con_msg_man_ptr get_manager() const {$/;"	f	class:websocketpp::message_buffer::alloc::endpoint_msg_manager
get_masked	websocketpp/websocketpp/frame.hpp	/^inline bool get_masked(basic_header const & h) {$/;"	f	namespace:websocketpp::frame
get_masking_key	websocketpp/websocketpp/frame.hpp	/^inline masking_key_type get_masking_key(const basic_header &h, const$/;"	f	namespace:websocketpp::frame
get_masking_key_offset	websocketpp/websocketpp/frame.hpp	/^inline unsigned int get_masking_key_offset(const basic_header &h) {$/;"	f	namespace:websocketpp::frame
get_max_body_size	websocketpp/websocketpp/http/parser.hpp	/^    size_t get_max_body_size() const {$/;"	f	class:websocketpp::http::parser::parser
get_max_http_body_size	websocketpp/websocketpp/connection.hpp	/^    size_t get_max_http_body_size() const {$/;"	f	class:websocketpp::connection
get_max_http_body_size	websocketpp/websocketpp/endpoint.hpp	/^    size_t get_max_http_body_size() const {$/;"	f	class:websocketpp::endpoint
get_max_message_size	websocketpp/websocketpp/connection.hpp	/^    size_t get_max_message_size() const {$/;"	f	class:websocketpp::connection
get_max_message_size	websocketpp/websocketpp/endpoint.hpp	/^    size_t get_max_message_size() const {$/;"	f	class:websocketpp::endpoint
get_max_message_size	websocketpp/websocketpp/processors/processor.hpp	/^    size_t get_max_message_size() const {$/;"	f	class:websocketpp::processor::processor
get_message	websocketpp/websocketpp/connection.hpp	/^    message_ptr get_message(websocketpp::frame::opcode::value op, size_t size)$/;"	f	class:websocketpp::connection
get_message	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    message_ptr get_message() {$/;"	f	class:websocketpp::message_buffer::alloc::con_msg_manager
get_message	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    message_ptr get_message(frame::opcode::value op,size_t size) {$/;"	f	class:websocketpp::message_buffer::alloc::con_msg_manager
get_message	websocketpp/websocketpp/message_buffer/pool.hpp	/^    message_ptr get_message(size_t size) const {$/;"	f	class:websocketpp::message_buffer::alloc::con_msg_manager
get_message	websocketpp/websocketpp/processors/hybi00.hpp	/^    message_ptr get_message() {$/;"	f	class:websocketpp::processor::hybi00
get_message	websocketpp/websocketpp/processors/hybi13.hpp	/^    message_ptr get_message() {$/;"	f	class:websocketpp::processor::hybi13
get_metadata	websocketpp/examples/utility_client/utility_client.cpp	/^    connection_metadata::ptr get_metadata(int id) const {$/;"	f	class:websocket_endpoint
get_metadata	websocketpp/tutorials/utility_client/step4.cpp	/^    connection_metadata::ptr get_metadata(int id) const {$/;"	f	class:websocket_endpoint
get_metadata	websocketpp/tutorials/utility_client/step5.cpp	/^    connection_metadata::ptr get_metadata(int id) const {$/;"	f	class:websocket_endpoint
get_metadata	websocketpp/tutorials/utility_client/step6.cpp	/^    connection_metadata::ptr get_metadata(int id) const {$/;"	f	class:websocket_endpoint
get_method	websocketpp/websocketpp/http/request.hpp	/^    std::string const & get_method() const {$/;"	f	class:websocketpp::http::parser::request::std
get_next_layer	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    boost::asio::ip::tcp::socket& get_next_layer() {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
get_next_layer	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    socket_type::next_layer_type& get_next_layer() {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
get_opcode	websocketpp/websocketpp/frame.hpp	/^inline opcode::value get_opcode(const basic_header &h) {$/;"	f	namespace:websocketpp::frame
get_opcode	websocketpp/websocketpp/message_buffer/message.hpp	/^    frame::opcode::value get_opcode() const {$/;"	f	class:websocketpp::message_buffer::message
get_opcode	websocketpp/websocketpp/message_buffer/pool.hpp	/^    frame::opcode::value get_opcode() const {$/;"	f	class:websocketpp::message_buffer::message
get_origin	websocketpp/websocketpp/impl/connection_impl.hpp	/^std::string const & connection<config>::get_origin() const {$/;"	f	class:websocketpp::std::connection
get_origin	websocketpp/websocketpp/processors/hybi00.hpp	/^    std::string const & get_origin(request_type const & r) const {$/;"	f	class:websocketpp::processor::hybi00::std
get_origin	websocketpp/websocketpp/processors/hybi08.hpp	/^    std::string const & get_origin(request_type const & r) const {$/;"	f	class:websocketpp::processor::hybi08::std
get_origin	websocketpp/websocketpp/processors/hybi13.hpp	/^    std::string const & get_origin(request_type const & r) const {$/;"	f	class:websocketpp::processor::hybi13::std
get_password	websocketpp/examples/echo_server_both/echo_server_both.cpp	/^std::string get_password() {$/;"	f
get_password	websocketpp/examples/echo_server_tls/echo_server_tls.cpp	/^std::string get_password() {$/;"	f
get_payload	websocketpp/websocketpp/message_buffer/message.hpp	/^    std::string const & get_payload() const {$/;"	f	class:websocketpp::message_buffer::message::std
get_payload	websocketpp/websocketpp/message_buffer/pool.hpp	/^    const std::string& get_payload() const {$/;"	f	class:websocketpp::message_buffer::message
get_payload_size	websocketpp/websocketpp/frame.hpp	/^inline uint64_t get_payload_size(const basic_header &h, const$/;"	f	namespace:websocketpp::frame
get_port	websocketpp/websocketpp/impl/connection_impl.hpp	/^uint16_t connection<config>::get_port() const {$/;"	f	class:websocketpp::connection
get_port	websocketpp/websocketpp/uri.hpp	/^    uint16_t get_port() const {$/;"	f	class:websocketpp::uri
get_port_from_string	websocketpp/websocketpp/uri.hpp	/^    uint16_t get_port_from_string(std::string const & port, lib::error_code &$/;"	f	class:websocketpp::uri
get_port_str	websocketpp/websocketpp/uri.hpp	/^    std::string get_port_str() const {$/;"	f	class:websocketpp::uri
get_prepared	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool get_prepared() const {$/;"	f	class:websocketpp::message_buffer::message
get_processor	websocketpp/websocketpp/impl/connection_impl.hpp	/^connection<config>::get_processor(int version) const {$/;"	f	class:websocketpp::connection
get_processor_category	websocketpp/websocketpp/processors/base.hpp	/^inline lib::error_category const & get_processor_category() {$/;"	f	class:websocketpp::processor::error::lib
get_proxy	websocketpp/websocketpp/transport/asio/connection.hpp	/^    std::string const & get_proxy() const {$/;"	f	class:websocketpp::transport::asio::connection::std
get_query	websocketpp/websocketpp/uri.hpp	/^    std::string get_query() const {$/;"	f	class:websocketpp::uri
get_raw	websocketpp/websocketpp/processors/hybi00.hpp	/^    std::string get_raw(response_type const & res) const {$/;"	f	class:websocketpp::processor::hybi00
get_raw	websocketpp/websocketpp/processors/hybi13.hpp	/^    std::string get_raw(response_type const & res) const {$/;"	f	class:websocketpp::processor::hybi13
get_raw_payload	websocketpp/websocketpp/message_buffer/message.hpp	/^    std::string & get_raw_payload() {$/;"	f	class:websocketpp::message_buffer::message
get_raw_socket	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    boost::asio::ip::tcp::socket& get_raw_socket() {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
get_raw_socket	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    socket_type::lowest_layer_type& get_raw_socket() {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
get_remote_close_code	websocketpp/websocketpp/connection.hpp	/^    close::status::value get_remote_close_code() const {$/;"	f	class:websocketpp::connection
get_remote_close_reason	websocketpp/websocketpp/connection.hpp	/^    std::string const & get_remote_close_reason() const {$/;"	f	class:websocketpp::connection::std
get_remote_endpoint	websocketpp/websocketpp/transport/asio/connection.hpp	/^    std::string get_remote_endpoint() const {$/;"	f	class:websocketpp::transport::asio::connection
get_remote_endpoint	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    std::string get_remote_endpoint(lib::error_code &ec) const {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
get_remote_endpoint	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    std::string get_remote_endpoint(lib::error_code &ec) const {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
get_remote_endpoint	websocketpp/websocketpp/transport/debug/connection.hpp	/^    std::string get_remote_endpoint() const {$/;"	f	class:websocketpp::transport::debug::connection
get_remote_endpoint	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    std::string get_remote_endpoint() const {$/;"	f	class:websocketpp::transport::iostream::connection
get_remote_endpoint	websocketpp/websocketpp/transport/stub/connection.hpp	/^    std::string get_remote_endpoint() const {$/;"	f	class:websocketpp::transport::stub::connection
get_request	websocketpp/websocketpp/connection.hpp	/^    request_type const & get_request() const {$/;"	f	class:websocketpp::connection
get_request_body	websocketpp/websocketpp/impl/connection_impl.hpp	/^connection<config>::get_request_body() const {$/;"	f	class:websocketpp::std::connection
get_request_header	websocketpp/websocketpp/impl/connection_impl.hpp	/^connection<config>::get_request_header(std::string const & key) const {$/;"	f	class:websocketpp::std::connection
get_requested_subprotocols	websocketpp/websocketpp/impl/connection_impl.hpp	/^connection<config>::get_requested_subprotocols() const {$/;"	f	class:websocketpp::std::connection
get_resource	websocketpp/websocketpp/impl/connection_impl.hpp	/^std::string const & connection<config>::get_resource() const {$/;"	f	class:websocketpp::std::connection
get_resource	websocketpp/websocketpp/uri.hpp	/^    std::string const & get_resource() const {$/;"	f	class:websocketpp::uri::std
get_response_header	websocketpp/websocketpp/impl/connection_impl.hpp	/^connection<config>::get_response_header(std::string const & key) const {$/;"	f	class:websocketpp::std::connection
get_rsv1	websocketpp/websocketpp/frame.hpp	/^inline bool get_rsv1(const basic_header &h) {$/;"	f	namespace:websocketpp::frame
get_rsv2	websocketpp/websocketpp/frame.hpp	/^inline bool get_rsv2(const basic_header &h) {$/;"	f	namespace:websocketpp::frame
get_rsv3	websocketpp/websocketpp/frame.hpp	/^inline bool get_rsv3(const basic_header &h) {$/;"	f	namespace:websocketpp::frame
get_scheme	websocketpp/websocketpp/uri.hpp	/^    std::string const & get_scheme() const {$/;"	f	class:websocketpp::uri::std
get_secure	websocketpp/websocketpp/impl/connection_impl.hpp	/^bool connection<config>::get_secure() const {$/;"	f	class:websocketpp::connection
get_secure	websocketpp/websocketpp/uri.hpp	/^    bool get_secure() const {$/;"	f	class:websocketpp::uri
get_shared	websocketpp/test/transport/iostream/connection.cpp	/^    ptr get_shared() {$/;"	f	struct:stub_con
get_shared	websocketpp/websocketpp/connection.hpp	/^    ptr get_shared() {$/;"	f	class:websocketpp::connection
get_shared	websocketpp/websocketpp/transport/asio/connection.hpp	/^    ptr get_shared() {$/;"	f	class:websocketpp::transport::asio::connection
get_shared	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    ptr get_shared() {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
get_shared	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    ptr get_shared() {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
get_shared	websocketpp/websocketpp/transport/debug/connection.hpp	/^    ptr get_shared() {$/;"	f	class:websocketpp::transport::debug::connection
get_shared	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    ptr get_shared() {$/;"	f	class:websocketpp::transport::iostream::connection
get_shared	websocketpp/websocketpp/transport/stub/connection.hpp	/^    ptr get_shared() {$/;"	f	class:websocketpp::transport::stub::connection
get_socket	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    boost::asio::ip::tcp::socket& get_socket() {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
get_socket	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    socket_type& get_socket() {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
get_socket_category	websocketpp/websocketpp/transport/asio/security/base.hpp	/^inline lib::error_category const & get_socket_category() {$/;"	f	class:websocketpp::transport::asio::socket::lib
get_state	websocketpp/websocketpp/impl/connection_impl.hpp	/^session::state::value connection<config>::get_state() const {$/;"	f	class:websocketpp::connection
get_status	websocketpp/examples/utility_client/utility_client.cpp	/^    std::string get_status() const {$/;"	f	class:connection_metadata
get_status	websocketpp/tutorials/utility_client/step5.cpp	/^    std::string get_status() const {$/;"	f	class:connection_metadata
get_status	websocketpp/tutorials/utility_client/step6.cpp	/^    std::string get_status() const {$/;"	f	class:connection_metadata
get_status_code	websocketpp/websocketpp/http/response.hpp	/^    status_code::value get_status_code() const {$/;"	f	class:websocketpp::http::parser::response
get_status_msg	websocketpp/websocketpp/http/response.hpp	/^    const std::string& get_status_msg() const {$/;"	f	class:websocketpp::http::parser::response
get_strand	websocketpp/websocketpp/transport/asio/connection.hpp	/^    strand_ptr get_strand() {$/;"	f	class:websocketpp::transport::asio::connection
get_string	websocketpp/websocketpp/close.hpp	/^    inline std::string get_string(value code) {$/;"	f	namespace:websocketpp::close::status
get_string	websocketpp/websocketpp/http/constants.hpp	/^        inline std::string get_string(value c) {$/;"	f	namespace:websocketpp::http::status_code
get_subprotocol	websocketpp/websocketpp/impl/connection_impl.hpp	/^std::string const & connection<config>::get_subprotocol() const {$/;"	f	class:websocketpp::std::connection
get_supported_versions	websocketpp/websocketpp/impl/connection_impl.hpp	/^std::vector<int> const & connection<config>::get_supported_versions() const$/;"	f	class:websocketpp::std::connection
get_terminal	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool get_terminal() const {$/;"	f	class:websocketpp::message_buffer::message
get_uri	websocketpp/websocketpp/http/request.hpp	/^    std::string const & get_uri() const {$/;"	f	class:websocketpp::http::parser::request::std
get_uri	websocketpp/websocketpp/impl/connection_impl.hpp	/^uri_ptr connection<config>::get_uri() const {$/;"	f	class:websocketpp::connection
get_uri	websocketpp/websocketpp/processors/hybi00.hpp	/^    uri_ptr get_uri(request_type const & request) const {$/;"	f	class:websocketpp::processor::hybi00
get_uri	websocketpp/websocketpp/processors/hybi13.hpp	/^    uri_ptr get_uri(request_type const & request) const {$/;"	f	class:websocketpp::processor::hybi13
get_uri_from_host	websocketpp/websocketpp/processors/processor.hpp	/^uri_ptr get_uri_from_host(request_type & request, std::string scheme) {$/;"	f	namespace:websocketpp::processor
get_user_agent	websocketpp/websocketpp/endpoint.hpp	/^    std::string get_user_agent() const {$/;"	f	class:websocketpp::endpoint
get_valid	websocketpp/websocketpp/uri.hpp	/^    bool get_valid() const {$/;"	f	class:websocketpp::uri
get_version	websocketpp/websocketpp/http/parser.hpp	/^    std::string const & get_version() const {$/;"	f	class:websocketpp::http::parser::parser::std
get_version	websocketpp/websocketpp/processors/hybi00.hpp	/^    int get_version() const {$/;"	f	class:websocketpp::processor::hybi00
get_version	websocketpp/websocketpp/processors/hybi07.hpp	/^    int get_version() const {$/;"	f	class:websocketpp::processor::hybi07
get_version	websocketpp/websocketpp/processors/hybi08.hpp	/^    int get_version() const {$/;"	f	class:websocketpp::processor::hybi08
get_version	websocketpp/websocketpp/processors/hybi13.hpp	/^    int get_version() const {$/;"	f	class:websocketpp::processor::hybi13
get_websocket_version	websocketpp/websocketpp/processors/processor.hpp	/^int get_websocket_version(request_type& r) {$/;"	f	namespace:websocketpp::processor
going_away	websocketpp/websocketpp/close.hpp	/^    static value const going_away = 1001;$/;"	m	namespace:websocketpp::close::status
gone	websocketpp/websocketpp/http/constants.hpp	/^            gone = 410,$/;"	e	enum:websocketpp::http::status_code::value
handle	tests/daemon/face/websocket.t.cpp	/^  websocketpp::connection_hdl handle;$/;"	m	class:nfd::tests::EndToEndFixture	file:
handleAccept	daemon/face/tcp-channel.cpp	/^TcpChannel::handleAccept(const boost::system::error_code& error,$/;"	f	class:nfd::TcpChannel
handleAccept	daemon/face/unix-stream-channel.cpp	/^UnixStreamChannel::handleAccept(const boost::system::error_code& error,$/;"	f	class:nfd::UnixStreamChannel
handleClose	daemon/face/websocket-channel.cpp	/^WebSocketChannel::handleClose(websocketpp::connection_hdl hdl)$/;"	f	class:nfd::WebSocketChannel
handleCommand	daemon/mgmt/manager-base.cpp	/^ManagerBase::handleCommand(shared_ptr<nfd::ControlCommand> command,$/;"	f	class:nfd::ManagerBase
handleConnect	daemon/face/tcp-channel.cpp	/^TcpChannel::handleConnect(const boost::system::error_code& error,$/;"	f	class:nfd::TcpChannel
handleConnectTimeout	daemon/face/tcp-channel.cpp	/^TcpChannel::handleConnectTimeout(const shared_ptr<ip::tcp::socket>& socket,$/;"	f	class:nfd::TcpChannel
handleMessage	daemon/face/websocket-channel.cpp	/^WebSocketChannel::handleMessage(websocketpp::connection_hdl hdl,$/;"	f	class:nfd::WebSocketChannel
handleNewPeer	daemon/face/udp-channel.cpp	/^UdpChannel::handleNewPeer(const boost::system::error_code& error,$/;"	f	class:nfd::UdpChannel
handleOpen	daemon/face/websocket-channel.cpp	/^WebSocketChannel::handleOpen(websocketpp::connection_hdl hdl)$/;"	f	class:nfd::WebSocketChannel
handlePong	daemon/face/websocket-channel.cpp	/^WebSocketChannel::handlePong(websocketpp::connection_hdl hdl, std::string msg)$/;"	f	class:nfd::WebSocketChannel
handlePongTimeout	daemon/face/websocket-channel.cpp	/^WebSocketChannel::handlePongTimeout(websocketpp::connection_hdl hdl, std::string msg)$/;"	f	class:nfd::WebSocketChannel
handleRead	daemon/face/ethernet-face.cpp	/^EthernetFace::handleRead(const boost::system::error_code& error, size_t)$/;"	f	class:nfd::EthernetFace
handleReceive	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::handleReceive(const boost::system::error_code& error,$/;"	f	class:nfd::face::DatagramTransport
handleReceive	daemon/face/stream-face.hpp	/^StreamFace<T, U>::handleReceive(const boost::system::error_code& error,$/;"	f	class:nfd::StreamFace
handleReceive	daemon/face/stream-transport.hpp	/^StreamTransport<T>::handleReceive(const boost::system::error_code& error,$/;"	f	class:nfd::face::StreamTransport
handleReceive	daemon/face/websocket-face.cpp	/^WebSocketFace::handleReceive(const std::string& msg)$/;"	f	class:nfd::WebSocketFace
handleSend	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::handleSend(const boost::system::error_code& error,$/;"	f	class:nfd::face::DatagramTransport
handleSend	daemon/face/stream-face.hpp	/^StreamFace<T, U>::handleSend(const boost::system::error_code& error,$/;"	f	class:nfd::StreamFace
handleSend	daemon/face/stream-transport.hpp	/^StreamTransport<T>::handleSend(const boost::system::error_code& error,$/;"	f	class:nfd::face::StreamTransport
handleStateChange	daemon/face/lp-face-wrapper.cpp	/^LpFaceWrapper::handleStateChange(FaceState oldState, FaceState newState)$/;"	f	class:nfd::face::LpFaceWrapper
handle_accept	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    void handle_accept(connection_ptr con, lib::error_code const & ec) {$/;"	f	class:websocketpp::server
handle_accept	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void handle_accept(accept_handler callback, boost::system::error_code const$/;"	f	class:websocketpp::transport::asio::endpoint
handle_async_read	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_async_read(boost::system::error_code const & ec,$/;"	f	class:websocketpp::transport::asio::connection
handle_async_shutdown	websocketpp/test/transport/iostream/connection.cpp	/^    void handle_async_shutdown(websocketpp::lib::error_code const & e) {$/;"	f	struct:stub_con
handle_async_shutdown	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_async_shutdown(timer_ptr shutdown_timer, shutdown_handler$/;"	f	class:websocketpp::transport::asio::connection
handle_async_shutdown_timeout	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_async_shutdown_timeout(timer_ptr, init_handler callback, $/;"	f	class:websocketpp::transport::asio::connection
handle_async_write	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_async_write(boost::system::error_code const & ec, size_t) {$/;"	f	class:websocketpp::transport::asio::connection
handle_close_handshake_timeout	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_close_handshake_timeout($/;"	f	class:websocketpp::connection
handle_connect	websocketpp/test/transport/asio/timers.cpp	/^    void handle_connect(connection_ptr con, websocketpp::lib::error_code const & ec)$/;"	f	struct:mock_endpoint
handle_connect	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    void handle_connect(connection_ptr con, lib::error_code const & ec) {$/;"	f	class:websocketpp::client
handle_connect	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void handle_connect(transport_con_ptr tcon, timer_ptr con_timer,$/;"	f	class:websocketpp::transport::asio::endpoint
handle_connect_timeout	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void handle_connect_timeout(transport_con_ptr tcon, timer_ptr,$/;"	f	class:websocketpp::transport::asio::endpoint
handle_indef	websocketpp/test/transport/iostream/connection.cpp	/^    void handle_indef(websocketpp::lib::error_code const & e, size_t amt_read) {$/;"	f	struct:stub_con
handle_init	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void handle_init(init_handler callback,boost::system::error_code const & ec)$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
handle_interrupt	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_interrupt() {$/;"	f	class:websocketpp::connection
handle_op	websocketpp/test/transport/iostream/connection.cpp	/^    void handle_op(websocketpp::lib::error_code const & e) {$/;"	f	struct:stub_con
handle_open_handshake_timeout	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_open_handshake_timeout($/;"	f	class:websocketpp::connection
handle_pause_reading	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_pause_reading() {$/;"	f	class:websocketpp::connection
handle_pong_timeout	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_pong_timeout(std::string payload,$/;"	f	class:websocketpp::connection
handle_post_init	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_post_init(timer_ptr post_timer, init_handler callback,$/;"	f	class:websocketpp::transport::asio::connection
handle_post_init_timeout	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_post_init_timeout(timer_ptr, init_handler callback,$/;"	f	class:websocketpp::transport::asio::connection
handle_pre_init	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_pre_init(lib::error_code const & ec) {$/;"	f	class:websocketpp::transport::asio::connection
handle_proxy_read	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_proxy_read(init_handler callback,$/;"	f	class:websocketpp::transport::asio::connection
handle_proxy_timeout	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_proxy_timeout(init_handler callback, lib::error_code const & ec)$/;"	f	class:websocketpp::transport::asio::connection
handle_proxy_write	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_proxy_write(init_handler callback,$/;"	f	class:websocketpp::transport::asio::connection
handle_read_frame	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_read_frame(lib::error_code const & ec,$/;"	f	class:websocketpp::connection
handle_read_handshake	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_read_handshake(lib::error_code const & ec,$/;"	f	class:websocketpp::connection
handle_read_http_response	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_read_http_response(lib::error_code const & ec,$/;"	f	class:websocketpp::connection
handle_resolve	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void handle_resolve(transport_con_ptr tcon, timer_ptr dns_timer,$/;"	f	class:websocketpp::transport::asio::endpoint
handle_resolve_timeout	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void handle_resolve_timeout(timer_ptr, connect_handler callback,$/;"	f	class:websocketpp::transport::asio::endpoint
handle_resume_reading	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_resume_reading() {$/;"	f	class:websocketpp::connection
handle_send_http_request	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_send_http_request(lib::error_code const & ec) {$/;"	f	class:websocketpp::connection
handle_send_http_response	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_send_http_response(lib::error_code const & ec) {$/;"	f	class:websocketpp::connection
handle_start	websocketpp/test/transport/asio/timers.cpp	/^    void handle_start(const websocketpp::lib::error_code& ec) {$/;"	f	struct:mock_con
handle_terminate	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_terminate(terminate_status tstat,$/;"	f	class:websocketpp::connection
handle_timer	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void handle_timer(timer_ptr, timer_handler callback,$/;"	f	class:websocketpp::transport::asio::connection
handle_timer	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void handle_timer(timer_ptr, timer_handler callback,$/;"	f	class:websocketpp::transport::asio::endpoint
handle_transport_init	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_transport_init(lib::error_code const & ec) {$/;"	f	class:websocketpp::connection
handle_write_frame	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::handle_write_frame(lib::error_code const & ec)$/;"	f	class:websocketpp::connection
handler_	websocketpp/websocketpp/transport/asio/base.hpp	/^  Handler handler_;$/;"	m	class:websocketpp::transport::asio::custom_alloc_handler
handler_allocator	websocketpp/websocketpp/transport/asio/base.hpp	/^  handler_allocator()$/;"	f	class:websocketpp::transport::asio::handler_allocator
handler_allocator	websocketpp/websocketpp/transport/asio/base.hpp	/^class handler_allocator$/;"	c	namespace:websocketpp::transport::asio
handshake_guid	websocketpp/websocketpp/processors/base.hpp	/^static char const handshake_guid[] = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";$/;"	m	namespace:websocketpp::processor::constants
has	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::has(const Name& name, uint32_t nonce) const$/;"	f	class:nfd::DeadNonceList
hasAllowedSchema	tools/nfd-autoreg.cpp	/^  hasAllowedSchema(const FaceUri& uri)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
hasBeenUsedRecently	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::hasBeenUsedRecently() const$/;"	f	class:nfd::face::DatagramTransport
hasCapture	rib/rib-entry.cpp	/^RibEntry::hasCapture() const$/;"	f	class:nfd::rib::RibEntry
hasChildInheritOnFaceId	rib/rib-entry.cpp	/^RibEntry::hasChildInheritOnFaceId(uint64_t faceId) const$/;"	f	class:nfd::rib::RibEntry
hasChildren	daemon/table/name-tree-entry.hpp	/^Entry::hasChildren() const$/;"	f	class:nfd::name_tree::Entry
hasData	daemon/table/cs-entry.hpp	/^  hasData() const$/;"	f	class:nfd::cs::Entry
hasFaceId	rib/rib-entry.cpp	/^RibEntry::hasFaceId(const uint64_t faceId) const$/;"	f	class:nfd::rib::RibEntry
hasInheritedRoute	rib/rib-entry.cpp	/^RibEntry::hasInheritedRoute(const Route& route) const$/;"	f	class:nfd::rib::RibEntry
hasLocalInRecord	daemon/table/pit-entry.cpp	/^Entry::hasLocalInRecord() const$/;"	f	class:nfd::pit::Entry
hasNextHop	daemon/table/fib-entry.cpp	/^Entry::hasNextHop(shared_ptr<Face> face) const$/;"	f	class:nfd::fib::Entry
hasNextHops	daemon/table/fib-entry.hpp	/^Entry::hasNextHops() const$/;"	f	class:nfd::fib::Entry
hasPitEntries	daemon/table/name-tree-entry.hpp	/^Entry::hasPitEntries() const$/;"	f	class:nfd::name_tree::Entry
hasProcess	build/bin/nfd-start	/^hasProcess() {$/;"	f
hasProcess	tools/nfd-start.sh	/^hasProcess() {$/;"	f
hasRoute	rib/rib-entry.cpp	/^RibEntry::hasRoute(const Route& route)$/;"	f	class:nfd::rib::RibEntry
hasStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::hasStrategy(const Name& strategyName, bool isExact) const$/;"	f	class:nfd::StrategyChoice
hasUnexpiredOutRecords	daemon/table/pit-entry.cpp	/^Entry::hasUnexpiredOutRecords() const$/;"	f	class:nfd::pit::Entry
has_permessage_compress	websocketpp/websocketpp/processors/processor.hpp	/^    virtual bool has_permessage_compress() const {$/;"	f	class:websocketpp::processor::processor
has_permessage_deflate	websocketpp/websocketpp/processors/hybi13.hpp	/^    bool has_permessage_deflate() const {$/;"	f	class:websocketpp::processor::hybi13
hdl	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    websocketpp::connection_hdl hdl;$/;"	m	struct:action	file:
header	tests/daemon/fw/strategy-tester.hpp	/^    lp::NackHeader header;$/;"	m	struct:nfd::fw::tests::StrategyTester::SendNackArgs
header	tools/ndn-autoconfig/base-dns.cpp	/^  HEADER header;$/;"	m	union:ndn::tools::autoconfig::BaseDns::QueryAnswer	file:
header_delimiter	websocketpp/websocketpp/http/constants.hpp	/^    static char const header_delimiter[] = "\\r\\n";$/;"	m	namespace:websocketpp::http
header_list	websocketpp/websocketpp/http/parser.hpp	/^typedef std::map<std::string, std::string, utility::ci_less > header_list;$/;"	t	namespace:websocketpp::http::parser
header_separator	websocketpp/websocketpp/http/constants.hpp	/^    static char const header_separator[] = ":";$/;"	m	namespace:websocketpp::http
header_token	websocketpp/websocketpp/http/constants.hpp	/^    static char const header_token[] = {$/;"	m	namespace:websocketpp::http
headers	websocketpp/websocketpp/http/parser.hpp	/^        headers$/;"	e	enum:websocketpp::http::parser::state::value
headers_ready	websocketpp/websocketpp/http/response.hpp	/^    bool headers_ready() const {$/;"	f	class:websocketpp::http::parser::response
helper	websocketpp/websocketpp/connection.hpp	/^    static int const helper[] = {0,7,8,13};$/;"	m	namespace:websocketpp
hexval	websocketpp/websocketpp/common/md5.hpp	/^const char hexval[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};$/;"	m	namespace:websocketpp::md5
html_file_suffix	docs/conf.py	/^html_file_suffix = ".html"$/;"	v
html_static_path	docs/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	docs/conf.py	/^html_theme = 'named_data_theme'$/;"	v
html_theme_path	docs/conf.py	/^html_theme_path = ['.\/']$/;"	v
htmlhelp_basename	docs/conf.py	/^htmlhelp_basename = 'nfd-docs'$/;"	v
http	websocketpp/websocketpp/http/constants.hpp	/^namespace http {$/;"	n	namespace:websocketpp
http	websocketpp/websocketpp/http/impl/parser.hpp	/^namespace http {$/;"	n	namespace:websocketpp
http	websocketpp/websocketpp/http/impl/request.hpp	/^namespace http {$/;"	n	namespace:websocketpp
http	websocketpp/websocketpp/http/impl/response.hpp	/^namespace http {$/;"	n	namespace:websocketpp
http	websocketpp/websocketpp/http/parser.hpp	/^namespace http {$/;"	n	namespace:websocketpp
http	websocketpp/websocketpp/http/request.hpp	/^namespace http {$/;"	n	namespace:websocketpp
http	websocketpp/websocketpp/http/response.hpp	/^namespace http {$/;"	n	namespace:websocketpp
http	websocketpp/websocketpp/logger/levels.hpp	/^    static level const http = 0x1000;$/;"	m	struct:websocketpp::log::alevel
httpServer	tools/nfd-status-http-server.py	/^def httpServer():$/;"	f
http_connection_ended	websocketpp/websocketpp/error.hpp	/^    http_connection_ended,$/;"	e	enum:websocketpp::error::value
http_func	websocketpp/test/connection/connection.cpp	/^void http_func(server* s, websocketpp::connection_hdl hdl) {$/;"	f
http_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(connection_hdl)> http_handler;$/;"	t	namespace:websocketpp
http_parse_error	websocketpp/websocketpp/error.hpp	/^    http_parse_error$/;"	e	enum:websocketpp::error::value
http_version_not_supported	websocketpp/websocketpp/http/constants.hpp	/^            http_version_not_supported = 505,$/;"	e	enum:websocketpp::http::status_code::value
hybi00	websocketpp/websocketpp/processors/hybi00.hpp	/^    explicit hybi00(bool secure, bool p_is_server, msg_manager_ptr manager)$/;"	f	class:websocketpp::processor::hybi00
hybi00	websocketpp/websocketpp/processors/hybi00.hpp	/^class hybi00 : public processor<config> {$/;"	c	namespace:websocketpp::processor
hybi07	websocketpp/websocketpp/processors/hybi07.hpp	/^    explicit hybi07(bool secure, bool p_is_server, msg_manager_ptr manager, rng_type& rng)$/;"	f	class:websocketpp::processor::hybi07
hybi07	websocketpp/websocketpp/processors/hybi07.hpp	/^class hybi07 : public hybi08<config> {$/;"	c	namespace:websocketpp::processor
hybi08	websocketpp/websocketpp/processors/hybi08.hpp	/^    explicit hybi08(bool secure, bool p_is_server, msg_manager_ptr manager, rng_type& rng)$/;"	f	class:websocketpp::processor::hybi08
hybi08	websocketpp/websocketpp/processors/hybi08.hpp	/^class hybi08 : public hybi13<config> {$/;"	c	namespace:websocketpp::processor
hybi13	websocketpp/websocketpp/processors/hybi13.hpp	/^    explicit hybi13(bool secure, bool p_is_server, msg_manager_ptr manager, rng_type& rng)$/;"	f	class:websocketpp::processor::hybi13
hybi13	websocketpp/websocketpp/processors/hybi13.hpp	/^class hybi13 : public processor<config> {$/;"	c	namespace:websocketpp::processor
i	websocketpp/websocketpp/close.hpp	/^    uint16_t i;$/;"	m	union:websocketpp::close::code_converter
i	websocketpp/websocketpp/frame.hpp	/^    uint16_t i;$/;"	m	union:websocketpp::frame::uint16_converter
i	websocketpp/websocketpp/frame.hpp	/^    uint32_t i;$/;"	m	union:websocketpp::frame::uint32_converter
i	websocketpp/websocketpp/frame.hpp	/^    uint64_t i;$/;"	m	union:websocketpp::frame::uint64_converter
if_c	daemon/table/name-tree.cpp	/^typedef boost::mpl::if_c<sizeof(size_t) >= 8, Hash64, Hash32>::type CityHash;$/;"	t	class:nfd::name_tree::boost::mpl	file:
ignoreRibAndLogSections	daemon/nfd.cpp	/^ignoreRibAndLogSections(const std::string& filename, const std::string& sectionName,$/;"	f	namespace:nfd
ignoreUnknownSection	core/config-file.cpp	/^ConfigFile::ignoreUnknownSection(const std::string& filename,$/;"	f	class:nfd::ConfigFile
im_a_teapot	websocketpp/websocketpp/http/constants.hpp	/^            im_a_teapot = 418,$/;"	e	enum:websocketpp::http::status_code::value
in_use_	websocketpp/websocketpp/transport/asio/base.hpp	/^  bool in_use_;$/;"	m	class:websocketpp::transport::asio::handler_allocator
incrementMultiplier	daemon/fw/rtt-estimator.cpp	/^RttEstimator::incrementMultiplier()$/;"	f	class:nfd::RttEstimator
indef_read	websocketpp/test/transport/iostream/connection.cpp	/^    void indef_read() {$/;"	f	struct:stub_con
indef_read_buf	websocketpp/test/transport/iostream/connection.cpp	/^    char * indef_read_buf;$/;"	m	struct:stub_con	file:
indef_read_len	websocketpp/test/transport/iostream/connection.cpp	/^    size_t indef_read_len;$/;"	m	struct:stub_con	file:
indef_read_size	websocketpp/test/transport/iostream/connection.cpp	/^    size_t indef_read_size;$/;"	m	struct:stub_con	file:
indef_read_total	websocketpp/test/transport/iostream/connection.cpp	/^    size_t indef_read_total;$/;"	m	struct:stub_con	file:
index	core/network-interface.hpp	/^  int index;$/;"	m	class:nfd::NetworkInterfaceInfo
info	websocketpp/websocketpp/logger/levels.hpp	/^    static level const info = 0x4;$/;"	m	struct:websocketpp::log::elevel
inheritFrom	daemon/fw/ncc-strategy.cpp	/^NccStrategy::MeasurementsEntryInfo::inheritFrom(const MeasurementsEntryInfo& other)$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
init	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    lib::error_code init() {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
init	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void init(init_handler callback) {$/;"	f	class:websocketpp::transport::asio::connection
init	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    lib::error_code init(transport_con_ptr tcon) {$/;"	f	class:websocketpp::transport::asio::endpoint
init	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    lib::error_code init(socket_con_ptr scon) {$/;"	f	class:websocketpp::transport::asio::basic_socket::endpoint
init	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    lib::error_code init(socket_con_ptr scon) {$/;"	f	class:websocketpp::transport::asio::tls_socket::endpoint
init	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void init(init_handler handler) {$/;"	f	class:websocketpp::transport::debug::connection
init	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    lib::error_code init(transport_con_ptr) {$/;"	f	class:websocketpp::transport::debug::endpoint
init	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void init(init_handler handler) {$/;"	f	class:websocketpp::transport::iostream::connection
init	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    lib::error_code init(transport_con_ptr tcon) {$/;"	f	class:websocketpp::transport::iostream::endpoint
init	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void init(init_handler handler) {$/;"	f	class:websocketpp::transport::stub::connection
init	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    lib::error_code init(transport_con_ptr tcon) {$/;"	f	class:websocketpp::transport::stub::endpoint
init_asio	websocketpp/websocketpp/transport/asio/connection.hpp	/^    lib::error_code init_asio (io_service_ptr io_service) {$/;"	f	class:websocketpp::transport::asio::connection
init_asio	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void init_asio() {$/;"	f	class:websocketpp::transport::asio::endpoint
init_asio	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void init_asio(io_service_ptr ptr) {$/;"	f	class:websocketpp::transport::asio::endpoint
init_asio	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void init_asio(io_service_ptr ptr, lib::error_code & ec) {$/;"	f	class:websocketpp::transport::asio::endpoint
init_asio	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void init_asio(lib::error_code & ec) {$/;"	f	class:websocketpp::transport::asio::endpoint
init_asio	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    lib::error_code init_asio (io_service_ptr service, strand_ptr, bool)$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
init_asio	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    lib::error_code init_asio (io_service_ptr service, strand_ptr strand,$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
init_handler	websocketpp/websocketpp/transport/asio/security/base.hpp	/^typedef lib::function<void(const lib::error_code&)> init_handler;$/;"	t	namespace:websocketpp::transport::asio::socket
init_handler	websocketpp/websocketpp/transport/base/connection.hpp	/^typedef lib::function<void(lib::error_code const &)> init_handler;$/;"	t	namespace:websocketpp::transport
init_logging	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void init_logging(alog_type* a, elog_type* e) {$/;"	f	class:websocketpp::transport::asio::endpoint
init_logging	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    void init_logging(alog_type *, elog_type *) {}$/;"	f	class:websocketpp::transport::debug::endpoint
init_logging	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    void init_logging(alog_type * a, elog_type * e) {$/;"	f	class:websocketpp::transport::iostream::endpoint
init_logging	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    void init_logging(alog_type * a, elog_type * e) {}$/;"	f	class:websocketpp::transport::stub::endpoint
initialize	core/privilege-helper.cpp	/^PrivilegeHelper::initialize(const std::string& userName, const std::string& groupName)$/;"	f	class:nfd::PrivilegeHelper
initialize	daemon/main.cpp	/^  initialize()$/;"	f	class:nfd::NfdRunner
initialize	daemon/nfd.cpp	/^Nfd::initialize()$/;"	f	class:nfd::Nfd
initialize	rib/nrd.cpp	/^Nrd::initialize()$/;"	f	class:nfd::rib::Nrd
initialize	rib/propagated-entry.cpp	/^PropagatedEntry::initialize()$/;"	f	class:nfd::rib::PropagatedEntry
initialize	tests/daemon/face/generic-link-service.t.cpp	/^  initialize(const GenericLinkService::Options& options)$/;"	f	class:nfd::face::tests::GenericLinkServiceFixture
initializeLogging	daemon/nfd.cpp	/^Nfd::initializeLogging()$/;"	f	class:nfd::Nfd
initializeLogging	rib/nrd.cpp	/^Nrd::initializeLogging()$/;"	f	class:nfd::rib::Nrd
initializeManagement	daemon/nfd.cpp	/^Nfd::initializeManagement()$/;"	f	class:nfd::Nfd
initialize_processor	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::initialize_processor() {$/;"	f	class:websocketpp::connection
innerHash	websocketpp/websocketpp/sha1/sha1.hpp	/^inline void innerHash(unsigned int * result, unsigned int * w)$/;"	f	namespace:websocketpp::sha1::__anon2
insert	daemon/table/cs.cpp	/^Cs::insert(const Data& data, bool isUnsolicited)$/;"	f	class:nfd::cs::Cs
insert	daemon/table/fib.cpp	/^Fib::insert(const Name& prefix)$/;"	f	class:nfd::Fib
insert	daemon/table/name-tree.cpp	/^NameTree::insert(const Name& prefix)$/;"	f	class:nfd::NameTree
insert	daemon/table/pit.hpp	/^Pit::insert(const Interest& interest)$/;"	f	class:nfd::Pit
insert	daemon/table/strategy-choice.cpp	/^StrategyChoice::insert(const Name& prefix, const Name& strategyName)$/;"	f	class:nfd::StrategyChoice
insert	rib/rib.cpp	/^Rib::insert(const Name& prefix, const Route& route)$/;"	f	class:nfd::rib::Rib
insert	tests/daemon/table/cs.t.cpp	/^  insert(uint32_t id, const Name& name)$/;"	f	class:nfd::cs::tests::FindFixture
insertAb1Ab2Ac1Ac2	tests/daemon/table/name-tree.t.cpp	/^  insertAb1Ab2Ac1Ac2()$/;"	f	class:nfd::tests::EnumerationFixture
insertAbAc	tests/daemon/table/name-tree.t.cpp	/^  insertAbAc()$/;"	f	class:nfd::tests::EnumerationFixture
insertDeadNonceList	daemon/fw/forwarder.cpp	/^Forwarder::insertDeadNonceList(pit::Entry& pitEntry, bool isSatisfied,$/;"	f	class:nfd::Forwarder
insertEntryToRib	tests/rib/auto-prefix-propagator.t.cpp	/^  insertEntryToRib(const Name& name, const uint64_t& faceId = 0)$/;"	f	class:nfd::rib::tests::AutoPrefixPropagatorFixture
insertNonceToDnl	daemon/fw/forwarder.cpp	/^insertNonceToDnl(DeadNonceList& dnl, const pit::Entry& pitEntry,$/;"	f	namespace:nfd
insertOrUpdateInRecord	daemon/table/pit-entry.cpp	/^Entry::insertOrUpdateInRecord(shared_ptr<Face> face, const Interest& interest)$/;"	f	class:nfd::pit::Entry
insertOrUpdateOutRecord	daemon/table/pit-entry.cpp	/^Entry::insertOrUpdateOutRecord(shared_ptr<Face> face, const Interest& interest)$/;"	f	class:nfd::pit::Entry
insertPitEntry	daemon/table/name-tree-entry.cpp	/^Entry::insertPitEntry(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::name_tree::Entry
insertRoute	rib/rib-entry.cpp	/^RibEntry::insertRoute(const Route& route)$/;"	f	class:nfd::rib::RibEntry
insertRoute	tests/rib/fib-updates-common.hpp	/^  insertRoute(const Name& name, uint64_t faceId, uint64_t origin, uint64_t cost, uint64_t flags)$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
insertToQueue	daemon/table/cs-policy-lru.cpp	/^LruPolicy::insertToQueue(iterator i, bool isNewEntry)$/;"	f	class:nfd::cs::lru::LruPolicy
install	daemon/table/strategy-choice.cpp	/^StrategyChoice::install(shared_ptr<Strategy> strategy)$/;"	f	class:nfd::StrategyChoice
installStrategies	daemon/fw/strategy-registry.cpp	/^installStrategies(Forwarder& forwarder)$/;"	f	namespace:nfd::fw
installStrategy	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^  installStrategy(const Name& strategy)$/;"	f	class:nfd::tests::StrategyChoiceManagerFixture
int_generator	websocketpp/websocketpp/random/none.hpp	/^        int_generator() {}$/;"	f	class:websocketpp::random::none::int_generator
int_generator	websocketpp/websocketpp/random/none.hpp	/^class int_generator {$/;"	c	namespace:websocketpp::random::none
int_generator	websocketpp/websocketpp/random/random_device.hpp	/^        int_generator() {}$/;"	f	class:websocketpp::random::random_device::int_generator
int_generator	websocketpp/websocketpp/random/random_device.hpp	/^class int_generator {$/;"	c	namespace:websocketpp::random::random_device
interestOutFace	tests/daemon/fw/dummy-strategy.hpp	/^  shared_ptr<Face> interestOutFace;$/;"	m	class:nfd::tests::DummyStrategy
internal_endpoint_error	websocketpp/websocketpp/close.hpp	/^    static value const internal_endpoint_error = 1011;$/;"	m	namespace:websocketpp::close::status
internal_server_error	websocketpp/websocketpp/http/constants.hpp	/^            internal_server_error = 500,$/;"	e	enum:websocketpp::http::status_code::value
internal_state	websocketpp/websocketpp/connection.hpp	/^namespace internal_state {$/;"	n	namespace:websocketpp::session
interrupt	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::interrupt() {$/;"	f	class:websocketpp::connection
interrupt	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::interrupt(connection_hdl hdl) {$/;"	f	class:websocketpp::endpoint
interrupt	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::interrupt(connection_hdl hdl, lib::error_code & ec)$/;"	f	class:websocketpp::endpoint
interrupt	websocketpp/websocketpp/transport/asio/connection.hpp	/^    lib::error_code interrupt(interrupt_handler handler) {$/;"	f	class:websocketpp::transport::asio::connection
interrupt_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(connection_hdl)> interrupt_handler;$/;"	t	namespace:websocketpp
interrupt_handler	websocketpp/websocketpp/transport/base/connection.hpp	/^typedef lib::function<void()> interrupt_handler;$/;"	t	namespace:websocketpp::transport
invalid	websocketpp/websocketpp/close.hpp	/^    inline bool invalid(value code) {$/;"	f	namespace:websocketpp::close::status
invalid	websocketpp/websocketpp/frame.hpp	/^    inline bool invalid(value v) {$/;"	f	namespace:websocketpp::frame::opcode
invalid_arguments	websocketpp/websocketpp/processors/base.hpp	/^    invalid_arguments,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_attribute_value	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    invalid_attribute_value,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
invalid_attributes	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    invalid_attributes,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
invalid_close_code	websocketpp/websocketpp/error.hpp	/^    invalid_close_code,$/;"	e	enum:websocketpp::error::value
invalid_close_code	websocketpp/websocketpp/processors/base.hpp	/^    invalid_close_code,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_continuation	websocketpp/websocketpp/processors/base.hpp	/^    invalid_continuation,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_high	websocketpp/websocketpp/close.hpp	/^    static value const invalid_high = 5000;$/;"	m	namespace:websocketpp::close::status
invalid_host_service	websocketpp/websocketpp/transport/asio/base.hpp	/^    invalid_host_service$/;"	e	enum:websocketpp::transport::asio::error::value
invalid_http_method	websocketpp/websocketpp/processors/base.hpp	/^    invalid_http_method,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_http_status	websocketpp/websocketpp/processors/base.hpp	/^    invalid_http_status,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_http_version	websocketpp/websocketpp/processors/base.hpp	/^    invalid_http_version,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_low	websocketpp/websocketpp/close.hpp	/^    static value const invalid_low = 999;$/;"	m	namespace:websocketpp::close::status
invalid_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    invalid_max_window_bits,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
invalid_mode	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    invalid_mode,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
invalid_num_bytes	websocketpp/websocketpp/transport/asio/base.hpp	/^    invalid_num_bytes,$/;"	e	enum:websocketpp::transport::asio::error::value
invalid_num_bytes	websocketpp/websocketpp/transport/base/connection.hpp	/^    invalid_num_bytes,$/;"	e	enum:websocketpp::transport::error::value
invalid_num_bytes	websocketpp/websocketpp/transport/debug/base.hpp	/^    invalid_num_bytes,$/;"	e	enum:websocketpp::transport::debug::error::value
invalid_num_bytes	websocketpp/websocketpp/transport/iostream/base.hpp	/^    invalid_num_bytes,$/;"	e	enum:websocketpp::transport::iostream::error::value
invalid_opcode	websocketpp/websocketpp/processors/base.hpp	/^    invalid_opcode,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_payload	websocketpp/websocketpp/close.hpp	/^    static value const invalid_payload = 1007;$/;"	m	namespace:websocketpp::close::status
invalid_payload	websocketpp/websocketpp/processors/base.hpp	/^    invalid_payload,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_port	websocketpp/websocketpp/error.hpp	/^    invalid_port,$/;"	e	enum:websocketpp::error::value
invalid_rsv_bit	websocketpp/websocketpp/processors/base.hpp	/^    invalid_rsv_bit,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_state	websocketpp/websocketpp/error.hpp	/^    invalid_state,$/;"	e	enum:websocketpp::error::value
invalid_state	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        invalid_state,$/;"	e	enum:websocketpp::transport::asio::socket::error::value
invalid_subprotocol	websocketpp/websocketpp/error.hpp	/^    invalid_subprotocol,$/;"	e	enum:websocketpp::error::value
invalid_subprotocol_data	websocketpp/websocketpp/close.hpp	/^    static value const invalid_subprotocol_data = 3001;$/;"	m	namespace:websocketpp::close::status
invalid_tls_context	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        invalid_tls_context,$/;"	e	enum:websocketpp::transport::asio::socket::error::value
invalid_uri	websocketpp/websocketpp/error.hpp	/^    invalid_uri,$/;"	e	enum:websocketpp::error::value
invalid_utf8	websocketpp/websocketpp/error.hpp	/^    invalid_utf8,$/;"	e	enum:websocketpp::error::value
invalid_utf8	websocketpp/websocketpp/processors/base.hpp	/^    invalid_utf8,$/;"	e	enum:websocketpp::processor::error::processor_errors
invalid_version	websocketpp/websocketpp/error.hpp	/^    invalid_version,$/;"	e	enum:websocketpp::error::value
io_service_ptr	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef boost::asio::io_service* io_service_ptr;$/;"	t	class:websocketpp::transport::asio::connection
io_service_ptr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef boost::asio::io_service* io_service_ptr;$/;"	t	class:websocketpp::transport::asio::endpoint
io_service_ptr	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef boost::asio::io_service* io_service_ptr;$/;"	t	class:websocketpp::transport::asio::basic_socket::connection
io_service_ptr	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef boost::asio::io_service* io_service_ptr;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
iostream	websocketpp/websocketpp/transport/iostream/base.hpp	/^namespace iostream {$/;"	n	namespace:websocketpp::transport
iostream	websocketpp/websocketpp/transport/iostream/connection.hpp	/^namespace iostream {$/;"	n	namespace:websocketpp::transport
iostream	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^namespace iostream {$/;"	n	namespace:websocketpp::transport
iostream_client	websocketpp/test/transport/integration.cpp	/^typedef websocketpp::client<websocketpp::config::core_client> iostream_client;$/;"	t	file:
iostream_con	websocketpp/test/transport/iostream/connection.cpp	/^typedef websocketpp::transport::iostream::connection<config> iostream_con;$/;"	t	file:
iostream_server	websocketpp/test/transport/integration.cpp	/^typedef websocketpp::server<websocketpp::config::core> iostream_server;$/;"	t	file:
ipv4Addresses	core/network-interface.hpp	/^  std::vector<boost::asio::ip::address_v4> ipv4Addresses;$/;"	m	class:nfd::NetworkInterfaceInfo
ipv6Addresses	core/network-interface.hpp	/^  std::vector<boost::asio::ip::address_v6> ipv6Addresses;$/;"	m	class:nfd::NetworkInterfaceInfo
isBlacklisted	tools/nfd-autoreg.cpp	/^  isBlacklisted(const boost::asio::ip::address& address)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
isBroadcastCapable	core/network-interface.hpp	/^NetworkInterfaceInfo::isBroadcastCapable() const$/;"	f	class:nfd::NetworkInterfaceInfo
isCapture	rib/route.hpp	/^  isCapture() const$/;"	f	class:nfd::rib::Route
isChildInherit	rib/route.hpp	/^  isChildInherit() const$/;"	f	class:nfd::rib::Route
isClosed	tests/daemon/face/dummy-transport.hpp	/^  bool isClosed;$/;"	m	class:nfd::face::tests::DummyTransport
isComplete	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessage::isComplete() const$/;"	f	class:nfd::ndnlp::PartialMessage
isDataReceived	tools/ndn-tlv-peek.cpp	/^  isDataReceived() const$/;"	f	class:ndntlvpeek::NdnTlvPeek
isDataSent	tools/ndn-tlv-poke.cpp	/^  isDataSent() const$/;"	f	class:ndntlvpoke::NdnTlvPoke
isEmpty	daemon/table/name-tree-entry.cpp	/^Entry::isEmpty() const$/;"	f	class:nfd::name_tree::Entry
isEmptyFilteredLocalControlHeader	daemon/face/local-face.hpp	/^LocalFace::isEmptyFilteredLocalControlHeader(const ndn::nfd::LocalControlHeader& header) const$/;"	f	class:nfd::LocalFace
isEnabled	core/logger.hpp	/^  isEnabled(LogLevel level) const$/;"	f	class:nfd::Logger
isInProducerRegion	daemon/table/network-region-table.cpp	/^NetworkRegionTable::isInProducerRegion(const Link& link) const$/;"	f	class:nfd::NetworkRegionTable
isListening	daemon/face/tcp-channel.hpp	/^TcpChannel::isListening() const$/;"	f	class:nfd::TcpChannel
isListening	daemon/face/udp-channel.hpp	/^UdpChannel::isListening() const$/;"	f	class:nfd::UdpChannel
isListening	daemon/face/unix-stream-channel.hpp	/^UnixStreamChannel::isListening() const$/;"	f	class:nfd::UnixStreamChannel
isListening	daemon/face/websocket-channel.hpp	/^WebSocketChannel::isListening() const$/;"	f	class:nfd::WebSocketChannel
isLocal	daemon/face/face.hpp	/^Face::isLocal() const$/;"	f	class:nfd::Face
isLocalControlHeaderEnabled	daemon/face/local-face.hpp	/^LocalFace::isLocalControlHeaderEnabled() const$/;"	f	class:nfd::LocalFace
isLocalControlHeaderEnabled	daemon/face/local-face.hpp	/^LocalFace::isLocalControlHeaderEnabled(LocalControlFeature feature) const$/;"	f	class:nfd::LocalFace
isLocalEndpointOnDifferentGroup	tests/daemon/face/udp.t.cpp	/^  isLocalEndpointOnDifferentGroup(const UdpFactory::Error& e) {$/;"	f	class:nfd::tests::FactoryErrorCheck
isLoopback	core/network-interface.hpp	/^NetworkInterfaceInfo::isLoopback() const$/;"	f	class:nfd::NetworkInterfaceInfo
isMultiAccess	daemon/face/face.hpp	/^Face::isMultiAccess() const$/;"	f	class:nfd::Face
isMulticastCapable	core/network-interface.hpp	/^NetworkInterfaceInfo::isMulticastCapable() const$/;"	f	class:nfd::NetworkInterfaceInfo
isNew	rib/propagated-entry.cpp	/^PropagatedEntry::isNew() const$/;"	f	class:nfd::rib::PropagatedEntry
isNotMulticastAddress	tests/daemon/face/udp.t.cpp	/^  isNotMulticastAddress(const UdpFactory::Error& e) {$/;"	f	class:nfd::tests::FactoryErrorCheck
isPropagateFail	rib/propagated-entry.cpp	/^PropagatedEntry::isPropagateFail() const$/;"	f	class:nfd::rib::PropagatedEntry
isPropagated	rib/propagated-entry.cpp	/^PropagatedEntry::isPropagated() const$/;"	f	class:nfd::rib::PropagatedEntry
isPropagating	rib/propagated-entry.cpp	/^PropagatedEntry::isPropagating() const$/;"	f	class:nfd::rib::PropagatedEntry
isQuery	daemon/table/cs-entry-impl.cpp	/^EntryImpl::isQuery() const$/;"	f	class:nfd::cs::EntryImpl
isStale	daemon/table/cs-entry.cpp	/^Entry::isStale() const$/;"	f	class:nfd::cs::Entry
isTheSameMulticastEndpoint	tests/daemon/face/udp.t.cpp	/^  isTheSameMulticastEndpoint(const UdpFactory::Error& e) {$/;"	f	class:nfd::tests::FactoryErrorCheck
isTheSameUnicastEndpoint	tests/daemon/face/udp.t.cpp	/^  isTheSameUnicastEndpoint(const UdpFactory::Error& e) {$/;"	f	class:nfd::tests::FactoryErrorCheck
isUnsolicited	daemon/table/cs-entry.hpp	/^  isUnsolicited() const$/;"	f	class:nfd::cs::Entry
isUp	core/network-interface.hpp	/^NetworkInterfaceInfo::isUp() const$/;"	f	class:nfd::NetworkInterfaceInfo
isUp	daemon/face/face.cpp	/^Face::isUp() const$/;"	f	class:nfd::Face
isUp	daemon/face/lp-face-wrapper.hpp	/^LpFaceWrapper::isUp() const$/;"	f	class:nfd::face::LpFaceWrapper
isValid	daemon/mgmt/face-manager.hpp	/^    bool isValid;$/;"	m	struct:nfd::FaceManager::ExtractLocalControlParametersResult
isValid	rib/auto-prefix-propagator.hpp	/^    bool isValid;$/;"	m	struct:nfd::rib::AutoPrefixPropagator::PrefixPropagationParameters
isWhitelisted	tools/nfd-autoreg.cpp	/^  isWhitelisted(const boost::asio::ip::address& address)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
is_base64	websocketpp/websocketpp/base64/base64.hpp	/^static inline bool is_base64(unsigned char c) {$/;"	f	namespace:websocketpp
is_control	websocketpp/websocketpp/frame.hpp	/^    inline bool is_control(value v) {$/;"	f	namespace:websocketpp::frame::opcode
is_enabled	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^    bool is_enabled() const {$/;"	f	class:websocketpp::extensions::permessage_deflate::disabled
is_enabled	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    bool is_enabled() const {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
is_error_code_enum	websocketpp/websocketpp/error.hpp	/^template<> struct is_error_code_enum<websocketpp::error::value>$/;"	s
is_error_code_enum	websocketpp/websocketpp/extensions/extension.hpp	/^template<> struct is_error_code_enum$/;"	s
is_error_code_enum	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^template<> struct is_error_code_enum$/;"	s
is_error_code_enum	websocketpp/websocketpp/processors/base.hpp	/^template<> struct is_error_code_enum<websocketpp::processor::error::processor_errors>$/;"	s
is_error_code_enum	websocketpp/websocketpp/transport/asio/base.hpp	/^template<> struct is_error_code_enum<websocketpp::transport::asio::error::value>$/;"	s
is_error_code_enum	websocketpp/websocketpp/transport/base/connection.hpp	/^template<> struct is_error_code_enum<websocketpp::transport::error::value>$/;"	s
is_error_code_enum	websocketpp/websocketpp/transport/debug/base.hpp	/^template<> struct is_error_code_enum<websocketpp::transport::debug::error::value>$/;"	s
is_error_code_enum	websocketpp/websocketpp/transport/iostream/base.hpp	/^template<> struct is_error_code_enum<websocketpp::transport::iostream::error::value>$/;"	s
is_error_code_enum	websocketpp/websocketpp/transport/stub/base.hpp	/^template<> struct is_error_code_enum<websocketpp::transport::stub::error::value>$/;"	s
is_implemented	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^    bool is_implemented() const {$/;"	f	class:websocketpp::extensions::permessage_deflate::disabled
is_implemented	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    bool is_implemented() const {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
is_listening	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    bool is_listening() const {$/;"	f	class:websocketpp::transport::asio::endpoint
is_little_endian	websocketpp/websocketpp/common/network.hpp	/^inline bool is_little_endian() {$/;"	f	namespace:websocketpp::lib::net
is_not_token_char	websocketpp/websocketpp/http/constants.hpp	/^    inline bool is_not_token_char(unsigned char c) {$/;"	f	namespace:websocketpp::http
is_not_whitespace_char	websocketpp/websocketpp/http/constants.hpp	/^    inline bool is_not_whitespace_char(unsigned char c) {$/;"	f	namespace:websocketpp::http
is_secure	websocketpp/websocketpp/transport/asio/connection.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::asio::connection
is_secure	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::asio::endpoint
is_secure	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
is_secure	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::asio::basic_socket::endpoint
is_secure	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
is_secure	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::asio::tls_socket::endpoint
is_secure	websocketpp/websocketpp/transport/debug/connection.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::debug::connection
is_secure	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::debug::endpoint
is_secure	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::iostream::connection
is_secure	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::iostream::endpoint
is_secure	websocketpp/websocketpp/transport/stub/connection.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::stub::connection
is_secure	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    bool is_secure() const {$/;"	f	class:websocketpp::transport::stub::endpoint
is_server	websocketpp/test/connection/connection.cpp	/^    bool is_server() const {$/;"	f	struct:connection_extension
is_server	websocketpp/test/endpoint/endpoint.cpp	/^    bool is_server() const {$/;"	f	struct:endpoint_extension
is_server	websocketpp/websocketpp/connection.hpp	/^    bool is_server() const {$/;"	f	class:websocketpp::connection
is_server	websocketpp/websocketpp/endpoint.hpp	/^    bool is_server() const {$/;"	f	class:websocketpp::endpoint
is_token_char	websocketpp/websocketpp/http/constants.hpp	/^    inline bool is_token_char(unsigned char c) {$/;"	f	namespace:websocketpp::http
is_websocket_handshake	websocketpp/websocketpp/processors/processor.hpp	/^bool is_websocket_handshake(request_type& r) {$/;"	f	namespace:websocketpp::processor
is_whitespace_char	websocketpp/websocketpp/http/constants.hpp	/^    inline bool is_whitespace_char(unsigned char c) {$/;"	f	namespace:websocketpp::http
istate_type	websocketpp/websocketpp/connection.hpp	/^    typedef session::internal_state::value istate_type;$/;"	t	class:websocketpp::connection
istream_buffer	websocketpp/websocketpp/http/constants.hpp	/^    size_t const istream_buffer = 512;$/;"	m	namespace:websocketpp::http
iterator	daemon/table/cs-internal.hpp	/^typedef Table::const_iterator iterator;$/;"	t	namespace:nfd::cs
iterator	rib/rib-entry.hpp	/^  typedef RouteList::iterator iterator;$/;"	t	class:nfd::rib::RibEntry
join	waf	/^join = os.path.join$/;"	v
joinMulticastGroup	daemon/face/ethernet-face.cpp	/^EthernetFace::joinMulticastGroup()$/;"	f	class:nfd::EthernetFace
k0	core/city-hash.cpp	/^static const uint64 k0 = 0xc3a5c85c97cb3127ULL;$/;"	v	file:
k1	core/city-hash.cpp	/^static const uint64 k1 = 0xb492b66fbe98f273ULL;$/;"	v	file:
k2	core/city-hash.cpp	/^static const uint64 k2 = 0x9ae16a3b2f90404fULL;$/;"	v	file:
keyChain	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  ndn::KeyChain keyChain;$/;"	m	class:nfd::tests::FaceManagerFixture	file:
keyChain	tests/rib/fib-updates-common.hpp	/^  ndn::KeyChain keyChain;$/;"	m	class:nfd::rib::tests::FibUpdatesFixture
keyChain	tests/rib/rib-manager.t.cpp	/^  ndn::KeyChain keyChain;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
laptopA	tests/daemon/fw/access-strategy.t.cpp	/^  TopologyNode laptopA;$/;"	m	class:nfd::fw::tests::TwoLaptopsFixture	file:
laptopB	tests/daemon/fw/access-strategy.t.cpp	/^  TopologyNode laptopB;$/;"	m	class:nfd::fw::tests::TwoLaptopsFixture	file:
largest	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    largest,$/;"	e	enum:websocketpp::extensions::permessage_deflate::mode::value
lastNexthop	daemon/fw/access-strategy.hpp	/^    FaceId lastNexthop;$/;"	m	class:nfd::fw::AccessStrategy::MtInfo
lastNonce	tests/daemon/table/dead-nonce-list.t.cpp	/^  uint32_t lastNonce;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
latex_documents	docs/conf.py	/^latex_documents = [$/;"	v
latex_elements	docs/conf.py	/^latex_elements = {$/;"	v
len	websocketpp/websocketpp/transport/base/connection.hpp	/^    size_t len;$/;"	m	struct:websocketpp::transport::buffer
length_required	websocketpp/websocketpp/http/constants.hpp	/^            length_required = 411,$/;"	e	enum:websocketpp::http::status_code::value
level	websocketpp/websocketpp/logger/levels.hpp	/^typedef uint32_t level;$/;"	t	namespace:websocketpp::log
lib	websocketpp/websocketpp/common/chrono.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/functional.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/memory.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/network.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/random.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/regex.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/system_error.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/thread.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
lib	websocketpp/websocketpp/common/time.hpp	/^namespace lib {$/;"	n	namespace:websocketpp
library	websocketpp/websocketpp/logger/levels.hpp	/^    static level const library = 0x2;$/;"	m	struct:websocketpp::log::elevel
limitedIo	tests/daemon/face/tcp.t.cpp	/^  LimitedIo limitedIo;$/;"	m	class:nfd::tests::EndToEndFixture	file:
limitedIo	tests/daemon/face/tcp.t.cpp	/^  LimitedIo limitedIo;$/;"	m	class:nfd::tests::FaceCreateTimeoutFixture	file:
limitedIo	tests/daemon/face/tcp.t.cpp	/^  LimitedIo limitedIo;$/;"	m	class:nfd::tests::SimpleEndToEndFixture	file:
limitedIo	tests/daemon/face/unix-stream.t.cpp	/^  LimitedIo limitedIo;$/;"	m	class:nfd::tests::EndToEndFixture	file:
limitedIo	tests/daemon/face/websocket.t.cpp	/^  LimitedIo limitedIo;$/;"	m	class:nfd::tests::EndToEndFixture	file:
limits	websocketpp/websocketpp/frame.hpp	/^namespace limits {$/;"	n	namespace:websocketpp::frame
linkA	tests/daemon/fw/access-strategy.t.cpp	/^  shared_ptr<TopologyLink> linkA;$/;"	m	class:nfd::fw::tests::TwoLaptopsFixture	file:
linkB	tests/daemon/fw/access-strategy.t.cpp	/^  shared_ptr<TopologyLink> linkB;$/;"	m	class:nfd::fw::tests::TwoLaptopsFixture	file:
listChannels	daemon/mgmt/face-manager.cpp	/^FaceManager::listChannels(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FaceManager
listChoices	daemon/mgmt/strategy-choice-manager.cpp	/^StrategyChoiceManager::listChoices(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::StrategyChoiceManager
listEntries	daemon/mgmt/fib-manager.cpp	/^FibManager::listEntries(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FibManager
listEntries	rib/rib-manager.cpp	/^RibManager::listEntries(const Interest& request)$/;"	f	class:nfd::rib::RibManager
listFaces	daemon/mgmt/face-manager.cpp	/^FaceManager::listFaces(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FaceManager
listNetworkInterfaces	core/network-interface.cpp	/^listNetworkInterfaces()$/;"	f	namespace:nfd
listStatus	daemon/mgmt/forwarder-status-manager.cpp	/^ForwarderStatusManager::listStatus(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::ForwarderStatusManager
listen	daemon/face/tcp-channel.cpp	/^TcpChannel::listen(const FaceCreatedCallback& onFaceCreated,$/;"	f	class:nfd::TcpChannel
listen	daemon/face/udp-channel.cpp	/^UdpChannel::listen(const FaceCreatedCallback& onFaceCreated,$/;"	f	class:nfd::UdpChannel
listen	daemon/face/unix-stream-channel.cpp	/^UnixStreamChannel::listen(const FaceCreatedCallback& onFaceCreated,$/;"	f	class:nfd::UnixStreamChannel
listen	daemon/face/websocket-channel.cpp	/^WebSocketChannel::listen(const FaceCreatedCallback& onFaceCreated)$/;"	f	class:nfd::WebSocketChannel
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(InternetProtocol const & internet_protocol, uint16_t port)$/;"	f	class:websocketpp::transport::asio::endpoint
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(InternetProtocol const & internet_protocol, uint16_t port,$/;"	f	class:websocketpp::transport::asio::endpoint
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(boost::asio::ip::tcp::endpoint const & ep) {$/;"	f	class:websocketpp::transport::asio::endpoint
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(boost::asio::ip::tcp::endpoint const & ep, lib::error_code & ec)$/;"	f	class:websocketpp::transport::asio::endpoint
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(std::string const & host, std::string const & service)$/;"	f	class:websocketpp::transport::asio::endpoint
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(std::string const & host, std::string const & service,$/;"	f	class:websocketpp::transport::asio::endpoint
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(uint16_t port) {$/;"	f	class:websocketpp::transport::asio::endpoint
listen	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void listen(uint16_t port, lib::error_code & ec) {$/;"	f	class:websocketpp::transport::asio::endpoint
loadConfig	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::loadConfig(const ConfigSection& configSection)$/;"	f	class:nfd::rib::AutoPrefixPropagator
localtime	websocketpp/websocketpp/common/time.hpp	/^inline std::tm localtime(std::time_t const & time) {$/;"	f	namespace:websocketpp::lib
log	websocketpp/websocketpp/logger/basic.hpp	/^namespace log {$/;"	n	namespace:websocketpp
log	websocketpp/websocketpp/logger/levels.hpp	/^namespace log {$/;"	n	namespace:websocketpp
log	websocketpp/websocketpp/logger/stub.hpp	/^namespace log {$/;"	n	namespace:websocketpp
log	websocketpp/websocketpp/logger/syslog.hpp	/^namespace log {$/;"	n	namespace:websocketpp
log_close_result	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::log_close_result()$/;"	f	class:websocketpp::connection
log_err	websocketpp/websocketpp/connection.hpp	/^    void log_err(log::level l, char const * msg, error_type const & ec) {$/;"	f	class:websocketpp::connection
log_err	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void log_err(log::level l, const char * msg, const error_type & ec) {$/;"	f	class:websocketpp::transport::asio::connection
log_err	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void log_err(log::level l, char const * msg, error_type const & ec) {$/;"	f	class:websocketpp::transport::asio::endpoint
log_fail_result	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::log_fail_result()$/;"	f	class:websocketpp::connection
log_http_result	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::log_http_result() {$/;"	f	class:websocketpp::connection
log_message	tools/nfd-status-http-server.py	/^    def log_message(self, format, *args):$/;"	m	class:StatusHandler
log_open_result	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::log_open_result()$/;"	f	class:websocketpp::connection
lookup	daemon/table/name-tree.cpp	/^NameTree::lookup(const Name& prefix)$/;"	f	class:nfd::NameTree
lpFace	daemon/mgmt/face-manager.hpp	/^    face::LpFace* lpFace;$/;"	m	struct:nfd::FaceManager::ExtractLocalControlParametersResult
lru	daemon/table/cs-policy-lru.cpp	/^namespace lru {$/;"	n	namespace:nfd::cs	file:
lru	daemon/table/cs-policy-lru.hpp	/^namespace lru {$/;"	n	namespace:nfd::cs
m_acceptSocket	daemon/face/tcp-channel.hpp	/^  boost::asio::ip::tcp::socket m_acceptSocket;$/;"	m	class:nfd::TcpChannel
m_acceptor	daemon/face/tcp-channel.hpp	/^  boost::asio::ip::tcp::acceptor m_acceptor;$/;"	m	class:nfd::TcpChannel
m_acceptor	daemon/face/unix-stream-channel.hpp	/^  boost::asio::local::stream_protocol::acceptor m_acceptor;$/;"	m	class:nfd::UnixStreamChannel
m_acceptor	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    acceptor_ptr        m_acceptor;$/;"	m	class:websocketpp::transport::asio::endpoint
m_action	rib/rib-update.hpp	/^  Action m_action;$/;"	m	class:nfd::rib::RibUpdate
m_action_cond	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    condition_variable m_action_cond;$/;"	m	class:broadcast_server	file:
m_action_lock	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    mutex m_action_lock;$/;"	m	class:broadcast_server	file:
m_actions	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    std::queue<action> m_actions;$/;"	m	class:broadcast_server	file:
m_activeFaceFetchEvent	rib/rib-manager.hpp	/^  scheduler::EventId m_activeFaceFetchEvent;$/;"	m	class:nfd::rib::RibManager
m_actualMarkCounts	daemon/table/dead-nonce-list.hpp	/^  std::multiset<size_t> m_actualMarkCounts;$/;"	m	class:nfd::DeadNonceList
m_adjustCapacityEvent	daemon/table/dead-nonce-list.hpp	/^  scheduler::EventId m_adjustCapacityEvent;$/;"	m	class:nfd::DeadNonceList
m_adjustCapacityInterval	daemon/table/dead-nonce-list.hpp	/^  time::nanoseconds m_adjustCapacityInterval;$/;"	m	class:nfd::DeadNonceList
m_afterEraseConnection	rib/auto-prefix-propagator.hpp	/^  ndn::util::signal::ScopedConnection m_afterEraseConnection;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_afterInsertConnection	rib/auto-prefix-propagator.hpp	/^  ndn::util::signal::ScopedConnection m_afterInsertConnection;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_allFacesPrefixes	tools/nfd-autoreg.cpp	/^  std::vector<ndn::Name> m_allFacesPrefixes;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_allowCreate	tools/nfdc.hpp	/^    bool m_allowCreate;$/;"	m	class:nfdc::Nfdc::FaceIdFetcher
m_alog	websocketpp/websocketpp/connection.hpp	/^    alog_type& m_alog;$/;"	m	class:websocketpp::connection
m_alog	websocketpp/websocketpp/endpoint.hpp	/^    alog_type m_alog;$/;"	m	class:websocketpp::endpoint
m_alog	websocketpp/websocketpp/transport/asio/connection.hpp	/^    alog_type& m_alog;$/;"	m	class:websocketpp::transport::asio::connection
m_alog	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    alog_type* m_alog;$/;"	m	class:websocketpp::transport::asio::endpoint
m_alog	websocketpp/websocketpp/transport/debug/connection.hpp	/^    alog_type &     m_alog;$/;"	m	class:websocketpp::transport::debug::connection
m_alog	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    alog_type &     m_alog;$/;"	m	class:websocketpp::transport::iostream::connection
m_alog	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    alog_type *     m_alog;$/;"	m	class:websocketpp::transport::iostream::endpoint
m_alog	websocketpp/websocketpp/transport/stub/connection.hpp	/^    alog_type & m_alog;$/;"	m	class:websocketpp::transport::stub::connection
m_appLinks	tests/daemon/fw/topology-tester.hpp	/^  std::vector<shared_ptr<TopologyAppLink>> m_appLinks;$/;"	m	class:nfd::fw::tests::TopologyTester
m_areTablesConfigured	daemon/mgmt/tables-config-section.hpp	/^  bool m_areTablesConfigured;$/;"	m	class:nfd::TablesConfigSection
m_async_read_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    async_read_handler  m_async_read_handler;$/;"	m	class:websocketpp::transport::asio::connection
m_async_write_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    async_write_handler m_async_write_handler;$/;"	m	class:websocketpp::transport::asio::connection
m_autoregPrefixes	tools/nfd-autoreg.cpp	/^  std::vector<ndn::Name> m_autoregPrefixes;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_baseRetryWait	rib/auto-prefix-propagator.hpp	/^  time::seconds m_baseRetryWait;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_basic_header	websocketpp/websocketpp/processors/hybi13.hpp	/^    frame::basic_header m_basic_header;$/;"	m	class:websocketpp::processor::hybi13
m_batchFaceId	rib/fib-updater.hpp	/^  uint64_t m_batchFaceId;$/;"	m	class:nfd::rib::FibUpdater
m_beforeEvictConnection	daemon/table/cs.hpp	/^  ndn::util::signal::ScopedConnection m_beforeEvictConnection;$/;"	m	class:nfd::cs::Cs
m_blackList	tools/nfd-autoreg.cpp	/^  std::vector<Network> m_blackList;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_body	websocketpp/websocketpp/http/constants.hpp	/^        std::string         m_body;$/;"	m	class:websocketpp::http::exception
m_body	websocketpp/websocketpp/http/parser.hpp	/^    std::string             m_body;$/;"	m	class:websocketpp::http::parser::parser
m_body_bytes_max	websocketpp/websocketpp/http/parser.hpp	/^    size_t                  m_body_bytes_max;$/;"	m	class:websocketpp::http::parser::parser
m_body_bytes_needed	websocketpp/websocketpp/http/parser.hpp	/^    size_t                  m_body_bytes_needed;$/;"	m	class:websocketpp::http::parser::parser
m_body_encoding	websocketpp/websocketpp/http/parser.hpp	/^    body_encoding::value    m_body_encoding;$/;"	m	class:websocketpp::http::parser::parser
m_buckets	daemon/table/name-tree.hpp	/^  name_tree::Node**             m_buckets; \/\/ Name Tree Buckets in the NPHT$/;"	m	class:nfd::NameTree
m_buf	websocketpp/websocketpp/connection.hpp	/^    char                    m_buf[config::connection_read_buffer_size];$/;"	m	class:websocketpp::connection
m_buf	websocketpp/websocketpp/http/request.hpp	/^    lib::shared_ptr<std::string>    m_buf;$/;"	m	class:websocketpp::http::parser::request
m_buf	websocketpp/websocketpp/http/response.hpp	/^    lib::shared_ptr<std::string>    m_buf;$/;"	m	class:websocketpp::http::parser::response
m_buf	websocketpp/websocketpp/transport/debug/connection.hpp	/^    char *          m_buf;$/;"	m	class:websocketpp::transport::debug::connection
m_buf	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    char *          m_buf;$/;"	m	class:websocketpp::transport::iostream::connection
m_buf_cursor	websocketpp/websocketpp/connection.hpp	/^    size_t                  m_buf_cursor;$/;"	m	class:websocketpp::connection
m_buffer	tests/core/logger.t.cpp	/^  std::stringstream m_buffer;$/;"	m	class:nfd::tests::LoggerFixture	file:
m_buffer	tests/core/segment-publisher.t.cpp	/^  ndn::EncodingBuffer m_buffer;$/;"	m	class:nfd::tests::SegmentPublisherFixture	file:
m_buffer	tools/nfd-status.cpp	/^  shared_ptr<OBufferStream> m_buffer;$/;"	m	class:ndn::NfdStatus	file:
m_bufs	websocketpp/websocketpp/transport/asio/connection.hpp	/^    std::vector<boost::asio::const_buffer> m_bufs;$/;"	m	class:websocketpp::transport::asio::connection
m_bytes_needed	websocketpp/websocketpp/processors/hybi13.hpp	/^    size_t m_bytes_needed;$/;"	m	class:websocketpp::processor::hybi13
m_bytes_needed	websocketpp/websocketpp/transport/debug/connection.hpp	/^    size_t          m_bytes_needed;$/;"	m	class:websocketpp::transport::debug::connection
m_bytes_needed	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    size_t          m_bytes_needed;$/;"	m	class:websocketpp::transport::iostream::connection
m_c2s_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    uint8_t m_c2s_max_window_bits;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_c2s_max_window_bits_mode	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    mode::value m_c2s_max_window_bits_mode;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_c2s_no_context_takeover	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    bool m_c2s_no_context_takeover;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_capacity	daemon/table/dead-nonce-list.hpp	/^  size_t m_capacity;$/;"	m	class:nfd::DeadNonceList
m_certificate	tests/daemon/mgmt/command-validator.t.cpp	/^  shared_ptr<ndn::IdentityCertificate> m_certificate;$/;"	m	class:nfd::tests::CommandValidatorTester	file:
m_certificate	tests/daemon/mgmt/manager-common-fixture.hpp	/^  shared_ptr<ndn::IdentityCertificate>   m_certificate; \/\/ the certificate used to sign request$/;"	m	class:nfd::tests::ManagerCommonFixture
m_channelFaces	daemon/face/tcp-channel.hpp	/^  std::map<tcp::Endpoint, shared_ptr<Face>> m_channelFaces;$/;"	m	class:nfd::TcpChannel
m_channelFaces	daemon/face/udp-channel.hpp	/^  std::map<udp::Endpoint, shared_ptr<face::LpFaceWrapper>> m_channelFaces;$/;"	m	class:nfd::UdpChannel
m_channelFaces	daemon/face/websocket-channel.hpp	/^           std::owner_less<websocketpp::connection_hdl>> m_channelFaces;$/;"	m	class:nfd::WebSocketChannel
m_channel_type_hint	websocketpp/websocketpp/logger/syslog.hpp	/^    channel_type_hint::value m_channel_type_hint;$/;"	m	class:websocketpp::log::syslog
m_channels	daemon/face/tcp-factory.hpp	/^  std::map<tcp::Endpoint, shared_ptr<TcpChannel>> m_channels;$/;"	m	class:nfd::TcpFactory
m_channels	daemon/face/udp-factory.hpp	/^  std::map<udp::Endpoint, shared_ptr<UdpChannel>> m_channels;$/;"	m	class:nfd::UdpFactory
m_channels	daemon/face/unix-stream-factory.hpp	/^  std::map<unix_stream::Endpoint, shared_ptr<UnixStreamChannel>> m_channels;$/;"	m	class:nfd::UnixStreamFactory
m_channels	daemon/face/websocket-factory.hpp	/^  std::map<websocket::Endpoint, shared_ptr<WebSocketChannel>> m_channels;$/;"	m	class:nfd::WebSocketFactory
m_channels	tests/daemon/mgmt/face-manager.t.cpp	/^  std::vector<shared_ptr<const Channel>> m_channels;$/;"	m	class:nfd::tests::TestProtocolFactory	file:
m_children	daemon/table/name-tree-entry.hpp	/^  std::vector<shared_ptr<Entry> > m_children; \/\/ Children pointers.$/;"	m	class:nfd::name_tree::Entry
m_children	rib/rib-entry.hpp	/^  std::list<shared_ptr<RibEntry>> m_children;$/;"	m	class:nfd::rib::RibEntry
m_cleanup	daemon/table/measurements-entry.hpp	/^  scheduler::EventId m_cleanup;$/;"	m	class:nfd::measurements::Entry
m_client	tests/daemon/fw/topology-tester.hpp	/^  shared_ptr<ndn::Face> m_client;$/;"	m	class:nfd::fw::tests::TopologyAppLink
m_client	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    client m_client;$/;"	m	class:telemetry_client	file:
m_clientToFwTransmitConn	daemon/face/internal-transport.hpp	/^  signal::ScopedConnection m_clientToFwTransmitConn;$/;"	m	class:nfd::face::InternalClientTransport
m_clientTransport	tests/daemon/fw/topology-tester.hpp	/^  shared_ptr<face::InternalClientTransport> m_clientTransport;$/;"	m	class:nfd::fw::tests::TopologyAppLink
m_close	websocketpp/examples/debug_client/debug_client.cpp	/^    std::chrono::high_resolution_clock::time_point m_close;$/;"	m	class:perftest	file:
m_closeIfIdleEvent	daemon/face/unicast-udp-transport.hpp	/^  scheduler::ScopedEventId m_closeIfIdleEvent;$/;"	m	class:nfd::face::UnicastUdpTransport
m_close_handler	websocketpp/websocketpp/connection.hpp	/^    close_handler           m_close_handler;$/;"	m	class:websocketpp::connection
m_close_handler	websocketpp/websocketpp/endpoint.hpp	/^    close_handler               m_close_handler;$/;"	m	class:websocketpp::endpoint
m_close_handshake_timeout_dur	websocketpp/websocketpp/connection.hpp	/^    long                    m_close_handshake_timeout_dur;$/;"	m	class:websocketpp::connection
m_close_handshake_timeout_dur	websocketpp/websocketpp/endpoint.hpp	/^    long                        m_close_handshake_timeout_dur;$/;"	m	class:websocketpp::endpoint
m_closed	daemon/face/websocket-face.hpp	/^  bool m_closed;$/;"	m	class:nfd::WebSocketFace
m_closed_by_me	websocketpp/websocketpp/connection.hpp	/^    bool                    m_closed_by_me;$/;"	m	class:websocketpp::connection
m_code	websocketpp/websocketpp/error.hpp	/^    lib::error_code m_code;$/;"	m	class:websocketpp::exception
m_codepoint	websocketpp/websocketpp/utf8_validator.hpp	/^    uint32_t    m_codepoint;$/;"	m	class:websocketpp::utf8_validator::validator
m_commandLineArguments	tools/nfdc.hpp	/^  const char* const* m_commandLineArguments;$/;"	m	class:nfdc::Nfdc
m_commandOptions	rib/auto-prefix-propagator.hpp	/^  ndn::nfd::CommandOptions m_commandOptions;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_compress_buffer	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    lib::unique_ptr_uchar_array m_compress_buffer;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_compress_buffer_size	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    size_t m_compress_buffer_size;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_compressed	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool                        m_compressed;$/;"	m	class:websocketpp::message_buffer::message
m_con	websocketpp/test/transport/asio/timers.cpp	/^    connection_ptr m_con;$/;"	m	struct:mock_endpoint	file:
m_config	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^  ConfigFile m_config;$/;"	m	class:nfd::tests::FaceManagerProcessConfigFixture	file:
m_config	tests/daemon/mgmt/tables-config-section.t.cpp	/^  ConfigFile m_config;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_configFile	daemon/main.cpp	/^  std::string             m_configFile;$/;"	m	class:nfd::NfdRunner	file:
m_configFile	daemon/nfd.hpp	/^  std::string m_configFile;$/;"	m	class:nfd::Nfd
m_configFile	rib/nrd.hpp	/^  std::string m_configFile;$/;"	m	class:nfd::rib::Nrd
m_configSection	daemon/nfd.hpp	/^  ConfigSection m_configSection;$/;"	m	class:nfd::Nfd
m_configSection	rib/nrd.hpp	/^  ConfigSection m_configSection;$/;"	m	class:nfd::rib::Nrd
m_connection_hdl	websocketpp/websocketpp/connection.hpp	/^    connection_hdl          m_connection_hdl;$/;"	m	class:websocketpp::connection
m_connection_hdl	websocketpp/websocketpp/transport/asio/connection.hpp	/^    connection_hdl  m_connection_hdl;$/;"	m	class:websocketpp::transport::asio::connection
m_connection_hdl	websocketpp/websocketpp/transport/debug/connection.hpp	/^    connection_hdl  m_connection_hdl;$/;"	m	class:websocketpp::transport::debug::connection
m_connection_hdl	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    connection_hdl  m_connection_hdl;$/;"	m	class:websocketpp::transport::iostream::connection
m_connection_list	websocketpp/examples/utility_client/utility_client.cpp	/^    con_list m_connection_list;$/;"	m	class:websocket_endpoint	file:
m_connection_list	websocketpp/tutorials/utility_client/step4.cpp	/^    con_list m_connection_list;$/;"	m	class:websocket_endpoint	file:
m_connection_list	websocketpp/tutorials/utility_client/step5.cpp	/^    con_list m_connection_list;$/;"	m	class:websocket_endpoint	file:
m_connection_list	websocketpp/tutorials/utility_client/step6.cpp	/^    con_list m_connection_list;$/;"	m	class:websocket_endpoint	file:
m_connection_lock	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    mutex m_connection_lock;$/;"	m	class:broadcast_server	file:
m_connection_state_lock	websocketpp/websocketpp/connection.hpp	/^    mutable mutex_type      m_connection_state_lock;$/;"	m	class:websocketpp::connection
m_connections	websocketpp/docs/simple_broadcast_server.cpp	/^    con_list m_connections;$/;"	m	class:broadcast_server	file:
m_connections	websocketpp/docs/simple_count_server_thread.cpp	/^    con_list m_connections;$/;"	m	class:count_server	file:
m_connections	websocketpp/examples/associative_storage/associative_storage.cpp	/^    con_list m_connections;$/;"	m	class:print_server	file:
m_connections	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    con_list m_connections;$/;"	m	class:broadcast_server	file:
m_connections	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    con_list m_connections;$/;"	m	class:broadcast_server	file:
m_connections	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    con_list m_connections;$/;"	m	class:telemetry_server	file:
m_context	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    context_ptr         m_context;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_controlParameters	rib/auto-prefix-propagator.hpp	/^  ndn::nfd::ControlParameters m_controlParameters;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_control_msg	websocketpp/websocketpp/processors/hybi13.hpp	/^    msg_metadata m_control_msg;$/;"	m	class:websocketpp::processor::hybi13
m_controller	rib/fib-updater.hpp	/^  ndn::nfd::Controller& m_controller;$/;"	m	class:nfd::rib::FibUpdater
m_controller	tests/rib/auto-prefix-propagator.t.cpp	/^  ndn::nfd::Controller                       m_controller;$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture	file:
m_controller	tools/ndn-autoconfig/base.hpp	/^  nfd::Controller m_controller;$/;"	m	class:ndn::tools::autoconfig::Base
m_controller	tools/nfd-autoreg.cpp	/^  Controller m_controller;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_controller	tools/nfdc.hpp	/^    Controller& m_controller;$/;"	m	class:nfdc::Nfdc::FaceIdFetcher
m_controller	tools/nfdc.hpp	/^  Controller m_controller;$/;"	m	class:nfdc::Nfdc
m_cost	daemon/table/fib-nexthop.hpp	/^  uint64_t m_cost;$/;"	m	class:nfd::fib::NextHop
m_cost	tools/nfd-autoreg.cpp	/^  uint64_t m_cost;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_cost	tools/nfdc.hpp	/^  uint64_t m_cost;$/;"	m	class:nfdc::Nfdc
m_count	daemon/face/ndnlp-sequence-generator.hpp	/^  size_t m_count;$/;"	m	class:nfd::ndnlp::SequenceBlock
m_count	websocketpp/docs/simple_count_server_thread.cpp	/^    int m_count;$/;"	m	class:count_server	file:
m_count	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    uint64_t m_count;$/;"	m	class:telemetry_server	file:
m_counters	daemon/face/face.hpp	/^  FaceCounters m_counters;$/;"	m	class:nfd::Face
m_counters	daemon/face/link-service.hpp	/^  NetworkLayerCounters* m_counters; \/\/ TODO#3177 change into NetCounters$/;"	m	class:nfd::face::LinkService
m_counters	daemon/face/lp-face.hpp	/^  FaceCounters m_counters;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
m_counters	daemon/face/transport.hpp	/^  LinkLayerCounters* m_counters; \/\/ TODO#3177 change into LinkCounters$/;"	m	class:nfd::face::Transport
m_counters	daemon/fw/forwarder.hpp	/^  ForwarderCounters m_counters;$/;"	m	class:nfd::Forwarder
m_cs	daemon/fw/forwarder.hpp	/^  Cs                 m_cs;$/;"	m	class:nfd::Forwarder
m_cs	daemon/mgmt/tables-config-section.hpp	/^  Cs& m_cs;$/;"	m	class:nfd::TablesConfigSection
m_cs	daemon/table/cs-policy.hpp	/^  Cs* m_cs;$/;"	m	class:nfd::cs::Policy
m_cs	tests/daemon/mgmt/tables-config-section.t.cpp	/^  Cs& m_cs;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_cs	tests/daemon/table/cs.t.cpp	/^  Cs m_cs;$/;"	m	class:nfd::cs::tests::FindFixture	file:
m_current_msg	websocketpp/websocketpp/processors/hybi13.hpp	/^    msg_metadata * m_current_msg;$/;"	m	class:websocketpp::processor::hybi13
m_current_msgs	websocketpp/websocketpp/connection.hpp	/^    std::vector<message_ptr> m_current_msgs;$/;"	m	class:websocketpp::connection
m_cursor	websocketpp/websocketpp/processors/hybi13.hpp	/^    size_t m_cursor;$/;"	m	class:websocketpp::processor::hybi13
m_cursor	websocketpp/websocketpp/transport/debug/connection.hpp	/^    size_t          m_cursor;$/;"	m	class:websocketpp::transport::debug::connection
m_cursor	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    size_t          m_cursor;$/;"	m	class:websocketpp::transport::iostream::connection
m_data	daemon/table/cs-entry.hpp	/^  shared_ptr<const Data> m_data;$/;"	m	class:nfd::cs::Entry
m_data_msg	websocketpp/websocketpp/processors/hybi13.hpp	/^    msg_metadata m_data_msg;$/;"	m	class:websocketpp::processor::hybi13
m_deadNonceList	daemon/fw/forwarder.hpp	/^  DeadNonceList      m_deadNonceList;$/;"	m	class:nfd::Forwarder
m_defaultLevel	core/logger-factory.hpp	/^  LogLevel m_defaultLevel;$/;"	m	class:nfd::LoggerFactory
m_delay	tests/daemon/fw/topology-tester.hpp	/^  time::nanoseconds m_delay;$/;"	m	class:nfd::fw::tests::TopologyLink
m_description	daemon/face/face.hpp	/^  std::string m_description;$/;"	m	class:nfd::Face
m_destAddress	daemon/face/ethernet-face.hpp	/^  ethernet::Address m_destAddress;$/;"	m	class:nfd::EthernetFace
m_dis	websocketpp/websocketpp/random/random_device.hpp	/^        lib::uniform_int_distribution<int_type> m_dis;$/;"	m	class:websocketpp::random::random_device::int_generator
m_dispatcher	daemon/mgmt/forwarder-status-manager.hpp	/^  Dispatcher& m_dispatcher;$/;"	m	class:nfd::ForwarderStatusManager
m_dispatcher	daemon/mgmt/manager-base.hpp	/^  Dispatcher&       m_dispatcher;$/;"	m	class:nfd::ManagerBase
m_dispatcher	daemon/nfd.hpp	/^  unique_ptr<ndn::mgmt::Dispatcher>  m_dispatcher;$/;"	m	class:nfd::Nfd
m_dispatcher	tests/daemon/mgmt/manager-common-fixture.hpp	/^  ndn::mgmt::Dispatcher                  m_dispatcher;$/;"	m	class:nfd::tests::ManagerCommonFixture
m_docroot	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    std::string m_docroot;$/;"	m	class:telemetry_server	file:
m_done	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    bool m_done;$/;"	m	class:telemetry_client	file:
m_dropped_by_me	websocketpp/websocketpp/connection.hpp	/^    bool                    m_dropped_by_me;$/;"	m	class:websocketpp::connection
m_dstate	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    z_stream m_dstate;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_dynamic_channels	websocketpp/websocketpp/logger/basic.hpp	/^    level m_dynamic_channels;$/;"	m	class:websocketpp::log::basic
m_ec	websocketpp/websocketpp/connection.hpp	/^    lib::error_code m_ec;$/;"	m	class:websocketpp::connection
m_ec	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    lib::error_code     m_ec;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_elog	websocketpp/websocketpp/connection.hpp	/^    elog_type& m_elog;$/;"	m	class:websocketpp::connection
m_elog	websocketpp/websocketpp/endpoint.hpp	/^    elog_type m_elog;$/;"	m	class:websocketpp::endpoint
m_elog	websocketpp/websocketpp/transport/asio/connection.hpp	/^    elog_type& m_elog;$/;"	m	class:websocketpp::transport::asio::connection
m_elog	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    elog_type* m_elog;$/;"	m	class:websocketpp::transport::asio::endpoint
m_elog	websocketpp/websocketpp/transport/debug/connection.hpp	/^    elog_type &     m_elog;$/;"	m	class:websocketpp::transport::debug::connection
m_elog	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    elog_type &     m_elog;$/;"	m	class:websocketpp::transport::iostream::connection
m_elog	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    elog_type *     m_elog;$/;"	m	class:websocketpp::transport::iostream::endpoint
m_elog	websocketpp/websocketpp/transport/stub/connection.hpp	/^    elog_type & m_elog;$/;"	m	class:websocketpp::transport::stub::connection
m_enabled	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    bool m_enabled;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_enabledLogLevel	core/logger.hpp	/^  LogLevel    m_enabledLogLevel;$/;"	m	class:nfd::Logger
m_end	daemon/table/name-tree.hpp	/^  shared_ptr<name_tree::Entry>  m_end;$/;"	m	class:nfd::NameTree
m_endIterator	daemon/table/name-tree.hpp	/^  const_iterator                m_endIterator;$/;"	m	class:nfd::NameTree
m_endpoint	daemon/face/unix-stream-channel.hpp	/^  unix_stream::Endpoint m_endpoint;$/;"	m	class:nfd::UnixStreamChannel
m_endpoint	websocketpp/examples/debug_client/debug_client.cpp	/^    client m_endpoint;$/;"	m	class:perftest	file:
m_endpoint	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    server m_endpoint;$/;"	m	class:telemetry_server	file:
m_endpoint	websocketpp/examples/utility_client/utility_client.cpp	/^    client m_endpoint;$/;"	m	class:websocket_endpoint	file:
m_endpoint	websocketpp/tutorials/utility_client/step3.cpp	/^    client m_endpoint;$/;"	m	class:websocket_endpoint	file:
m_endpoint	websocketpp/tutorials/utility_client/step4.cpp	/^    client m_endpoint;$/;"	m	class:websocket_endpoint	file:
m_endpoint	websocketpp/tutorials/utility_client/step5.cpp	/^    client m_endpoint;$/;"	m	class:websocket_endpoint	file:
m_endpoint	websocketpp/tutorials/utility_client/step6.cpp	/^    client m_endpoint;$/;"	m	class:websocket_endpoint	file:
m_enlargeFactor	daemon/table/name-tree.hpp	/^  int                           m_enlargeFactor;$/;"	m	class:nfd::NameTree
m_enlargeLoadFactor	daemon/table/name-tree.hpp	/^  double                        m_enlargeLoadFactor;$/;"	m	class:nfd::NameTree
m_enlargeThreshold	daemon/table/name-tree.hpp	/^  size_t                        m_enlargeThreshold;$/;"	m	class:nfd::NameTree
m_entries	tests/rib/auto-prefix-propagator.t.cpp	/^  AutoPrefixPropagator::PropagatedEntryList& m_entries; \/\/ store propagated entries$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture	file:
m_entry	daemon/table/name-tree-entry.hpp	/^  shared_ptr<Entry> m_entry; \/\/ Name Tree Entry (i.e., Name Prefix Entry)$/;"	m	class:nfd::name_tree::Node
m_entry	daemon/table/name-tree.hpp	/^    shared_ptr<name_tree::Entry>                m_entry;$/;"	m	class:nfd::NameTree::const_iterator
m_entryInfoMap	daemon/table/cs-policy-priority-fifo.hpp	/^  EntryInfoMapFifo m_entryInfoMap;$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
m_entrySelector	daemon/table/name-tree.hpp	/^    shared_ptr<name_tree::EntrySelector>        m_entrySelector;$/;"	m	class:nfd::NameTree::const_iterator
m_entrySubTreeSelector	daemon/table/name-tree.hpp	/^    shared_ptr<name_tree::EntrySubTreeSelector> m_entrySubTreeSelector;$/;"	m	class:nfd::NameTree::const_iterator
m_error_code	websocketpp/websocketpp/http/constants.hpp	/^        status_code::value  m_error_code;$/;"	m	class:websocketpp::http::exception
m_error_msg	websocketpp/websocketpp/http/constants.hpp	/^        std::string         m_error_msg;$/;"	m	class:websocketpp::http::exception
m_error_reason	websocketpp/examples/utility_client/utility_client.cpp	/^    std::string m_error_reason;$/;"	m	class:connection_metadata	file:
m_error_reason	websocketpp/tutorials/utility_client/step4.cpp	/^    std::string m_error_reason;$/;"	m	class:connection_metadata	file:
m_error_reason	websocketpp/tutorials/utility_client/step5.cpp	/^    std::string m_error_reason;$/;"	m	class:connection_metadata	file:
m_error_reason	websocketpp/tutorials/utility_client/step6.cpp	/^    std::string m_error_reason;$/;"	m	class:connection_metadata	file:
m_event	core/scheduler.hpp	/^  EventId m_event;$/;"	m	class:nfd::scheduler::ScopedEventId
m_expectDryRun	tests/core/config-file.t.cpp	/^  bool m_expectDryRun;$/;"	m	class:nfd::tests::DummySubscriber	file:
m_expectedFreshnessPeriod	tests/core/segment-publisher.t.cpp	/^  const time::milliseconds m_expectedFreshnessPeriod;$/;"	m	class:nfd::tests::SegmentPublisherFixture	file:
m_expirationEvent	rib/route.hpp	/^  scheduler::EventId m_expirationEvent;$/;"	m	class:nfd::rib::Route
m_expires	tools/nfdc.hpp	/^  ndn::time::milliseconds m_expires;$/;"	m	class:nfdc::Nfdc
m_expiry	daemon/table/measurements-entry.hpp	/^  time::steady_clock::TimePoint m_expiry;$/;"	m	class:nfd::measurements::Entry
m_expiry	daemon/table/pit-face-record.hpp	/^  time::steady_clock::TimePoint m_expiry;$/;"	m	class:nfd::pit::FaceRecord
m_extended_header	websocketpp/websocketpp/processors/hybi13.hpp	/^    frame::extended_header m_extended_header;$/;"	m	class:websocketpp::processor::hybi13
m_extension_data	websocketpp/websocketpp/message_buffer/message.hpp	/^    std::string                 m_extension_data;$/;"	m	class:websocketpp::message_buffer::message
m_extension_data	websocketpp/websocketpp/message_buffer/pool.hpp	/^    std::string                 m_extension_data;$/;"	m	class:websocketpp::message_buffer::message
m_external_io_service	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    bool                m_external_io_service;$/;"	m	class:websocketpp::transport::asio::endpoint
m_face	core/segment-publisher.hpp	/^  FaceBase& m_face;$/;"	m	class:nfd::SegmentPublisher
m_face	daemon/face/link-service.hpp	/^  LpFace* m_face;$/;"	m	class:nfd::face::LinkService
m_face	daemon/face/lp-face-wrapper.hpp	/^  unique_ptr<LpFace> m_face;$/;"	m	class:nfd::face::LpFaceWrapper
m_face	daemon/face/transport.hpp	/^  LpFace* m_face;$/;"	m	class:nfd::face::Transport
m_face	daemon/table/fib-nexthop.hpp	/^  shared_ptr<Face> m_face;$/;"	m	class:nfd::fib::NextHop
m_face	daemon/table/pit-face-record.hpp	/^  shared_ptr<Face> m_face;$/;"	m	class:nfd::pit::FaceRecord
m_face	rib/nrd.hpp	/^  unique_ptr<ndn::Face> m_face;$/;"	m	class:nfd::rib::Nrd
m_face	rib/rib-manager.hpp	/^  ndn::Face& m_face;$/;"	m	class:nfd::rib::RibManager
m_face	tests/core/segment-publisher.t.cpp	/^  shared_ptr<ndn::util::DummyClientFace> m_face;$/;"	m	class:nfd::tests::SegmentPublisherFixture	file:
m_face	tests/daemon/fw/topology-tester.hpp	/^  shared_ptr<Face> m_face;$/;"	m	class:nfd::fw::tests::TopologyAppLink
m_face	tests/daemon/mgmt/manager-common-fixture.hpp	/^  shared_ptr<ndn::util::DummyClientFace> m_face;$/;"	m	class:nfd::tests::ManagerCommonFixture
m_face	tests/rib/auto-prefix-propagator.t.cpp	/^  shared_ptr<ndn::util::DummyClientFace>     m_face;$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture	file:
m_face	tools/ndn-autoconfig-server.cpp	/^  Face m_face;$/;"	m	class:ndn::NdnAutoconfigServer	file:
m_face	tools/ndn-autoconfig/base.hpp	/^  Face& m_face;$/;"	m	class:ndn::tools::autoconfig::Base
m_face	tools/ndn-autoconfig/main.cpp	/^  Face m_face;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_face	tools/ndn-tlv-peek.cpp	/^  ndn::Face m_face;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_face	tools/ndn-tlv-poke.cpp	/^  ndn::Face m_face;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_face	tools/nfd-autoreg.cpp	/^  Face m_face;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_face	tools/nfd-status.cpp	/^  Face m_face;$/;"	m	class:ndn::NfdStatus	file:
m_face	tools/nfdc.hpp	/^    ndn::Face& m_face;$/;"	m	class:nfdc::Nfdc::FaceIdFetcher
m_face	tools/nfdc.hpp	/^  ndn::Face& m_face;$/;"	m	class:nfdc::Nfdc
m_faceAddConn	daemon/mgmt/face-manager.hpp	/^  signal::ScopedConnection m_faceAddConn;$/;"	m	class:nfd::FaceManager
m_faceId	rib/rib-update-batch.hpp	/^  uint64_t m_faceId;$/;"	m	class:nfd::rib::RibUpdateBatch
m_faceId	tools/nfdc.hpp	/^  uint64_t m_faceId;$/;"	m	class:nfdc::Nfdc
m_faceManager	daemon/nfd.hpp	/^  unique_ptr<FaceManager>            m_faceManager;$/;"	m	class:nfd::Nfd
m_faceMap	rib/rib.hpp	/^  FaceLookupTable m_faceMap;$/;"	m	class:nfd::rib::Rib
m_faceMonitor	rib/rib-manager.hpp	/^  ndn::nfd::FaceMonitor m_faceMonitor;$/;"	m	class:nfd::rib::RibManager
m_faceMonitor	tools/nfd-autoreg.cpp	/^  FaceMonitor m_faceMonitor;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_facePersistency	tools/nfdc.hpp	/^  FacePersistency m_facePersistency;$/;"	m	class:nfdc::Nfdc
m_faceRemoveConn	daemon/mgmt/face-manager.hpp	/^  signal::ScopedConnection m_faceRemoveConn;$/;"	m	class:nfd::FaceManager
m_faceTable	daemon/fw/forwarder.hpp	/^  FaceTable m_faceTable;$/;"	m	class:nfd::Forwarder
m_faceTable	daemon/mgmt/face-manager.hpp	/^  FaceTable& m_faceTable;$/;"	m	class:nfd::FaceManager
m_faceTable	tests/daemon/mgmt/face-manager.t.cpp	/^  FaceTable& m_faceTable;$/;"	m	class:nfd::tests::FaceManagerFixture	file:
m_faceTable	tests/daemon/mgmt/fib-manager.t.cpp	/^  FaceTable& m_faceTable;$/;"	m	class:nfd::tests::FibManagerFixture	file:
m_faces	daemon/fw/face-table.hpp	/^  FaceMap m_faces;$/;"	m	class:nfd::FaceTable
m_faces	tests/daemon/fw/topology-tester.hpp	/^  std::unordered_map<TopologyNode, shared_ptr<face::LpFaceWrapper>> m_faces;$/;"	m	class:nfd::fw::tests::TopologyLink
m_factories	daemon/mgmt/face-manager.hpp	/^  std::map<std::string \/*protocol*\/, shared_ptr<ProtocolFactory>> m_factories;$/;"	m	class:nfd::FaceManager
m_failConn	tests/daemon/face/face-history.hpp	/^  signal::ScopedConnection m_failConn;$/;"	m	class:nfd::tests::FaceHistory
m_fail_handler	websocketpp/websocketpp/connection.hpp	/^    fail_handler            m_fail_handler;$/;"	m	class:websocketpp::connection
m_fail_handler	websocketpp/websocketpp/endpoint.hpp	/^    fail_handler                m_fail_handler;$/;"	m	class:websocketpp::endpoint
m_failed_by_me	websocketpp/websocketpp/connection.hpp	/^    bool                    m_failed_by_me;$/;"	m	class:websocketpp::connection
m_fetchSteps	tools/nfd-status.cpp	/^  std::deque<function<void()> > m_fetchSteps;$/;"	m	class:ndn::NfdStatus	file:
m_fib	daemon/fw/forwarder.hpp	/^  Fib                m_fib;$/;"	m	class:nfd::Forwarder
m_fib	daemon/mgmt/fib-manager.hpp	/^  Fib& m_fib;$/;"	m	class:nfd::FibManager
m_fib	tests/daemon/mgmt/fib-manager.t.cpp	/^  Fib&       m_fib;$/;"	m	class:nfd::tests::FibManagerFixture	file:
m_fib	tests/daemon/mgmt/tables-config-section.t.cpp	/^  Fib& m_fib;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_fibEntry	daemon/table/name-tree-entry.hpp	/^  shared_ptr<fib::Entry> m_fibEntry;$/;"	m	class:nfd::name_tree::Entry
m_fibManager	daemon/nfd.hpp	/^  unique_ptr<FibManager>             m_fibManager;$/;"	m	class:nfd::Nfd
m_fibUpdater	rib/rib-manager.hpp	/^  FibUpdater m_fibUpdater;$/;"	m	class:nfd::rib::RibManager
m_fibUpdater	rib/rib.hpp	/^  FibUpdater* m_fibUpdater;$/;"	m	class:nfd::rib::Rib
m_fin	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool                        m_fin;$/;"	m	class:websocketpp::message_buffer::message
m_fit	daemon/fw/access-strategy.hpp	/^  FaceInfoTable m_fit;$/;"	m	class:nfd::fw::AccessStrategy
m_flags	tools/nfdc.hpp	/^  uint64_t m_flags;$/;"	m	class:nfdc::Nfdc
m_forwarder	daemon/fw/face-table.hpp	/^  Forwarder& m_forwarder;$/;"	m	class:nfd::FaceTable
m_forwarder	daemon/fw/strategy.hpp	/^  Forwarder& m_forwarder;$/;"	m	class:nfd::fw::Strategy
m_forwarder	daemon/mgmt/forwarder-status-manager.hpp	/^  Forwarder&  m_forwarder;$/;"	m	class:nfd::ForwarderStatusManager
m_forwarder	daemon/nfd.hpp	/^  unique_ptr<Forwarder> m_forwarder;$/;"	m	class:nfd::Nfd
m_forwarder	tests/daemon/mgmt/manager-common-fixture.hpp	/^  Forwarder                              m_forwarder;$/;"	m	class:nfd::tests::ManagerCommonFixture
m_forwarder	tests/daemon/mgmt/tables-config-section.t.cpp	/^  Forwarder m_forwarder;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_forwarderLabels	tests/daemon/fw/topology-tester.hpp	/^  std::vector<std::string> m_forwarderLabels;$/;"	m	class:nfd::fw::tests::TopologyTester
m_forwarderStatusManager	daemon/nfd.hpp	/^  unique_ptr<ForwarderStatusManager> m_forwarderStatusManager;$/;"	m	class:nfd::Nfd
m_forwarderTransport	tests/daemon/fw/topology-tester.hpp	/^  face::InternalForwarderTransport* m_forwarderTransport;$/;"	m	class:nfd::fw::tests::TopologyAppLink
m_forwarders	tests/daemon/fw/topology-tester.hpp	/^  std::vector<unique_ptr<Forwarder>> m_forwarders;$/;"	m	class:nfd::fw::tests::TopologyTester
m_fragCount	daemon/face/ndnlp-partial-message-store.hpp	/^  size_t m_fragCount;$/;"	m	class:nfd::ndnlp::PartialMessage
m_freshnessPeriod	core/segment-publisher.hpp	/^  const time::milliseconds m_freshnessPeriod;$/;"	m	class:nfd::SegmentPublisher
m_freshnessPeriod	tools/ndn-tlv-poke.cpp	/^  ndn::time::milliseconds m_freshnessPeriod;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_fwToClientTransmitConn	daemon/face/internal-transport.hpp	/^  signal::ScopedConnection m_fwToClientTransmitConn;$/;"	m	class:nfd::face::InternalClientTransport
m_fwTransportStateConn	daemon/face/internal-transport.hpp	/^  signal::ScopedConnection m_fwTransportStateConn;$/;"	m	class:nfd::face::InternalClientTransport
m_gain	daemon/fw/rtt-estimator.hpp	/^  double m_gain;$/;"	m	class:nfd::RttEstimator
m_getFace	daemon/mgmt/fib-manager.hpp	/^  function<shared_ptr<Face>(FaceId)> m_getFace;$/;"	m	class:nfd::FibManager
m_global	core/config-file.hpp	/^  ConfigSection m_global;$/;"	m	class:nfd::ConfigFile
m_handle	daemon/face/websocket-face.hpp	/^  websocketpp::connection_hdl m_handle;$/;"	m	class:nfd::WebSocketFace
m_handle_read_frame	websocketpp/websocketpp/connection.hpp	/^    read_handler            m_handle_read_frame;$/;"	m	class:websocketpp::connection
m_handshake_buffer	websocketpp/websocketpp/connection.hpp	/^    std::string m_handshake_buffer;$/;"	m	class:websocketpp::connection
m_handshake_timer	websocketpp/websocketpp/connection.hpp	/^    timer_ptr               m_handshake_timer;$/;"	m	class:websocketpp::connection
m_hasBeenUsedRecently	daemon/face/datagram-transport.hpp	/^  bool m_hasBeenUsedRecently;$/;"	m	class:nfd::face::DatagramTransport
m_hasConnectedHub	rib/auto-prefix-propagator.hpp	/^  bool m_hasConnectedHub;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_hash	daemon/table/name-tree-entry.hpp	/^  size_t m_hash;$/;"	m	class:nfd::name_tree::Entry
m_hdl	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    websocketpp::connection_hdl m_hdl;$/;"	m	class:telemetry_client	file:
m_hdl	websocketpp/examples/utility_client/utility_client.cpp	/^    websocketpp::connection_hdl m_hdl;$/;"	m	class:connection_metadata	file:
m_hdl	websocketpp/tutorials/utility_client/step4.cpp	/^    websocketpp::connection_hdl m_hdl;$/;"	m	class:connection_metadata	file:
m_hdl	websocketpp/tutorials/utility_client/step5.cpp	/^    websocketpp::connection_hdl m_hdl;$/;"	m	class:connection_metadata	file:
m_hdl	websocketpp/tutorials/utility_client/step6.cpp	/^    websocketpp::connection_hdl m_hdl;$/;"	m	class:connection_metadata	file:
m_hdl	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    connection_hdl      m_hdl;$/;"	m	class:websocketpp::transport::asio::basic_socket::connection
m_hdl	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    connection_hdl      m_hdl;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_header	websocketpp/websocketpp/message_buffer/message.hpp	/^    std::string                 m_header;$/;"	m	class:websocketpp::message_buffer::message
m_header	websocketpp/websocketpp/message_buffer/pool.hpp	/^    std::string                 m_header;$/;"	m	class:websocketpp::message_buffer::message
m_header_bytes	websocketpp/websocketpp/http/parser.hpp	/^    size_t                  m_header_bytes;$/;"	m	class:websocketpp::http::parser::parser
m_headers	websocketpp/websocketpp/http/parser.hpp	/^    header_list m_headers;$/;"	m	class:websocketpp::http::parser::parser
m_host	websocketpp/websocketpp/uri.hpp	/^    std::string m_host;$/;"	m	class:websocketpp::uri
m_ht	daemon/table/dead-nonce-list.hpp	/^  Hashtable& m_ht;$/;"	m	class:nfd::DeadNonceList
m_http_handler	websocketpp/websocketpp/connection.hpp	/^    http_handler            m_http_handler;$/;"	m	class:websocketpp::connection
m_http_handler	websocketpp/websocketpp/endpoint.hpp	/^    http_handler                m_http_handler;$/;"	m	class:websocketpp::endpoint
m_hubData	tools/ndn-autoconfig-server.cpp	/^  shared_ptr<Data> m_hubData;$/;"	m	class:ndn::NdnAutoconfigServer	file:
m_iPitEntry	daemon/table/pit.hpp	/^    size_t m_iPitEntry;$/;"	m	class:nfd::Pit::const_iterator
m_id	daemon/face/face.hpp	/^  FaceId m_id;$/;"	m	class:nfd::Face
m_id	daemon/face/lp-face.hpp	/^  FaceId m_id;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
m_id	tests/daemon/table/strategy-info-host.t.cpp	/^  int m_id;$/;"	m	class:nfd::tests::DummyStrategyInfo	file:
m_id	tests/daemon/table/strategy-info-host.t.cpp	/^  int m_id;$/;"	m	class:nfd::tests::DummyStrategyInfo2	file:
m_id	websocketpp/examples/utility_client/utility_client.cpp	/^    int m_id;$/;"	m	class:connection_metadata	file:
m_id	websocketpp/test/http/parser_perf.cpp	/^    std::string m_id;$/;"	m	class:scoped_timer	file:
m_id	websocketpp/tutorials/utility_client/step4.cpp	/^    int m_id;$/;"	m	class:connection_metadata	file:
m_id	websocketpp/tutorials/utility_client/step5.cpp	/^    int m_id;$/;"	m	class:connection_metadata	file:
m_id	websocketpp/tutorials/utility_client/step6.cpp	/^    int m_id;$/;"	m	class:connection_metadata	file:
m_identities	tests/identity-management-fixture.hpp	/^  std::vector<ndn::Name> m_identities;$/;"	m	class:nfd::tests::IdentityManagementFixture
m_identityName	tests/daemon/mgmt/command-validator.t.cpp	/^  Name m_identityName;$/;"	m	class:nfd::tests::CommandValidatorTester	file:
m_identityName	tests/daemon/mgmt/manager-common-fixture.hpp	/^  Name                                   m_identityName; \/\/ the identity used to sign request$/;"	m	class:nfd::tests::ManagerCommonFixture
m_identityName	tools/ndn-tlv-poke.cpp	/^  ndn::shared_ptr<ndn::Name> m_identityName;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_idleDuration	daemon/face/ndnlp-partial-message-store.hpp	/^  time::nanoseconds m_idleDuration;$/;"	m	class:nfd::ndnlp::PartialMessageStore
m_idleFaceTimeout	daemon/face/udp-channel.hpp	/^  time::seconds m_idleFaceTimeout;$/;"	m	class:nfd::UdpChannel
m_idleTimeout	daemon/face/unicast-udp-transport.hpp	/^  const time::seconds m_idleTimeout;$/;"	m	class:nfd::face::UnicastUdpTransport
m_inRecords	daemon/table/pit-entry.hpp	/^  InRecordCollection m_inRecords;$/;"	m	class:nfd::pit::Entry
m_incomingNack	daemon/table/pit-out-record.hpp	/^  unique_ptr<lp::NackHeader> m_incomingNack;$/;"	m	class:nfd::pit::OutRecord
m_index	daemon/table/dead-nonce-list.hpp	/^  Index m_index;$/;"	m	class:nfd::DeadNonceList
m_inheritedRoutes	rib/fib-updater.hpp	/^  RibUpdateList m_inheritedRoutes;$/;"	m	class:nfd::rib::FibUpdater
m_inheritedRoutes	rib/rib-entry.hpp	/^  RouteList m_inheritedRoutes;$/;"	m	class:nfd::rib::RibEntry
m_init_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    init_handler        m_init_handler;$/;"	m	class:websocketpp::transport::asio::connection
m_initialInterval	daemon/fw/retx-suppression-exponential.hpp	/^  const Duration m_initialInterval;$/;"	m	class:nfd::fw::RetxSuppressionExponential
m_initialized	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    bool m_initialized;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_inputBuffer	daemon/face/stream-face.hpp	/^  uint8_t m_inputBuffer[ndn::MAX_NDN_PACKET_SIZE];$/;"	m	class:nfd::StreamFace
m_inputBuffer	daemon/face/stream-transport.hpp	/^  uint8_t m_inputBuffer[ndn::MAX_NDN_PACKET_SIZE];$/;"	m	class:nfd::face::StreamTransport
m_inputBuffer	daemon/face/udp-channel.hpp	/^  uint8_t m_inputBuffer[ndn::MAX_NDN_PACKET_SIZE];$/;"	m	class:nfd::UdpChannel
m_inputBufferSize	daemon/face/stream-face.hpp	/^  size_t m_inputBufferSize;$/;"	m	class:nfd::StreamFace
m_inputBufferSize	daemon/face/stream-transport.hpp	/^  size_t m_inputBufferSize;$/;"	m	class:nfd::face::StreamTransport
m_interest	daemon/table/pit-entry.hpp	/^  shared_ptr<const Interest> m_interest;$/;"	m	class:nfd::pit::Entry
m_interest	daemon/table/pit-in-record.hpp	/^  shared_ptr<const Interest> m_interest;$/;"	m	class:nfd::pit::InRecord
m_interest	tests/daemon/table/cs.t.cpp	/^  shared_ptr<Interest> m_interest;$/;"	m	class:nfd::cs::tests::FindFixture	file:
m_interestLifetime	tools/ndn-tlv-peek.cpp	/^  ndn::time::milliseconds m_interestLifetime;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_interfaceIndex	daemon/face/ethernet-face.hpp	/^  int m_interfaceIndex;$/;"	m	class:nfd::EthernetFace
m_interfaceMtu	daemon/face/ethernet-face.hpp	/^  size_t m_interfaceMtu;$/;"	m	class:nfd::EthernetFace
m_interfaceName	daemon/face/ethernet-face.hpp	/^  std::string m_interfaceName;$/;"	m	class:nfd::EthernetFace
m_interfaces	tests/daemon/face/ethernet.t.cpp	/^  std::vector<NetworkInterfaceInfo> m_interfaces;$/;"	m	class:nfd::tests::InterfacesFixture	file:
m_internalClientFace	daemon/nfd.hpp	/^  shared_ptr<ndn::Face>        m_internalClientFace;$/;"	m	class:nfd::Nfd
m_internalFace	daemon/nfd.hpp	/^  shared_ptr<Face>             m_internalFace;$/;"	m	class:nfd::Nfd
m_internal_state	websocketpp/websocketpp/connection.hpp	/^    istate_type             m_internal_state;$/;"	m	class:websocketpp::connection
m_interrupt_handler	websocketpp/websocketpp/connection.hpp	/^    interrupt_handler       m_interrupt_handler;$/;"	m	class:websocketpp::connection
m_interrupt_handler	websocketpp/websocketpp/endpoint.hpp	/^    interrupt_handler           m_interrupt_handler;$/;"	m	class:websocketpp::endpoint
m_io	tools/ndn-autoconfig/main.cpp	/^  boost::asio::io_service m_io;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_ioService	tools/nfdc.hpp	/^  boost::asio::io_service& m_ioService;$/;"	m	class:nfdc::Nfdc
m_io_service	websocketpp/websocketpp/transport/asio/connection.hpp	/^    io_service_ptr  m_io_service;$/;"	m	class:websocketpp::transport::asio::connection
m_io_service	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    io_service_ptr      m_io_service;$/;"	m	class:websocketpp::transport::asio::endpoint
m_io_service	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    io_service_ptr      m_io_service;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_isChildSelectorRightmost	tools/ndn-tlv-peek.cpp	/^  bool m_isChildSelectorRightmost;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_isDaemonMode	tools/ndn-autoconfig/main.cpp	/^  bool m_isDaemonMode;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_isDataReceived	tools/ndn-tlv-peek.cpp	/^  bool m_isDataReceived;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_isDataSent	tools/ndn-tlv-poke.cpp	/^  bool m_isDataSent;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_isFailed	daemon/face/face.hpp	/^  bool m_isFailed;$/;"	m	class:nfd::Face
m_isFirstUse	daemon/fw/broadcast-strategy.hpp	/^  bool m_isFirstUse;$/;"	m	class:nfd::fw::BroadcastStrategy
m_isForceDataSet	tools/ndn-tlv-poke.cpp	/^  bool m_isForceDataSet;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_isLastAsFinalBlockIdSet	tools/ndn-tlv-poke.cpp	/^  bool m_isLastAsFinalBlockIdSet;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_isListening	daemon/face/websocket-channel.hpp	/^  bool m_isListening;$/;"	m	class:nfd::WebSocketChannel
m_isLocal	daemon/face/face.hpp	/^  const bool m_isLocal;$/;"	m	class:nfd::Face
m_isLocalhopEnabled	rib/rib-manager.hpp	/^  bool m_isLocalhopEnabled;$/;"	m	class:nfd::rib::RibManager
m_isMultiAccess	daemon/face/face.hpp	/^  const bool m_isMultiAccess;$/;"	m	class:nfd::Face
m_isOutputXml	tools/nfd-status.cpp	/^  bool m_isOutputXml;$/;"	m	class:ndn::NfdStatus	file:
m_isPayloadOnlySet	tools/ndn-tlv-peek.cpp	/^  bool m_isPayloadOnlySet;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_isRunning	tests/limited-io.hpp	/^  bool m_isRunning;$/;"	m	class:nfd::tests::LimitedIo
m_isUnsolicited	daemon/table/cs-entry.hpp	/^  bool m_isUnsolicited;$/;"	m	class:nfd::cs::Entry
m_isUp	tests/daemon/fw/topology-tester.hpp	/^  bool m_isUp;$/;"	m	class:nfd::fw::tests::TopologyLink
m_isUpdateInProgress	rib/rib.hpp	/^  bool m_isUpdateInProgress;$/;"	m	class:nfd::rib::Rib
m_isUseDigestSha256Set	tools/ndn-tlv-poke.cpp	/^  bool m_isUseDigestSha256Set;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_is_http	websocketpp/websocketpp/connection.hpp	/^    bool m_is_http;$/;"	m	class:websocketpp::connection
m_is_secure	websocketpp/websocketpp/transport/debug/connection.hpp	/^    bool            m_is_secure;$/;"	m	class:websocketpp::transport::debug::connection
m_is_secure	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    bool            m_is_secure;$/;"	m	class:websocketpp::transport::iostream::connection
m_is_secure	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    bool            m_is_secure;$/;"	m	class:websocketpp::transport::iostream::endpoint
m_is_server	websocketpp/websocketpp/connection.hpp	/^    bool const              m_is_server;$/;"	m	class:websocketpp::connection
m_is_server	websocketpp/websocketpp/endpoint.hpp	/^    bool const                  m_is_server;$/;"	m	class:websocketpp::endpoint
m_is_server	websocketpp/websocketpp/transport/asio/connection.hpp	/^    const bool m_is_server;$/;"	m	class:websocketpp::transport::asio::connection
m_is_server	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    bool                m_is_server;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_is_server	websocketpp/websocketpp/transport/debug/connection.hpp	/^    bool const      m_is_server;$/;"	m	class:websocketpp::transport::debug::connection
m_is_server	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    bool const      m_is_server;$/;"	m	class:websocketpp::transport::iostream::connection
m_istate	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    z_stream m_istate;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_items	daemon/table/strategy-info-host.hpp	/^  std::map<int, shared_ptr<fw::StrategyInfo>> m_items;$/;"	m	class:nfd::StrategyInfoHost
m_keyChain	core/segment-publisher.hpp	/^  ndn::KeyChain& m_keyChain;$/;"	m	class:nfd::SegmentPublisher
m_keyChain	daemon/nfd.hpp	/^  ndn::KeyChain&               m_keyChain;$/;"	m	class:nfd::Nfd
m_keyChain	rib/auto-prefix-propagator.hpp	/^  ndn::KeyChain& m_keyChain;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_keyChain	rib/nrd.hpp	/^  ndn::KeyChain& m_keyChain;$/;"	m	class:nfd::rib::Nrd
m_keyChain	rib/rib-manager.hpp	/^  ndn::KeyChain& m_keyChain;$/;"	m	class:nfd::rib::RibManager
m_keyChain	tests/core/segment-publisher.t.cpp	/^  ndn::KeyChain m_keyChain;$/;"	m	class:nfd::tests::SegmentPublisherFixture	file:
m_keyChain	tests/identity-management-fixture.hpp	/^  ndn::KeyChain m_keyChain;$/;"	m	class:nfd::tests::IdentityManagementFixture
m_keyChain	tools/ndn-autoconfig/base.hpp	/^  KeyChain& m_keyChain;$/;"	m	class:ndn::tools::autoconfig::Base
m_keyChain	tools/ndn-autoconfig/main.cpp	/^  KeyChain m_keyChain;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_keyChain	tools/ndn-tlv-poke.cpp	/^  ndn::KeyChain m_keyChain;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_keyChain	tools/nfd-autoreg.cpp	/^  KeyChain m_keyChain;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_keyChain	tools/nfdc.hpp	/^  ndn::KeyChain m_keyChain;$/;"	m	class:nfdc::Nfdc
m_keys	tests/daemon/mgmt/command-validator.t.cpp	/^  ndn::KeyChain m_keys;$/;"	m	class:nfd::tests::CommandValidatorTester	file:
m_lastException	tests/limited-io.hpp	/^  std::exception m_lastException;$/;"	m	class:nfd::tests::LimitedIo
m_lastFaceId	daemon/fw/face-table.hpp	/^  FaceId m_lastFaceId;$/;"	m	class:nfd::FaceTable
m_lastIdleCheck	daemon/face/unicast-udp-transport.hpp	/^  time::steady_clock::TimePoint m_lastIdleCheck;$/;"	m	class:nfd::face::UnicastUdpTransport
m_lastNonce	daemon/table/pit-face-record.hpp	/^  uint32_t m_lastNonce;$/;"	m	class:nfd::pit::FaceRecord
m_lastRenewed	daemon/table/pit-face-record.hpp	/^  time::steady_clock::TimePoint m_lastRenewed;$/;"	m	class:nfd::pit::FaceRecord
m_len	websocketpp/websocketpp/transport/debug/connection.hpp	/^    size_t          m_len;$/;"	m	class:websocketpp::transport::debug::connection
m_len	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    size_t          m_len;$/;"	m	class:websocketpp::transport::iostream::connection
m_levelNames	core/logger-factory.hpp	/^  LevelMap m_levelNames;$/;"	m	class:nfd::LoggerFactory
m_lifetime	daemon/table/dead-nonce-list.hpp	/^  time::nanoseconds m_lifetime;$/;"	m	class:nfd::DeadNonceList
m_limit	daemon/table/cs-policy.hpp	/^  size_t m_limit;$/;"	m	class:nfd::cs::Policy
m_limitedIo	tests/daemon/face/face-history.hpp	/^  LimitedIo* m_limitedIo;$/;"	m	class:nfd::tests::FaceHistory
m_linkType	daemon/face/transport.hpp	/^  ndn::nfd::LinkType m_linkType;$/;"	m	class:nfd::face::Transport
m_links	tests/daemon/fw/topology-tester.hpp	/^  std::vector<shared_ptr<TopologyLink>> m_links;$/;"	m	class:nfd::fw::tests::TopologyTester
m_listen_backlog	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    int                 m_listen_backlog;$/;"	m	class:websocketpp::transport::asio::endpoint
m_loc	websocketpp/websocketpp/utilities.hpp	/^    std::locale const & m_loc;$/;"	m	class:websocketpp::utility::my_equal::std
m_localControlHeaderFeatures	daemon/face/local-face.hpp	/^  std::vector<bool> m_localControlHeaderFeatures;$/;"	m	class:nfd::LocalFace
m_localEndpoint	daemon/face/tcp-channel.hpp	/^  tcp::Endpoint m_localEndpoint;$/;"	m	class:nfd::TcpChannel
m_localEndpoint	daemon/face/udp-channel.hpp	/^  udp::Endpoint m_localEndpoint;$/;"	m	class:nfd::UdpChannel
m_localEndpoint	daemon/face/websocket-channel.hpp	/^  websocket::Endpoint m_localEndpoint;$/;"	m	class:nfd::WebSocketChannel
m_localUri	daemon/face/face.hpp	/^  const FaceUri m_localUri;$/;"	m	class:nfd::Face
m_localUri	daemon/face/transport.hpp	/^  FaceUri m_localUri;$/;"	m	class:nfd::face::Transport
m_local_close_code	websocketpp/websocketpp/connection.hpp	/^    close::status::value    m_local_close_code;$/;"	m	class:websocketpp::connection
m_local_close_reason	websocketpp/websocketpp/connection.hpp	/^    std::string             m_local_close_reason;$/;"	m	class:websocketpp::connection
m_localhopValidator	rib/rib-manager.hpp	/^  ndn::ValidatorConfig m_localhopValidator;$/;"	m	class:nfd::rib::RibManager
m_localhostValidator	rib/rib-manager.hpp	/^  ndn::ValidatorConfig m_localhostValidator;$/;"	m	class:nfd::rib::RibManager
m_lock	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    websocketpp::lib::mutex m_lock;$/;"	m	class:telemetry_client	file:
m_lock	websocketpp/websocketpp/logger/basic.hpp	/^    mutex_type m_lock;$/;"	m	class:websocketpp::log::basic
m_lock	websocketpp/websocketpp/random/random_device.hpp	/^        mutex_type m_lock;$/;"	m	class:websocketpp::random::random_device::int_generator
m_loggers	core/logger-factory.hpp	/^  LoggerMap m_loggers;$/;"	m	class:nfd::LoggerFactory
m_loggersGuard	core/logger-factory.hpp	/^  mutable std::mutex m_loggersGuard;$/;"	m	class:nfd::LoggerFactory
m_managedRib	rib/rib-manager.hpp	/^  Rib m_managedRib;$/;"	m	class:nfd::rib::RibManager
m_manager	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^  FaceManager m_manager;$/;"	m	class:nfd::tests::FaceManagerProcessConfigFixture	file:
m_manager	tests/daemon/mgmt/face-manager.t.cpp	/^  FaceManager m_manager;$/;"	m	class:nfd::tests::FaceManagerFixture	file:
m_manager	tests/daemon/mgmt/fib-manager.t.cpp	/^  FibManager m_manager;$/;"	m	class:nfd::tests::FibManagerFixture	file:
m_manager	tests/daemon/mgmt/manager-base.t.cpp	/^  ManagerBase m_manager;$/;"	m	class:nfd::tests::ManagerBaseFixture	file:
m_manager	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^  StrategyChoiceManager m_manager;$/;"	m	class:nfd::tests::StrategyChoiceManagerFixture	file:
m_manager	websocketpp/test/message_buffer/alloc.cpp	/^    con_msg_man_weak_ptr                m_manager;$/;"	m	struct:stub	file:
m_manager	websocketpp/websocketpp/message_buffer/message.hpp	/^    con_msg_man_weak_ptr        m_manager;$/;"	m	class:websocketpp::message_buffer::message
m_manager	websocketpp/websocketpp/message_buffer/pool.hpp	/^    con_msg_man_ptr             m_manager;$/;"	m	class:websocketpp::message_buffer::message
m_markEvent	daemon/table/dead-nonce-list.hpp	/^  scheduler::EventId m_markEvent;$/;"	m	class:nfd::DeadNonceList
m_markInterval	daemon/table/dead-nonce-list.hpp	/^  time::nanoseconds m_markInterval;$/;"	m	class:nfd::DeadNonceList
m_maxAddress	core/network.hpp	/^  boost::asio::ip::address m_maxAddress;$/;"	m	class:nfd::Network
m_maxInterval	daemon/fw/retx-suppression-exponential.hpp	/^  const Duration m_maxInterval;$/;"	m	class:nfd::fw::RetxSuppressionExponential
m_maxMultiplier	daemon/fw/rtt-estimator.hpp	/^  uint16_t m_maxMultiplier;$/;"	m	class:nfd::RttEstimator
m_maxPayload	daemon/face/ndnlp-slicer.hpp	/^  size_t m_maxPayload;$/;"	m	class:nfd::ndnlp::Slicer
m_maxRetryWait	rib/auto-prefix-propagator.hpp	/^  time::seconds m_maxRetryWait;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_maxSuffixComponents	tools/ndn-tlv-peek.cpp	/^  int m_maxSuffixComponents;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_max_http_body_size	websocketpp/websocketpp/endpoint.hpp	/^    size_t                      m_max_http_body_size;$/;"	m	class:websocketpp::endpoint
m_max_message_size	websocketpp/websocketpp/connection.hpp	/^    size_t                  m_max_message_size;$/;"	m	class:websocketpp::connection
m_max_message_size	websocketpp/websocketpp/endpoint.hpp	/^    size_t                      m_max_message_size;$/;"	m	class:websocketpp::endpoint
m_max_message_size	websocketpp/websocketpp/processors/processor.hpp	/^    size_t m_max_message_size;$/;"	m	class:websocketpp::processor::processor
m_measurements	daemon/fw/forwarder.hpp	/^  Measurements       m_measurements;$/;"	m	class:nfd::Forwarder
m_measurements	daemon/fw/strategy.hpp	/^  MeasurementsAccessor m_measurements;$/;"	m	class:nfd::fw::Strategy
m_measurements	daemon/table/measurements-accessor.hpp	/^  Measurements& m_measurements;$/;"	m	class:nfd::MeasurementsAccessor
m_measurements	tests/daemon/mgmt/tables-config-section.t.cpp	/^  Measurements& m_measurements;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_measurementsEntry	daemon/table/name-tree-entry.hpp	/^  shared_ptr<measurements::Entry> m_measurementsEntry;$/;"	m	class:nfd::name_tree::Entry
m_message	tests/core/simple-notification.hpp	/^  std::string m_message;$/;"	m	class:nfd::tests::SimpleNotification
m_message	websocketpp/examples/debug_client/debug_client.cpp	/^    std::chrono::high_resolution_clock::time_point m_message;$/;"	m	class:perftest	file:
m_message_handler	websocketpp/websocketpp/connection.hpp	/^    message_handler         m_message_handler;$/;"	m	class:websocketpp::connection
m_message_handler	websocketpp/websocketpp/endpoint.hpp	/^    message_handler             m_message_handler;$/;"	m	class:websocketpp::endpoint
m_messages	websocketpp/examples/utility_client/utility_client.cpp	/^    std::vector<std::string> m_messages;$/;"	m	class:connection_metadata	file:
m_messages	websocketpp/tutorials/utility_client/step6.cpp	/^    std::vector<std::string> m_messages;$/;"	m	class:connection_metadata	file:
m_method	websocketpp/websocketpp/http/request.hpp	/^    std::string                     m_method;$/;"	m	class:websocketpp::http::parser::request
m_mgmtModuleName	daemon/mgmt/manager-base.hpp	/^  std::string       m_mgmtModuleName;$/;"	m	class:nfd::ManagerBase
m_minAddress	core/network.hpp	/^  boost::asio::ip::address m_minAddress;$/;"	m	class:nfd::Network
m_minNBuckets	daemon/table/name-tree.hpp	/^  size_t                        m_minNBuckets; \/\/ Minimum number of hash buckets$/;"	m	class:nfd::NameTree
m_minRetxInterval	daemon/fw/retx-suppression-fixed.hpp	/^  const time::milliseconds m_minRetxInterval;$/;"	m	class:nfd::fw::RetxSuppressionFixed
m_minRto	daemon/fw/rtt-estimator.hpp	/^  double m_minRto;$/;"	m	class:nfd::RttEstimator
m_minSuffixComponents	tools/ndn-tlv-peek.cpp	/^  int m_minSuffixComponents;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_missingFired	tests/core/config-file.t.cpp	/^  bool m_missingFired;$/;"	m	class:nfd::tests::MissingCallbackFixture	file:
m_moduleName	core/logger.hpp	/^  std::string m_moduleName;$/;"	m	class:nfd::Logger
m_msg	websocketpp/websocketpp/error.hpp	/^    std::string m_msg;$/;"	m	class:websocketpp::exception
m_msg	websocketpp/websocketpp/http/constants.hpp	/^        std::string         m_msg;$/;"	m	class:websocketpp::http::exception
m_msg_manager	websocketpp/websocketpp/connection.hpp	/^    con_msg_manager_ptr     m_msg_manager;$/;"	m	class:websocketpp::connection
m_msg_manager	websocketpp/websocketpp/processors/hybi00.hpp	/^    msg_manager_ptr m_msg_manager;$/;"	m	class:websocketpp::processor::hybi00
m_msg_manager	websocketpp/websocketpp/processors/hybi13.hpp	/^    msg_manager_ptr m_msg_manager;$/;"	m	class:websocketpp::processor::hybi13
m_msg_ptr	websocketpp/websocketpp/processors/hybi00.hpp	/^    message_ptr m_msg_ptr;$/;"	m	class:websocketpp::processor::hybi00
m_mtu	daemon/face/ndnlp-slicer.hpp	/^  size_t m_mtu;$/;"	m	class:nfd::ndnlp::Slicer
m_mtu	daemon/face/transport.hpp	/^  ssize_t m_mtu;$/;"	m	class:nfd::face::Transport
m_multicastFaces	daemon/face/ethernet-factory.hpp	/^  MulticastFaceMap m_multicastFaces;$/;"	m	class:nfd::EthernetFactory
m_multicastFaces	daemon/face/udp-factory.hpp	/^  MulticastFaceMap m_multicastFaces;$/;"	m	class:nfd::UdpFactory
m_multicastGroup	daemon/face/multicast-udp-transport.hpp	/^  protocol::endpoint m_multicastGroup;$/;"	m	class:nfd::face::MulticastUdpTransport
m_multiplier	daemon/fw/retx-suppression-exponential.hpp	/^  const float m_multiplier;$/;"	m	class:nfd::fw::RetxSuppressionExponential
m_multiplier	daemon/fw/rtt-estimator.hpp	/^  uint16_t m_multiplier;$/;"	m	class:nfd::RttEstimator
m_mustBeFresh	tools/ndn-tlv-peek.cpp	/^  bool m_mustBeFresh;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_mutex	websocketpp/docs/simple_count_server_thread.cpp	/^    std::mutex m_mutex;$/;"	m	class:count_server	file:
m_mutex	websocketpp/websocketpp/endpoint.hpp	/^    mutable mutex_type          m_mutex;$/;"	m	class:websocketpp::endpoint
m_nASections	tests/core/config-file.t.cpp	/^  int m_nASections;$/;"	m	class:nfd::tests::DummySubscriber	file:
m_nBSections	tests/core/config-file.t.cpp	/^  int m_nBSections;$/;"	m	class:nfd::tests::DummySubscriber	file:
m_nBuckets	daemon/table/name-tree.hpp	/^  size_t                        m_nBuckets; \/\/ Number of hash buckets$/;"	m	class:nfd::NameTree
m_nDropped	daemon/face/ethernet-face.hpp	/^  unsigned int m_nDropped;$/;"	m	class:nfd::EthernetFace
m_nInBytes	daemon/face/face-counters.hpp	/^  ByteCounter m_nInBytes;$/;"	m	class:nfd::LinkLayerCounters
m_nInDatas	daemon/face/face-counters.hpp	/^  PacketCounter m_nInDatas;$/;"	m	class:nfd::NetworkLayerCounters
m_nInInterests	daemon/face/face-counters.hpp	/^  PacketCounter m_nInInterests;$/;"	m	class:nfd::NetworkLayerCounters
m_nItems	daemon/table/fib.hpp	/^  size_t m_nItems;$/;"	m	class:nfd::Fib
m_nItems	daemon/table/measurements.hpp	/^  size_t m_nItems;$/;"	m	class:nfd::Measurements
m_nItems	daemon/table/name-tree.hpp	/^  size_t                        m_nItems;  \/\/ Number of items being stored$/;"	m	class:nfd::NameTree
m_nItems	daemon/table/pit.hpp	/^  size_t m_nItems;$/;"	m	class:nfd::Pit
m_nItems	daemon/table/strategy-choice.hpp	/^  size_t m_nItems;$/;"	m	class:nfd::StrategyChoice
m_nItems	rib/rib.hpp	/^  size_t m_nItems;$/;"	m	class:nfd::rib::Rib
m_nOpsRemaining	tests/limited-io.hpp	/^  int m_nOpsRemaining;$/;"	m	class:nfd::tests::LimitedIo
m_nOptions	tools/nfdc.hpp	/^  int m_nOptions;$/;"	m	class:nfdc::Nfdc
m_nOutBytes	daemon/face/face-counters.hpp	/^  ByteCounter m_nOutBytes;$/;"	m	class:nfd::LinkLayerCounters
m_nOutDatas	daemon/face/face-counters.hpp	/^  PacketCounter m_nOutDatas;$/;"	m	class:nfd::NetworkLayerCounters
m_nOutInterests	daemon/face/face-counters.hpp	/^  PacketCounter m_nOutInterests;$/;"	m	class:nfd::NetworkLayerCounters
m_nRemainingACallbacks	tests/core/config-file.t.cpp	/^  int m_nRemainingACallbacks;$/;"	m	class:nfd::tests::DummySubscriber	file:
m_nRemainingBCallbacks	tests/core/config-file.t.cpp	/^  int m_nRemainingBCallbacks;$/;"	m	class:nfd::tests::DummySubscriber	file:
m_nRoutesWithCaptureSet	rib/rib-entry.hpp	/^  uint64_t m_nRoutesWithCaptureSet;$/;"	m	class:nfd::rib::RibEntry
m_nSamples	daemon/fw/rtt-estimator.hpp	/^  uint32_t m_nSamples;$/;"	m	class:nfd::RttEstimator
m_name	daemon/fw/strategy.hpp	/^  Name m_name;$/;"	m	class:nfd::fw::Strategy
m_name	daemon/table/measurements-entry.hpp	/^  Name m_name;$/;"	m	class:nfd::measurements::Entry
m_name	rib/rib-entry.hpp	/^  Name m_name;$/;"	m	class:nfd::rib::RibEntry
m_name	rib/rib-update.hpp	/^  Name m_name;$/;"	m	class:nfd::rib::RibUpdate
m_name	tools/nfdc.hpp	/^  std::string m_name;$/;"	m	class:nfdc::Nfdc
m_nameTree	daemon/fw/forwarder.hpp	/^  NameTree           m_nameTree;$/;"	m	class:nfd::Forwarder
m_nameTree	daemon/table/fib.hpp	/^  NameTree& m_nameTree;$/;"	m	class:nfd::Fib
m_nameTree	daemon/table/measurements.hpp	/^  NameTree& m_nameTree;$/;"	m	class:nfd::Measurements
m_nameTree	daemon/table/name-tree.hpp	/^    const NameTree*                             m_nameTree;$/;"	m	class:nfd::NameTree::const_iterator
m_nameTree	daemon/table/pit.hpp	/^  NameTree& m_nameTree;$/;"	m	class:nfd::Pit
m_nameTree	daemon/table/strategy-choice.hpp	/^  NameTree& m_nameTree;$/;"	m	class:nfd::StrategyChoice
m_nameTreeEntry	daemon/table/fib-entry.hpp	/^  shared_ptr<name_tree::Entry> m_nameTreeEntry;$/;"	m	class:nfd::fib::Entry
m_nameTreeEntry	daemon/table/measurements-entry.hpp	/^  shared_ptr<name_tree::Entry> m_nameTreeEntry;$/;"	m	class:nfd::measurements::Entry
m_nameTreeEntry	daemon/table/pit-entry.hpp	/^  shared_ptr<name_tree::Entry> m_nameTreeEntry;$/;"	m	class:nfd::pit::Entry
m_nameTreeEntry	daemon/table/strategy-choice-entry.hpp	/^  shared_ptr<name_tree::Entry> m_nameTreeEntry;$/;"	m	class:nfd::strategy_choice::Entry
m_nameTreeIterator	daemon/table/fib.hpp	/^    NameTree::const_iterator m_nameTreeIterator;$/;"	m	class:nfd::Fib::const_iterator
m_nameTreeIterator	daemon/table/pit.hpp	/^    NameTree::const_iterator m_nameTreeIterator;$/;"	m	class:nfd::Pit::const_iterator
m_nameTreeIterator	daemon/table/strategy-choice.hpp	/^    NameTree::const_iterator m_nameTreeIterator;$/;"	m	class:nfd::StrategyChoice::const_iterator
m_names	tests/daemon/table/name-tree.t.cpp	/^  std::unordered_set<Name> m_names;$/;"	m	class:nfd::tests::EnumerationVerifier	file:
m_needChannelStatusRetrieval	tools/nfd-status.cpp	/^  bool m_needChannelStatusRetrieval;$/;"	m	class:ndn::NfdStatus	file:
m_needFaceStatusRetrieval	tools/nfd-status.cpp	/^  bool m_needFaceStatusRetrieval;$/;"	m	class:ndn::NfdStatus	file:
m_needFibEnumerationRetrieval	tools/nfd-status.cpp	/^  bool m_needFibEnumerationRetrieval;$/;"	m	class:ndn::NfdStatus	file:
m_needRibStatusRetrieval	tools/nfd-status.cpp	/^  bool m_needRibStatusRetrieval;$/;"	m	class:ndn::NfdStatus	file:
m_needStrategyChoiceRetrieval	tools/nfd-status.cpp	/^  bool m_needStrategyChoiceRetrieval;$/;"	m	class:ndn::NfdStatus	file:
m_needVersionRetrieval	tools/nfd-status.cpp	/^  bool m_needVersionRetrieval;$/;"	m	class:ndn::NfdStatus	file:
m_networkMonitor	daemon/nfd.hpp	/^  unique_ptr<ndn::util::NetworkMonitor> m_networkMonitor;$/;"	m	class:nfd::Nfd
m_networkMonitor	tools/ndn-autoconfig/main.cpp	/^  unique_ptr<util::NetworkMonitor> m_networkMonitor;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_networkRegionTable	daemon/fw/forwarder.hpp	/^  NetworkRegionTable m_networkRegionTable;$/;"	m	class:nfd::Forwarder
m_networkRegionTable	daemon/mgmt/tables-config-section.hpp	/^  NetworkRegionTable& m_networkRegionTable;$/;"	m	class:nfd::TablesConfigSection
m_networkRegionTable	tests/daemon/mgmt/tables-config-section.t.cpp	/^  NetworkRegionTable& m_networkRegionTable;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_next	daemon/face/ndnlp-sequence-generator.hpp	/^  uint64_t m_next;$/;"	m	class:nfd::ndnlp::SequenceGenerator
m_next	daemon/table/name-tree-entry.hpp	/^  Node* m_next; \/\/ Next Name Tree Node (to resolve hash collision)$/;"	m	class:nfd::name_tree::Node
m_nextHops	daemon/table/fib-entry.hpp	/^  NextHopList m_nextHops;$/;"	m	class:nfd::fib::Entry
m_nextStageOnFailure	tools/ndn-autoconfig/base.hpp	/^  NextStageCallback m_nextStageOnFailure;$/;"	m	class:ndn::tools::autoconfig::Base
m_next_id	websocketpp/examples/utility_client/utility_client.cpp	/^    int m_next_id;$/;"	m	class:websocket_endpoint	file:
m_next_id	websocketpp/tutorials/utility_client/step4.cpp	/^    int m_next_id;$/;"	m	class:websocket_endpoint	file:
m_next_id	websocketpp/tutorials/utility_client/step5.cpp	/^    int m_next_id;$/;"	m	class:websocket_endpoint	file:
m_next_id	websocketpp/tutorials/utility_client/step6.cpp	/^    int m_next_id;$/;"	m	class:websocket_endpoint	file:
m_next_sessionid	websocketpp/examples/associative_storage/associative_storage.cpp	/^    int m_next_sessionid;$/;"	m	class:print_server	file:
m_next_sessionid	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    int m_next_sessionid;$/;"	m	class:print_server	file:
m_nfd	daemon/main.cpp	/^  Nfd                     m_nfd;$/;"	m	class:nfd::NfdRunner	file:
m_nfdController	rib/auto-prefix-propagator.hpp	/^  ndn::nfd::Controller& m_nfdController;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_nfdController	rib/rib-manager.hpp	/^  ndn::nfd::Controller m_nfdController;$/;"	m	class:nfd::rib::RibManager
m_nfdKeyChain	daemon/main.cpp	/^  ndn::KeyChain           m_nfdKeyChain;$/;"	m	class:nfd::NfdRunner	file:
m_node	daemon/table/name-tree-entry.hpp	/^  Node* m_node;$/;"	m	class:nfd::name_tree::Entry
m_onFaceCreatedCallback	daemon/face/websocket-channel.hpp	/^  FaceCreatedCallback m_onFaceCreatedCallback;$/;"	m	class:nfd::WebSocketChannel
m_onFail	tools/nfdc.hpp	/^    FailureCallback m_onFail;$/;"	m	class:nfdc::Nfdc::FaceIdFetcher
m_onSendBatchFromQueue	rib/rib.hpp	/^  function<void(RibUpdateBatch)> m_onSendBatchFromQueue;$/;"	m	class:nfd::rib::Rib
m_onSucceed	tools/nfdc.hpp	/^    SuccessCallback m_onSucceed;$/;"	m	class:nfdc::Nfdc::FaceIdFetcher
m_opcode	websocketpp/test/message_buffer/alloc.cpp	/^    websocketpp::frame::opcode::value   m_opcode;$/;"	m	struct:stub	file:
m_opcode	websocketpp/websocketpp/message_buffer/message.hpp	/^    frame::opcode::value        m_opcode;$/;"	m	class:websocketpp::message_buffer::message
m_opcode	websocketpp/websocketpp/message_buffer/pool.hpp	/^    frame::opcode::value        m_opcode;$/;"	m	class:websocketpp::message_buffer::message
m_open	websocketpp/examples/debug_client/debug_client.cpp	/^    std::chrono::high_resolution_clock::time_point m_open;$/;"	m	class:perftest	file:
m_open	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    bool m_open;$/;"	m	class:telemetry_client	file:
m_open_handler	websocketpp/websocketpp/connection.hpp	/^    open_handler            m_open_handler;$/;"	m	class:websocketpp::connection
m_open_handler	websocketpp/websocketpp/endpoint.hpp	/^    open_handler                m_open_handler;$/;"	m	class:websocketpp::endpoint
m_open_handshake_timeout_dur	websocketpp/websocketpp/connection.hpp	/^    long                    m_open_handshake_timeout_dur;$/;"	m	class:websocketpp::connection
m_open_handshake_timeout_dur	websocketpp/websocketpp/endpoint.hpp	/^    long                        m_open_handshake_timeout_dur;$/;"	m	class:websocketpp::endpoint
m_options	daemon/face/generic-link-service.hpp	/^  Options m_options;$/;"	m	class:nfd::face::GenericLinkService
m_origin	tools/nfdc.hpp	/^  uint64_t m_origin;$/;"	m	class:nfdc::Nfdc
m_out	websocketpp/websocketpp/logger/basic.hpp	/^    std::ostream * m_out;$/;"	m	class:websocketpp::log::basic
m_outRecords	daemon/table/pit-entry.hpp	/^  OutRecordCollection m_outRecords;$/;"	m	class:nfd::pit::Entry
m_output_stream	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    std::ostream *  m_output_stream;$/;"	m	class:websocketpp::transport::iostream::connection
m_output_stream	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    std::ostream *  m_output_stream;$/;"	m	class:websocketpp::transport::iostream::endpoint
m_parent	daemon/table/name-tree-entry.hpp	/^  shared_ptr<Entry> m_parent;     \/\/ Pointing to the parent entry.$/;"	m	class:nfd::name_tree::Entry
m_parent	rib/rib-entry.hpp	/^  shared_ptr<RibEntry> m_parent;$/;"	m	class:nfd::rib::RibEntry
m_partialMessages	daemon/face/ndnlp-partial-message-store.hpp	/^  std::unordered_map<uint64_t, PartialMessage> m_partialMessages;$/;"	m	class:nfd::ndnlp::PartialMessageStore
m_payload	websocketpp/websocketpp/message_buffer/message.hpp	/^    std::string                 m_payload;$/;"	m	class:websocketpp::message_buffer::message
m_payload	websocketpp/websocketpp/message_buffer/pool.hpp	/^    std::string                 m_payload;$/;"	m	class:websocketpp::message_buffer::message
m_payloads	daemon/face/ndnlp-partial-message-store.hpp	/^  std::vector<Block> m_payloads;$/;"	m	class:nfd::ndnlp::PartialMessage
m_pcap	daemon/face/ethernet-face.hpp	/^  unique_ptr<pcap_t, void(*)(pcap_t*)> m_pcap;$/;"	m	class:nfd::EthernetFace
m_permessage_deflate	websocketpp/websocketpp/processors/hybi13.hpp	/^    permessage_deflate_type m_permessage_deflate;$/;"	m	class:websocketpp::processor::hybi13
m_persistency	daemon/face/face.hpp	/^  ndn::nfd::FacePersistency m_persistency;$/;"	m	class:nfd::Face
m_persistency	daemon/face/transport.hpp	/^  ndn::nfd::FacePersistency m_persistency;$/;"	m	class:nfd::face::Transport
m_pingEventId	daemon/face/websocket-face.hpp	/^  scheduler::EventId m_pingEventId;$/;"	m	class:nfd::WebSocketFace
m_pingInterval	daemon/face/websocket-channel.hpp	/^  time::milliseconds m_pingInterval;$/;"	m	class:nfd::WebSocketChannel
m_ping_handler	websocketpp/websocketpp/connection.hpp	/^    ping_handler            m_ping_handler;$/;"	m	class:websocketpp::connection
m_ping_handler	websocketpp/websocketpp/endpoint.hpp	/^    ping_handler                m_ping_handler;$/;"	m	class:websocketpp::endpoint
m_ping_timer	websocketpp/websocketpp/connection.hpp	/^    timer_ptr               m_ping_timer;$/;"	m	class:websocketpp::connection
m_pit	daemon/fw/forwarder.hpp	/^  Pit                m_pit;$/;"	m	class:nfd::Forwarder
m_pit	tests/daemon/mgmt/tables-config-section.t.cpp	/^  Pit& m_pit;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_pitEntries	daemon/table/name-tree-entry.hpp	/^  std::vector<shared_ptr<pit::Entry> > m_pitEntries;$/;"	m	class:nfd::name_tree::Entry
m_policy	daemon/table/cs.hpp	/^  unique_ptr<Policy> m_policy;$/;"	m	class:nfd::cs::Cs
m_policyName	daemon/table/cs-policy.hpp	/^  std::string m_policyName;$/;"	m	class:nfd::cs::Policy
m_pong_handler	websocketpp/websocketpp/connection.hpp	/^    pong_handler            m_pong_handler;$/;"	m	class:websocketpp::connection
m_pong_handler	websocketpp/websocketpp/endpoint.hpp	/^    pong_handler                m_pong_handler;$/;"	m	class:websocketpp::endpoint
m_pong_timeout_dur	websocketpp/websocketpp/connection.hpp	/^    long                    m_pong_timeout_dur;$/;"	m	class:websocketpp::connection
m_pong_timeout_dur	websocketpp/websocketpp/endpoint.hpp	/^    long                        m_pong_timeout_dur;$/;"	m	class:websocketpp::endpoint
m_pong_timeout_handler	websocketpp/websocketpp/connection.hpp	/^    pong_timeout_handler    m_pong_timeout_handler;$/;"	m	class:websocketpp::connection
m_pong_timeout_handler	websocketpp/websocketpp/endpoint.hpp	/^    pong_timeout_handler        m_pong_timeout_handler;$/;"	m	class:websocketpp::endpoint
m_port	websocketpp/websocketpp/uri.hpp	/^    uint16_t    m_port;$/;"	m	class:websocketpp::uri
m_prefix	core/segment-publisher.hpp	/^  const Name m_prefix;$/;"	m	class:nfd::SegmentPublisher
m_prefix	daemon/table/fib-entry.hpp	/^  Name m_prefix;$/;"	m	class:nfd::fib::Entry
m_prefix	daemon/table/name-tree-entry.hpp	/^  Name m_prefix;$/;"	m	class:nfd::name_tree::Entry
m_prefix	daemon/table/strategy-choice-entry.hpp	/^  Name m_prefix;$/;"	m	class:nfd::strategy_choice::Entry
m_prefix	tests/other/cs-benchmark.cpp	/^    Name m_prefix;$/;"	m	class:nfd::tests::CsBenchmarkFixture::SimpleNameGenerator	file:
m_prefixName	tools/ndn-tlv-peek.cpp	/^  std::string m_prefixName;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_prefixName	tools/ndn-tlv-poke.cpp	/^  ndn::Name m_prefixName;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_prefixPropagator	rib/rib-manager.hpp	/^  AutoPrefixPropagator m_prefixPropagator;$/;"	m	class:nfd::rib::RibManager
m_prefixes	tools/ndn-autoconfig-server.cpp	/^  std::vector<Name> m_prefixes;$/;"	m	class:ndn::PrefixCollection	file:
m_prepared	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool                        m_prepared;$/;"	m	class:websocketpp::message_buffer::message
m_prev	daemon/table/name-tree-entry.hpp	/^  Node* m_prev; \/\/ Previous Name Tree Node (to resolve hash collision)$/;"	m	class:nfd::name_tree::Node
m_processor	websocketpp/websocketpp/connection.hpp	/^    processor_ptr           m_processor;$/;"	m	class:websocketpp::connection
m_programName	tools/ndn-tlv-peek.cpp	/^  std::string m_programName;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_programName	tools/ndn-tlv-poke.cpp	/^  std::string m_programName;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_programName	tools/nfdc.hpp	/^  const char* m_programName;$/;"	m	class:nfdc::Nfdc
m_prohibitedEndpoints	daemon/face/tcp-factory.hpp	/^  std::set<tcp::Endpoint> m_prohibitedEndpoints;$/;"	m	class:nfd::TcpFactory
m_prohibitedEndpoints	daemon/face/udp-factory.hpp	/^  std::set<udp::Endpoint> m_prohibitedEndpoints;$/;"	m	class:nfd::UdpFactory
m_propagatedEntries	rib/auto-prefix-propagator.hpp	/^  PropagatedEntryList m_propagatedEntries;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_propagationStatus	rib/propagated-entry.hpp	/^  PropagationStatus m_propagationStatus;$/;"	m	class:nfd::rib::PropagatedEntry
m_propagator	tests/rib/auto-prefix-propagator.t.cpp	/^  AutoPrefixPropagator                       m_propagator;$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture	file:
m_proxy	websocketpp/websocketpp/transport/asio/connection.hpp	/^    std::string m_proxy;$/;"	m	class:websocketpp::transport::asio::connection
m_proxy_data	websocketpp/websocketpp/transport/asio/connection.hpp	/^    lib::shared_ptr<proxy_data> m_proxy_data;$/;"	m	class:websocketpp::transport::asio::connection
m_publisher	tests/core/segment-publisher.t.cpp	/^  SegmentPublisherTester<N> m_publisher;$/;"	m	class:nfd::tests::SegmentPublisherFixture	file:
m_queryName	daemon/table/cs-entry-impl.hpp	/^  Name m_queryName;$/;"	m	class:nfd::cs::EntryImpl
m_queue	daemon/table/cs-policy-lru.hpp	/^  Queue m_queue;$/;"	m	class:nfd::cs::lru::LruPolicy
m_queue	daemon/table/dead-nonce-list.hpp	/^  Queue& m_queue;$/;"	m	class:nfd::DeadNonceList
m_queues	daemon/table/cs-policy-priority-fifo.hpp	/^  Queue m_queues[QUEUE_MAX];$/;"	m	class:nfd::cs::priority_fifo::PriorityFifoPolicy
m_rePropagateEvent	rib/propagated-entry.hpp	/^  scheduler::ScopedEventId m_rePropagateEvent;$/;"	m	class:nfd::rib::PropagatedEntry
m_read	websocketpp/websocketpp/http/response.hpp	/^    size_t                          m_read;$/;"	m	class:websocketpp::http::parser::response
m_read_flag	websocketpp/websocketpp/connection.hpp	/^    bool m_read_flag;$/;"	m	class:websocketpp::connection
m_read_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    read_handler        m_read_handler;$/;"	m	class:websocketpp::transport::asio::connection
m_read_handler	websocketpp/websocketpp/transport/debug/connection.hpp	/^    read_handler    m_read_handler;$/;"	m	class:websocketpp::transport::debug::connection
m_read_handler	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    read_handler    m_read_handler;$/;"	m	class:websocketpp::transport::iostream::connection
m_read_handler_allocator	websocketpp/websocketpp/transport/asio/connection.hpp	/^    handler_allocator   m_read_handler_allocator;$/;"	m	class:websocketpp::transport::asio::connection
m_read_mutex	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    mutex_type      m_read_mutex;$/;"	m	class:websocketpp::transport::iostream::connection
m_reading	websocketpp/websocketpp/transport/debug/connection.hpp	/^    bool            m_reading;$/;"	m	class:websocketpp::transport::debug::connection
m_reading	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    bool            m_reading;$/;"	m	class:websocketpp::transport::iostream::connection
m_ready	websocketpp/websocketpp/http/request.hpp	/^    bool                            m_ready;$/;"	m	class:websocketpp::http::parser::request
m_reason	tests/limited-io.hpp	/^  StopReason m_reason;$/;"	m	class:nfd::tests::LimitedIo
m_reassemblers	daemon/face/ethernet-face.hpp	/^  std::unordered_map<ethernet::Address, Reassembler> m_reassemblers;$/;"	m	class:nfd::EthernetFace
m_receiveBuffer	daemon/face/datagram-transport.hpp	/^  std::array<uint8_t, ndn::MAX_NDN_PACKET_SIZE> m_receiveBuffer;$/;"	m	class:nfd::face::DatagramTransport
m_receiveDataConn	tests/daemon/face/face-history.hpp	/^  signal::ScopedConnection m_receiveDataConn;$/;"	m	class:nfd::tests::FaceHistory
m_receiveInterestConn	tests/daemon/face/face-history.hpp	/^  signal::ScopedConnection m_receiveInterestConn;$/;"	m	class:nfd::tests::FaceHistory
m_received	daemon/face/ndnlp-partial-message-store.hpp	/^  size_t m_received;$/;"	m	class:nfd::ndnlp::PartialMessage
m_refreshInterval	rib/auto-prefix-propagator.hpp	/^  time::seconds m_refreshInterval;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_registeredFaces	rib/rib-manager.hpp	/^  FaceIdSet m_registeredFaces;$/;"	m	class:nfd::rib::RibManager
m_reloadConfigEvent	daemon/nfd.hpp	/^  scheduler::ScopedEventId              m_reloadConfigEvent;$/;"	m	class:nfd::Nfd
m_reloadSignalSet	daemon/main.cpp	/^  boost::asio::signal_set m_reloadSignalSet;$/;"	m	class:nfd::NfdRunner	file:
m_remoteEndpoint	daemon/face/udp-channel.hpp	/^  udp::Endpoint m_remoteEndpoint;$/;"	m	class:nfd::UdpChannel
m_remoteUri	daemon/face/face.hpp	/^  const FaceUri m_remoteUri;$/;"	m	class:nfd::Face
m_remoteUri	daemon/face/transport.hpp	/^  FaceUri m_remoteUri;$/;"	m	class:nfd::face::Transport
m_remote_close_code	websocketpp/websocketpp/connection.hpp	/^    close::status::value    m_remote_close_code;$/;"	m	class:websocketpp::connection
m_remote_close_reason	websocketpp/websocketpp/connection.hpp	/^    std::string             m_remote_close_reason;$/;"	m	class:websocketpp::connection
m_remote_endpoint	websocketpp/websocketpp/transport/debug/connection.hpp	/^    std::string     m_remote_endpoint;$/;"	m	class:websocketpp::transport::debug::connection
m_remote_endpoint	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    std::string     m_remote_endpoint;$/;"	m	class:websocketpp::transport::iostream::connection
m_removeFaceInfoConn	daemon/fw/access-strategy.hpp	/^  signal::ScopedConnection m_removeFaceInfoConn;$/;"	m	class:nfd::fw::AccessStrategy
m_request	websocketpp/websocketpp/connection.hpp	/^    request_type            m_request;$/;"	m	class:websocketpp::connection
m_requested_subprotocols	websocketpp/websocketpp/connection.hpp	/^    std::vector<std::string> m_requested_subprotocols;$/;"	m	class:websocketpp::connection
m_requests	tests/rib/auto-prefix-propagator.t.cpp	/^  std::vector<Interest>&                     m_requests; \/\/ store sent out requests$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture	file:
m_resolver	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    resolver_ptr        m_resolver;$/;"	m	class:websocketpp::transport::asio::endpoint
m_resource	websocketpp/websocketpp/uri.hpp	/^    std::string m_resource;$/;"	m	class:websocketpp::uri
m_response	websocketpp/websocketpp/connection.hpp	/^    response_type           m_response;$/;"	m	class:websocketpp::connection
m_responses	tests/daemon/mgmt/manager-common-fixture.hpp	/^  std::vector<Data>&                     m_responses; \/\/ a reference of m_face->sentDatas$/;"	m	class:nfd::tests::ManagerCommonFixture
m_retxSuppression	daemon/fw/access-strategy.hpp	/^  RetxSuppressionFixed m_retxSuppression;$/;"	m	class:nfd::fw::AccessStrategy
m_retxSuppression	daemon/fw/best-route-strategy2.hpp	/^  RetxSuppressionExponential m_retxSuppression;$/;"	m	class:nfd::fw::BestRouteStrategy2
m_reuse_addr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    bool                m_reuse_addr;$/;"	m	class:websocketpp::transport::asio::endpoint
m_rib	rib/auto-prefix-propagator.hpp	/^  Rib& m_rib;$/;"	m	class:nfd::rib::AutoPrefixPropagator
m_rib	rib/fib-updater.hpp	/^  const Rib& m_rib;$/;"	m	class:nfd::rib::FibUpdater
m_rib	rib/rib-status-publisher.hpp	/^  const Rib& m_rib;$/;"	m	class:nfd::rib::RibStatusPublisher
m_rib	rib/rib.hpp	/^  RibTable m_rib;$/;"	m	class:nfd::rib::Rib
m_rib	tests/rib/auto-prefix-propagator.t.cpp	/^  Rib                                        m_rib;$/;"	m	class:nfd::rib::tests::AutoPrefixPropagatorFixture	file:
m_ribManager	rib/nrd.hpp	/^  unique_ptr<RibManager> m_ribManager;$/;"	m	class:nfd::rib::Nrd
m_ribStatusPublisher	rib/rib-manager.hpp	/^  RibStatusPublisher m_ribStatusPublisher;$/;"	m	class:nfd::rib::RibManager
m_rng	websocketpp/websocketpp/connection.hpp	/^    rng_type & m_rng;$/;"	m	class:websocketpp::connection
m_rng	websocketpp/websocketpp/endpoint.hpp	/^    rng_type m_rng;$/;"	m	class:websocketpp::endpoint
m_rng	websocketpp/websocketpp/processors/hybi13.hpp	/^    rng_type & m_rng;$/;"	m	class:websocketpp::processor::hybi13
m_rng	websocketpp/websocketpp/random/random_device.hpp	/^        lib::random_device m_rng;$/;"	m	class:websocketpp::random::random_device::int_generator
m_routablePrefixesData	tools/ndn-autoconfig-server.cpp	/^  shared_ptr<Data> m_routablePrefixesData;$/;"	m	class:ndn::NdnAutoconfigServer	file:
m_route	rib/rib-update.hpp	/^  Route m_route;$/;"	m	class:nfd::rib::RibUpdate
m_routes	rib/rib-entry.hpp	/^  RouteList m_routes;$/;"	m	class:nfd::rib::RibEntry
m_rtt	daemon/fw/rtt-estimator.hpp	/^  double m_rtt;$/;"	m	class:nfd::RttEstimator
m_s2c_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    uint8_t m_s2c_max_window_bits;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_s2c_max_window_bits_mode	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    mode::value m_s2c_max_window_bits_mode;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_s2c_no_context_takeover	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    bool m_s2c_no_context_takeover;$/;"	m	class:websocketpp::extensions::permessage_deflate::enabled
m_savedBuf	tests/core/logger.t.cpp	/^  std::streambuf* m_savedBuf;$/;"	m	class:nfd::tests::LoggerFixture	file:
m_savedLevel	tests/core/logger.t.cpp	/^  LogLevel m_savedLevel;$/;"	m	class:nfd::tests::LoggerFixture	file:
m_scheduler	tools/ndn-autoconfig/main.cpp	/^  util::Scheduler m_scheduler;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_scheme	websocketpp/websocketpp/uri.hpp	/^    std::string m_scheme;$/;"	m	class:websocketpp::uri
m_scope	daemon/face/transport.hpp	/^  ndn::nfd::FaceScope m_scope;$/;"	m	class:nfd::face::Transport
m_secure	websocketpp/websocketpp/processors/processor.hpp	/^    bool const m_secure;$/;"	m	class:websocketpp::processor::processor
m_secure	websocketpp/websocketpp/uri.hpp	/^    bool        m_secure;$/;"	m	class:websocketpp::uri
m_selfEventId	tests/core/scheduler.t.cpp	/^  EventId m_selfEventId;$/;"	m	class:nfd::tests::SelfCancelFixture	file:
m_sendQueue	daemon/face/stream-face.hpp	/^  std::queue<Block> m_sendQueue;$/;"	m	class:nfd::StreamFace
m_sendQueue	daemon/face/stream-transport.hpp	/^  std::queue<Block> m_sendQueue;$/;"	m	class:nfd::face::StreamTransport
m_sendSocket	daemon/face/multicast-udp-transport.hpp	/^  protocol::socket m_sendSocket;$/;"	m	class:nfd::face::MulticastUdpTransport
m_send_buffer	websocketpp/websocketpp/connection.hpp	/^    std::vector<transport::buffer> m_send_buffer;$/;"	m	class:websocketpp::connection
m_send_buffer_size	websocketpp/websocketpp/connection.hpp	/^    size_t m_send_buffer_size;$/;"	m	class:websocketpp::connection
m_send_queue	websocketpp/websocketpp/connection.hpp	/^    std::queue<message_ptr> m_send_queue;$/;"	m	class:websocketpp::connection
m_sentDatas	tests/daemon/face/dummy-face.hpp	/^  std::vector<Data> m_sentDatas;$/;"	m	class:nfd::tests::DummyFaceImpl
m_sentInterests	tests/daemon/face/dummy-face.hpp	/^  std::vector<Interest> m_sentInterests;$/;"	m	class:nfd::tests::DummyFaceImpl
m_seqgen	daemon/face/ndnlp-slicer.hpp	/^  SequenceGenerator m_seqgen;$/;"	m	class:nfd::ndnlp::Slicer
m_server	daemon/face/websocket-channel.hpp	/^  websocket::Server m_server;$/;"	m	class:nfd::WebSocketChannel
m_server	daemon/face/websocket-face.hpp	/^  websocket::Server& m_server;$/;"	m	class:nfd::WebSocketFace
m_server	websocketpp/docs/simple_broadcast_server.cpp	/^    server m_server;$/;"	m	class:broadcast_server	file:
m_server	websocketpp/docs/simple_count_server_thread.cpp	/^    server m_server;$/;"	m	class:count_server	file:
m_server	websocketpp/examples/associative_storage/associative_storage.cpp	/^    server m_server;$/;"	m	class:print_server	file:
m_server	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    server m_server;$/;"	m	class:broadcast_server	file:
m_server	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    server m_server;$/;"	m	class:print_server	file:
m_server	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    server m_server;$/;"	m	class:broadcast_server	file:
m_server	websocketpp/examples/utility_client/utility_client.cpp	/^    std::string m_server;$/;"	m	class:connection_metadata	file:
m_server	websocketpp/tutorials/utility_client/step4.cpp	/^    std::string m_server;$/;"	m	class:connection_metadata	file:
m_server	websocketpp/tutorials/utility_client/step5.cpp	/^    std::string m_server;$/;"	m	class:connection_metadata	file:
m_server	websocketpp/tutorials/utility_client/step6.cpp	/^    std::string m_server;$/;"	m	class:connection_metadata	file:
m_server	websocketpp/websocketpp/processors/processor.hpp	/^    bool const m_server;$/;"	m	class:websocketpp::processor::processor
m_service	daemon/face/lp-face.hpp	/^  unique_ptr<LinkService> m_service;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
m_service	daemon/face/transport.hpp	/^  LinkService* m_service;$/;"	m	class:nfd::face::Transport
m_shouldVisitChildren	daemon/table/name-tree.hpp	/^    bool                                        m_shouldVisitChildren;$/;"	m	class:nfd::NameTree::const_iterator
m_shrinkFactor	daemon/table/name-tree.hpp	/^  double                        m_shrinkFactor;$/;"	m	class:nfd::NameTree
m_shrinkLoadFactor	daemon/table/name-tree.hpp	/^  double                        m_shrinkLoadFactor;$/;"	m	class:nfd::NameTree
m_shrinkThreshold	daemon/table/name-tree.hpp	/^  size_t                        m_shrinkThreshold;$/;"	m	class:nfd::NameTree
m_shutdown_handler	websocketpp/websocketpp/transport/debug/connection.hpp	/^    shutdown_handler    m_shutdown_handler;$/;"	m	class:websocketpp::transport::debug::connection
m_shutdown_handler	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    shutdown_handler    m_shutdown_handler;$/;"	m	class:websocketpp::transport::iostream::connection
m_shutdown_handler	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    shutdown_handler m_shutdown_handler;$/;"	m	class:websocketpp::transport::iostream::endpoint
m_signedVerbDispatch	rib/rib-manager.hpp	/^  const SignedVerbDispatchTable m_signedVerbDispatch;$/;"	m	class:nfd::rib::RibManager
m_signingIdentity	rib/propagated-entry.hpp	/^  Name m_signingIdentity;$/;"	m	class:nfd::rib::PropagatedEntry
m_size	websocketpp/test/message_buffer/alloc.cpp	/^    size_t                              m_size;$/;"	m	struct:stub	file:
m_slicer	daemon/face/ethernet-face.hpp	/^  unique_ptr<ndnlp::Slicer> m_slicer;$/;"	m	class:nfd::EthernetFace
m_socket	daemon/face/datagram-transport.hpp	/^  typename protocol::socket m_socket;$/;"	m	class:nfd::face::DatagramTransport
m_socket	daemon/face/ethernet-face.hpp	/^  boost::asio::posix::stream_descriptor m_socket;$/;"	m	class:nfd::EthernetFace
m_socket	daemon/face/stream-face.hpp	/^  typename protocol::socket m_socket;$/;"	m	class:nfd::StreamFace
m_socket	daemon/face/stream-transport.hpp	/^  typename protocol::socket m_socket;$/;"	m	class:nfd::face::StreamTransport
m_socket	daemon/face/udp-channel.hpp	/^  boost::asio::ip::udp::socket m_socket;$/;"	m	class:nfd::UdpChannel
m_socket	daemon/face/unix-stream-channel.hpp	/^  boost::asio::local::stream_protocol::socket m_socket;$/;"	m	class:nfd::UnixStreamChannel
m_socket	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    socket_ptr          m_socket;$/;"	m	class:websocketpp::transport::asio::basic_socket::connection
m_socket	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    socket_ptr          m_socket;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_socket_init	websocketpp/examples/debug_client/debug_client.cpp	/^    std::chrono::high_resolution_clock::time_point m_socket_init;$/;"	m	class:perftest	file:
m_socket_init_handler	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    socket_init_handler m_socket_init_handler;$/;"	m	class:websocketpp::transport::asio::basic_socket::connection
m_socket_init_handler	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    socket_init_handler m_socket_init_handler;$/;"	m	class:websocketpp::transport::asio::basic_socket::endpoint
m_socket_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    socket_init_handler m_socket_init_handler;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_socket_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    socket_init_handler m_socket_init_handler;$/;"	m	class:websocketpp::transport::asio::tls_socket::endpoint
m_srcAddress	daemon/face/ethernet-face.hpp	/^  ethernet::Address m_srcAddress;$/;"	m	class:nfd::EthernetFace
m_stage1	tools/ndn-autoconfig/main.cpp	/^  autoconfig::MulticastDiscovery m_stage1;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_stage2	tools/ndn-autoconfig/main.cpp	/^  autoconfig::GuessFromSearchDomains m_stage2;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_stage3	tools/ndn-autoconfig/main.cpp	/^  autoconfig::GuessFromIdentityName m_stage3;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_staleTime	daemon/table/cs-entry.hpp	/^  time::steady_clock::TimePoint m_staleTime;$/;"	m	class:nfd::cs::Entry
m_start	daemon/face/ndnlp-sequence-generator.hpp	/^  uint64_t m_start;$/;"	m	class:nfd::ndnlp::SequenceBlock
m_start	websocketpp/examples/debug_client/debug_client.cpp	/^    std::chrono::high_resolution_clock::time_point m_start;$/;"	m	class:perftest	file:
m_start	websocketpp/test/http/parser_perf.cpp	/^    std::chrono::steady_clock::time_point m_start;$/;"	m	class:scoped_timer	file:
m_startStagesEvent	tools/ndn-autoconfig/main.cpp	/^  util::scheduler::ScopedEventId m_startStagesEvent;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_startTimestamp	daemon/mgmt/forwarder-status-manager.hpp	/^  time::system_clock::TimePoint m_startTimestamp;$/;"	m	class:nfd::ForwarderStatusManager
m_state	daemon/face/transport.hpp	/^  TransportState m_state;$/;"	m	class:nfd::face::Transport
m_state	websocketpp/websocketpp/connection.hpp	/^    session::state::value   m_state;$/;"	m	class:websocketpp::connection
m_state	websocketpp/websocketpp/http/response.hpp	/^    state                           m_state;$/;"	m	class:websocketpp::http::parser::response
m_state	websocketpp/websocketpp/processors/hybi00.hpp	/^    state m_state;$/;"	m	class:websocketpp::processor::hybi00
m_state	websocketpp/websocketpp/processors/hybi13.hpp	/^    state m_state;$/;"	m	class:websocketpp::processor::hybi13
m_state	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    state               m_state;$/;"	m	class:websocketpp::transport::asio::endpoint
m_state	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    state               m_state;$/;"	m	class:websocketpp::transport::asio::basic_socket::connection
m_state	websocketpp/websocketpp/utf8_validator.hpp	/^    uint32_t    m_state;$/;"	m	class:websocketpp::utf8_validator::validator
m_static_channels	websocketpp/websocketpp/logger/basic.hpp	/^    level const m_static_channels;$/;"	m	class:websocketpp::log::basic
m_status	websocketpp/examples/utility_client/utility_client.cpp	/^    std::string m_status;$/;"	m	class:connection_metadata	file:
m_status	websocketpp/tutorials/utility_client/step4.cpp	/^    std::string m_status;$/;"	m	class:connection_metadata	file:
m_status	websocketpp/tutorials/utility_client/step5.cpp	/^    std::string m_status;$/;"	m	class:connection_metadata	file:
m_status	websocketpp/tutorials/utility_client/step6.cpp	/^    std::string m_status;$/;"	m	class:connection_metadata	file:
m_status_code	websocketpp/websocketpp/http/response.hpp	/^    status_code::value              m_status_code;$/;"	m	class:websocketpp::http::parser::response
m_status_msg	websocketpp/websocketpp/http/response.hpp	/^    std::string                     m_status_msg;$/;"	m	class:websocketpp::http::parser::response
m_stragglerTimer	daemon/table/pit-entry.hpp	/^  scheduler::EventId m_stragglerTimer;$/;"	m	class:nfd::pit::Entry
m_strand	websocketpp/websocketpp/transport/asio/connection.hpp	/^    strand_ptr      m_strand;$/;"	m	class:websocketpp::transport::asio::connection
m_strand	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    strand_ptr          m_strand;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_strategy	daemon/table/measurements-accessor.hpp	/^  const fw::Strategy* m_strategy;$/;"	m	class:nfd::MeasurementsAccessor
m_strategy	daemon/table/strategy-choice-entry.hpp	/^  fw::Strategy* m_strategy;$/;"	m	class:nfd::strategy_choice::Entry
m_strategyChoice	daemon/fw/forwarder.hpp	/^  StrategyChoice     m_strategyChoice;$/;"	m	class:nfd::Forwarder
m_strategyChoice	daemon/mgmt/strategy-choice-manager.hpp	/^  StrategyChoice& m_strategyChoice;$/;"	m	class:nfd::StrategyChoiceManager
m_strategyChoice	daemon/mgmt/tables-config-section.hpp	/^  StrategyChoice& m_strategyChoice;$/;"	m	class:nfd::TablesConfigSection
m_strategyChoice	daemon/table/measurements-accessor.hpp	/^  const StrategyChoice& m_strategyChoice;$/;"	m	class:nfd::MeasurementsAccessor
m_strategyChoice	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^  StrategyChoice& m_strategyChoice;$/;"	m	class:nfd::tests::StrategyChoiceManagerFixture	file:
m_strategyChoice	tests/daemon/mgmt/tables-config-section.t.cpp	/^  StrategyChoice& m_strategyChoice;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_strategyChoiceEntry	daemon/table/name-tree-entry.hpp	/^  shared_ptr<strategy_choice::Entry> m_strategyChoiceEntry;$/;"	m	class:nfd::name_tree::Entry
m_strategyChoiceManager	daemon/nfd.hpp	/^  unique_ptr<StrategyChoiceManager>  m_strategyChoiceManager;$/;"	m	class:nfd::Nfd
m_strategyInstances	daemon/table/strategy-choice.hpp	/^  StrategyInstanceTable m_strategyInstances;$/;"	m	class:nfd::StrategyChoice
m_subTreeRoot	daemon/table/name-tree.hpp	/^    shared_ptr<name_tree::Entry>                m_subTreeRoot;$/;"	m	class:nfd::NameTree::const_iterator
m_subprotocol	websocketpp/websocketpp/connection.hpp	/^    std::string             m_subprotocol;$/;"	m	class:websocketpp::connection
m_subscriptions	core/config-file.hpp	/^  std::map<std::string, ConfigSectionHandler> m_subscriptions;$/;"	m	class:nfd::ConfigFile
m_supportedPrivileges	daemon/mgmt/command-validator.hpp	/^  std::set<std::string> m_supportedPrivileges;$/;"	m	class:nfd::CommandValidator
m_table	daemon/table/cs.hpp	/^  Table m_table;$/;"	m	class:nfd::cs::Cs
m_tablesConfig	tests/daemon/mgmt/tables-config-section.t.cpp	/^  TablesConfigSection m_tablesConfig;$/;"	m	class:nfd::tests::TablesConfigSectionFixture	file:
m_tcp_post_init_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    tcp_init_handler    m_tcp_post_init_handler;$/;"	m	class:websocketpp::transport::asio::connection
m_tcp_post_init_handler	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    tcp_init_handler    m_tcp_post_init_handler;$/;"	m	class:websocketpp::transport::asio::endpoint
m_tcp_pre_init_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    tcp_init_handler    m_tcp_pre_init_handler;$/;"	m	class:websocketpp::transport::asio::connection
m_tcp_pre_init_handler	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    tcp_init_handler    m_tcp_pre_init_handler;$/;"	m	class:websocketpp::transport::asio::endpoint
m_terminal	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool                        m_terminal;$/;"	m	class:websocketpp::message_buffer::message
m_terminationSignalSet	daemon/main.cpp	/^  boost::asio::signal_set m_terminationSignalSet;$/;"	m	class:nfd::NfdRunner	file:
m_terminationSignalSet	tools/ndn-autoconfig/main.cpp	/^  boost::asio::signal_set m_terminationSignalSet;$/;"	m	class:ndn::tools::NdnAutoconfig	file:
m_termination_handler	websocketpp/websocketpp/connection.hpp	/^    termination_handler     m_termination_handler;$/;"	m	class:websocketpp::connection
m_tester1	tests/daemon/mgmt/command-validator.t.cpp	/^  CommandValidatorTester m_tester1;$/;"	m	class:nfd::tests::TwoValidatorFixture	file:
m_tester2	tests/daemon/mgmt/command-validator.t.cpp	/^  CommandValidatorTester m_tester2;$/;"	m	class:nfd::tests::TwoValidatorFixture	file:
m_thread	websocketpp/examples/utility_client/utility_client.cpp	/^    websocketpp::lib::shared_ptr<websocketpp::lib::thread> m_thread;$/;"	m	class:websocket_endpoint	file:
m_thread	websocketpp/tutorials/utility_client/step3.cpp	/^    websocketpp::lib::shared_ptr<websocketpp::lib::thread> m_thread;$/;"	m	class:websocket_endpoint	file:
m_thread	websocketpp/tutorials/utility_client/step4.cpp	/^    websocketpp::lib::shared_ptr<websocketpp::lib::thread> m_thread;$/;"	m	class:websocket_endpoint	file:
m_thread	websocketpp/tutorials/utility_client/step5.cpp	/^    websocketpp::lib::shared_ptr<websocketpp::lib::thread> m_thread;$/;"	m	class:websocket_endpoint	file:
m_thread	websocketpp/tutorials/utility_client/step6.cpp	/^    websocketpp::lib::shared_ptr<websocketpp::lib::thread> m_thread;$/;"	m	class:websocket_endpoint	file:
m_timeout	tests/limited-io.hpp	/^  scheduler::EventId m_timeout;$/;"	m	class:nfd::tests::LimitedIo
m_timeout	tools/ndn-tlv-peek.cpp	/^  ndn::time::milliseconds m_timeout;$/;"	m	class:ndntlvpeek::NdnTlvPeek	file:
m_timeout	tools/ndn-tlv-poke.cpp	/^  ndn::time::milliseconds m_timeout;$/;"	m	class:ndntlvpoke::NdnTlvPoke	file:
m_timer	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    server::timer_ptr m_timer;$/;"	m	class:telemetry_server	file:
m_timer_handler	websocketpp/websocketpp/transport/debug/connection.hpp	/^    timer_handler m_timer_handler;$/;"	m	class:websocketpp::transport::debug::connection
m_tls_init	websocketpp/examples/debug_client/debug_client.cpp	/^    std::chrono::high_resolution_clock::time_point m_tls_init;$/;"	m	class:perftest	file:
m_tls_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    tls_init_handler    m_tls_init_handler;$/;"	m	class:websocketpp::transport::asio::tls_socket::connection
m_tls_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    tls_init_handler m_tls_init_handler;$/;"	m	class:websocketpp::transport::asio::tls_socket::endpoint
m_toolName	tools/nfd-status.cpp	/^  std::string m_toolName;$/;"	m	class:ndn::NfdStatus	file:
m_totalLength	daemon/face/ndnlp-partial-message-store.hpp	/^  size_t m_totalLength;$/;"	m	class:nfd::ndnlp::PartialMessage
m_totalPayloadLength	tests/core/segment-publisher.t.cpp	/^  size_t m_totalPayloadLength;$/;"	m	class:nfd::tests::SegmentPublisherTester	file:
m_transport	daemon/face/link-service.hpp	/^  Transport* m_transport;$/;"	m	class:nfd::face::LinkService
m_transport	daemon/face/lp-face.hpp	/^  unique_ptr<Transport> m_transport;$/;"	m	class:nfd::face::DECL_CLASS_FINAL
m_transports	tests/daemon/fw/topology-tester.hpp	/^  std::unordered_map<TopologyNode, face::InternalTransportBase*> m_transports;$/;"	m	class:nfd::fw::tests::TopologyLink
m_type	daemon/table/name-tree.hpp	/^    NameTree::IteratorType                      m_type;$/;"	m	class:nfd::NameTree::const_iterator
m_unknownSectionCallback	core/config-file.hpp	/^  UnknownConfigSectionHandler m_unknownSectionCallback;$/;"	m	class:nfd::ConfigFile
m_unsatisfyTimer	daemon/table/pit-entry.hpp	/^  scheduler::EventId m_unsatisfyTimer;$/;"	m	class:nfd::pit::Entry
m_unsignedVerbDispatch	rib/rib-manager.hpp	/^  const UnsignedVerbDispatchTable m_unsignedVerbDispatch;$/;"	m	class:nfd::rib::RibManager
m_updateBatches	rib/rib.hpp	/^  UpdateQueue m_updateBatches;$/;"	m	class:nfd::rib::Rib
m_updates	rib/rib-update-batch.hpp	/^  RibUpdateList m_updates;$/;"	m	class:nfd::rib::RibUpdateBatch
m_updatesForBatchFaceId	rib/fib-updater.hpp	/^  FibUpdateList m_updatesForBatchFaceId;$/;"	m	class:nfd::rib::FibUpdater
m_updatesForNonBatchFaceId	rib/fib-updater.hpp	/^  FibUpdateList m_updatesForNonBatchFaceId;$/;"	m	class:nfd::rib::FibUpdater
m_uri	daemon/face/channel.hpp	/^  FaceUri m_uri;$/;"	m	class:nfd::Channel
m_uri	websocketpp/examples/utility_client/utility_client.cpp	/^    std::string m_uri;$/;"	m	class:connection_metadata	file:
m_uri	websocketpp/tutorials/utility_client/step4.cpp	/^    std::string m_uri;$/;"	m	class:connection_metadata	file:
m_uri	websocketpp/tutorials/utility_client/step5.cpp	/^    std::string m_uri;$/;"	m	class:connection_metadata	file:
m_uri	websocketpp/tutorials/utility_client/step6.cpp	/^    std::string m_uri;$/;"	m	class:connection_metadata	file:
m_uri	websocketpp/websocketpp/connection.hpp	/^    uri_ptr                 m_uri;$/;"	m	class:websocketpp::connection
m_uri	websocketpp/websocketpp/http/request.hpp	/^    std::string                     m_uri;$/;"	m	class:websocketpp::http::parser::request
m_user_agent	websocketpp/websocketpp/connection.hpp	/^    std::string const       m_user_agent;$/;"	m	class:websocketpp::connection::std
m_user_agent	websocketpp/websocketpp/endpoint.hpp	/^    std::string                 m_user_agent;$/;"	m	class:websocketpp::endpoint
m_uttf	tests/limited-io.hpp	/^  UnitTestTimeFixture* m_uttf;$/;"	m	class:nfd::tests::LimitedIo
m_valid	websocketpp/websocketpp/uri.hpp	/^    bool        m_valid;$/;"	m	class:websocketpp::uri
m_validate_handler	websocketpp/websocketpp/connection.hpp	/^    validate_handler        m_validate_handler;$/;"	m	class:websocketpp::connection
m_validate_handler	websocketpp/websocketpp/endpoint.hpp	/^    validate_handler            m_validate_handler;$/;"	m	class:websocketpp::endpoint
m_validated	tests/daemon/mgmt/command-validator.t.cpp	/^  bool m_validated;$/;"	m	class:nfd::tests::CommandValidatorTester	file:
m_validationFailed	tests/daemon/mgmt/command-validator.t.cpp	/^  bool m_validationFailed;$/;"	m	class:nfd::tests::CommandValidatorTester	file:
m_validator	daemon/mgmt/command-validator.hpp	/^  ndn::CommandInterestValidator m_validator;$/;"	m	class:nfd::CommandValidator
m_validator	daemon/mgmt/manager-base.hpp	/^  CommandValidator& m_validator;$/;"	m	class:nfd::ManagerBase
m_validator	daemon/nfd.hpp	/^  unique_ptr<CommandValidator> m_validator;$/;"	m	class:nfd::Nfd
m_validator	tests/daemon/mgmt/manager-common-fixture.hpp	/^  CommandValidator                       m_validator;$/;"	m	class:nfd::tests::ManagerCommonFixture
m_validator	websocketpp/websocketpp/processors/hybi00.hpp	/^    utf8_validator::validator m_validator;$/;"	m	class:websocketpp::processor::hybi00
m_value	daemon/face/face-counters.hpp	/^  rep m_value;$/;"	m	class:nfd::ByteCounter
m_value	daemon/face/face-counters.hpp	/^  rep m_value;$/;"	m	class:nfd::PacketCounter
m_variance	daemon/fw/rtt-estimator.hpp	/^  double m_variance;$/;"	m	class:nfd::RttEstimator
m_version	websocketpp/websocketpp/http/parser.hpp	/^    std::string m_version;$/;"	m	class:websocketpp::http::parser::parser
m_was_clean	websocketpp/websocketpp/connection.hpp	/^    bool m_was_clean;$/;"	m	class:websocketpp::connection
m_whatMessage	core/privilege-helper.hpp	/^    const std::string m_whatMessage;$/;"	m	class:nfd::PrivilegeHelper::Error
m_whiteList	tools/nfd-autoreg.cpp	/^  std::vector<Network> m_whiteList;$/;"	m	class:ndn::nfd_autoreg::AutoregServer	file:
m_work	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    work_ptr            m_work;$/;"	m	class:websocketpp::transport::asio::endpoint
m_write_flag	websocketpp/websocketpp/connection.hpp	/^    bool m_write_flag;$/;"	m	class:websocketpp::connection
m_write_frame_handler	websocketpp/websocketpp/connection.hpp	/^    write_frame_handler     m_write_frame_handler;$/;"	m	class:websocketpp::connection
m_write_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    write_handler       m_write_handler;$/;"	m	class:websocketpp::transport::asio::connection
m_write_handler	websocketpp/websocketpp/transport/debug/connection.hpp	/^    write_handler   m_write_handler;$/;"	m	class:websocketpp::transport::debug::connection
m_write_handler	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    write_handler   m_write_handler;$/;"	m	class:websocketpp::transport::iostream::connection
m_write_handler	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    write_handler   m_write_handler;$/;"	m	class:websocketpp::transport::iostream::endpoint
m_write_handler_allocator	websocketpp/websocketpp/transport/asio/connection.hpp	/^    handler_allocator   m_write_handler_allocator;$/;"	m	class:websocketpp::transport::asio::connection
m_write_lock	websocketpp/websocketpp/connection.hpp	/^    mutex_type              m_write_lock;$/;"	m	class:websocketpp::connection
macbundle_PATTERN	build/c4che/_cache.py	/^macbundle_PATTERN = '%s.bundle'$/;"	v
main	daemon/main.cpp	/^main(int argc, char** argv)$/;"	f
main	tools/ndn-autoconfig-server.cpp	/^main(int argc, char** argv)$/;"	f
main	tools/ndn-autoconfig-server.cpp	/^main(int argc, char** argv)$/;"	f	namespace:ndn
main	tools/ndn-autoconfig/main.cpp	/^main(int argc, char** argv)$/;"	f
main	tools/ndn-tlv-peek.cpp	/^main(int argc, char* argv[])$/;"	f
main	tools/ndn-tlv-poke.cpp	/^main(int argc, char* argv[])$/;"	f
main	tools/nfd-autoreg.cpp	/^  main(int argc, char* argv[])$/;"	f	class:ndn::nfd_autoreg::AutoregServer
main	tools/nfd-autoreg.cpp	/^main(int argc, char* argv[])$/;"	f
main	tools/nfd-status.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/nfdc.cpp	/^main(int argc, char** argv)$/;"	f
main	websocketpp/docs/simple_broadcast_server.cpp	/^int main() {$/;"	f
main	websocketpp/docs/simple_count_server_thread.cpp	/^int main() {$/;"	f
main	websocketpp/examples/associative_storage/associative_storage.cpp	/^int main() {$/;"	f
main	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^int main() {$/;"	f
main	websocketpp/examples/debug_client/debug_client.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	websocketpp/examples/debug_server/debug_server.cpp	/^int main() {$/;"	f
main	websocketpp/examples/dev/main.cpp	/^int main() {$/;"	f
main	websocketpp/examples/echo_server/echo_server.cpp	/^int main() {$/;"	f
main	websocketpp/examples/echo_server_both/echo_server_both.cpp	/^int main() {$/;"	f
main	websocketpp/examples/echo_server_tls/echo_server_tls.cpp	/^int main() {$/;"	f
main	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^int main() {$/;"	f
main	websocketpp/examples/handler_switch/handler_switch.cpp	/^int main() {$/;"	f
main	websocketpp/examples/iostream_server/iostream_server.cpp	/^int main() {$/;"	f
main	websocketpp/examples/print_server/print_server.cpp	/^int main() {$/;"	f
main	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^int main() {$/;"	f
main	websocketpp/examples/sip_client/sip_client.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	websocketpp/examples/subprotocol_server/subprotocol_server.cpp	/^int main() {$/;"	f
main	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	websocketpp/examples/testee_client/testee_client.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	websocketpp/examples/testee_server/testee_server.cpp	/^int main(int argc, char * argv[]) {$/;"	f
main	websocketpp/examples/utility_client/utility_client.cpp	/^int main() {$/;"	f
main	websocketpp/test/http/parser_perf.cpp	/^int main() {$/;"	f
main	websocketpp/tutorials/utility_client/step1.cpp	/^int main() {$/;"	f
main	websocketpp/tutorials/utility_client/step2.cpp	/^int main() {$/;"	f
main	websocketpp/tutorials/utility_client/step3.cpp	/^int main() {$/;"	f
main	websocketpp/tutorials/utility_client/step4.cpp	/^int main() {$/;"	f
main	websocketpp/tutorials/utility_client/step5.cpp	/^int main() {$/;"	f
main	websocketpp/tutorials/utility_client/step6.cpp	/^int main() {$/;"	f
major_version	websocketpp/websocketpp/version.hpp	/^static int const major_version = 0;$/;"	m	namespace:websocketpp
makeBlock	tests/daemon/face/ndnlp.t.cpp	/^  makeBlock(size_t valueLength)$/;"	f	class:nfd::ndnlp::tests::ReassembleFixture
makeControlCommandRequest	tests/daemon/mgmt/manager-common-fixture.cpp	/^ManagerCommonFixture::makeControlCommandRequest(Name commandName,$/;"	f	class:nfd::tests::ManagerCommonFixture
makeData	tests/test-common.hpp	/^makeData(const Name& name)$/;"	f	namespace:nfd::tests
makeDataWorkload	tests/other/cs-benchmark.cpp	/^  makeDataWorkload(size_t count, const NameGenerator& genName = SimpleNameGenerator())$/;"	f	class:nfd::tests::CsBenchmarkFixture
makeDefaultPolicy	daemon/table/cs.cpp	/^makeDefaultPolicy()$/;"	f	namespace:nfd::cs
makeDefaultStrategy	daemon/fw/strategy-registry.cpp	/^makeDefaultStrategy(Forwarder& forwarder)$/;"	f	namespace:nfd::fw
makeEntry	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::makeEntry(const Name& name, uint32_t nonce)$/;"	f	class:nfd::DeadNonceList
makeFace	tests/daemon/face/unix-stream.t.cpp	/^  makeFace(UnixStreamTransport::protocol::socket&& socket)$/;"	f	class:nfd::tests::EndToEndFixture
makeFibEntry	tests/daemon/fw/best-route-strategy2.t.cpp	/^  makeFibEntry(BestRouteStrategy2Fixture* fixture)$/;"	f	class:nfd::fw::tests::EmptyNextHopList
makeFibEntry	tests/daemon/fw/best-route-strategy2.t.cpp	/^  makeFibEntry(BestRouteStrategy2Fixture* fixture)$/;"	f	class:nfd::fw::tests::NextHopIsDownstream
makeFibEntry	tests/daemon/fw/best-route-strategy2.t.cpp	/^  makeFibEntry(BestRouteStrategy2Fixture* fixture)$/;"	f	class:nfd::fw::tests::NextHopViolatesScope
makeInterest	tests/test-common.hpp	/^makeInterest(const Name& name, uint32_t nonce = 0)$/;"	f	namespace:nfd::tests
makeInterestWorkload	tests/other/cs-benchmark.cpp	/^  makeInterestWorkload(size_t count, const NameGenerator& genName = SimpleNameGenerator())$/;"	f	class:nfd::tests::CsBenchmarkFixture
makeInternalFace	daemon/face/internal-face.cpp	/^makeInternalFace(ndn::KeyChain& clientKeyChain)$/;"	f	namespace:nfd::face
makeLink	tests/test-common.hpp	/^makeLink(const Name& name, std::initializer_list<std::pair<uint32_t, Name>> delegations)$/;"	f	namespace:nfd::tests
makeNack	tests/test-common.hpp	/^makeNack(const Name& name, uint32_t nonce, lp::NackReason reason)$/;"	f	namespace:nfd::tests
makeNetworkMonitor	daemon/nfd.cpp	/^makeNetworkMonitor()$/;"	f	namespace:nfd
makeParameters	tests/daemon/mgmt/fib-manager.t.cpp	/^  makeParameters(const Name& name, const FaceId& id)$/;"	f	class:nfd::tests::FibManagerFixture
makeParameters	tests/daemon/mgmt/fib-manager.t.cpp	/^  makeParameters(const Name& name, const FaceId& id, const uint32_t& cost)$/;"	f	class:nfd::tests::FibManagerFixture
makeParameters	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^  makeParameters(const Name& name, const Name& strategy)$/;"	f	class:nfd::tests::StrategyChoiceManagerFixture
makeRelPrefix	daemon/mgmt/manager-base.hpp	/^ManagerBase::makeRelPrefix(const std::string& verb)$/;"	f	class:nfd::ManagerBase
makeResponse	tests/daemon/mgmt/manager-common-fixture.cpp	/^ManagerCommonFixture::makeResponse(uint32_t code, const std::string& text,$/;"	f	class:nfd::tests::ManagerCommonFixture
make_custom_alloc_handler	websocketpp/websocketpp/transport/asio/base.hpp	/^inline custom_alloc_handler<Handler> make_custom_alloc_handler($/;"	f	namespace:websocketpp::transport::asio
make_error_code	websocketpp/websocketpp/error.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::error
make_error_code	websocketpp/websocketpp/extensions/extension.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::extensions::error
make_error_code	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::extensions::permessage_deflate::error
make_error_code	websocketpp/websocketpp/processors/base.hpp	/^inline lib::error_code make_error_code(error::processor_errors e) {$/;"	f	namespace:websocketpp::processor::error
make_error_code	websocketpp/websocketpp/transport/asio/base.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::transport::asio::error
make_error_code	websocketpp/websocketpp/transport/asio/security/base.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::transport::asio::socket
make_error_code	websocketpp/websocketpp/transport/base/connection.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::transport::error
make_error_code	websocketpp/websocketpp/transport/debug/base.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::transport::debug::error
make_error_code	websocketpp/websocketpp/transport/iostream/base.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::transport::iostream::error
make_error_code	websocketpp/websocketpp/transport/stub/base.hpp	/^inline lib::error_code make_error_code(error::value e) {$/;"	f	namespace:websocketpp::transport::stub::error
make_link_node	docs/redmine_issue.py	/^def make_link_node(rawtext, app, type, slug, options):$/;"	f
man_pages	docs/conf.py	/^man_pages = [$/;"	v
manager	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  FaceManager manager;$/;"	m	class:nfd::tests::FaceManagerNode	file:
manager	tests/rib/rib-manager.t.cpp	/^  shared_ptr<RibManager> manager;$/;"	m	class:nfd::rib::tests::RibManagerFixture	file:
managerFailureCallback	rib/rib.hpp	/^    const Rib::UpdateFailureCallback managerFailureCallback;$/;"	m	struct:nfd::rib::Rib::UpdateQueueItem
managerSuccessCallback	rib/rib.hpp	/^    const Rib::UpdateSuccessCallback managerSuccessCallback;$/;"	m	struct:nfd::rib::Rib::UpdateQueueItem
mark	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::mark()$/;"	f	class:nfd::DeadNonceList
masked_copy	websocketpp/websocketpp/processors/hybi13.hpp	/^    void masked_copy (std::string const & i, std::string & o,$/;"	f	class:websocketpp::processor::hybi13
masking_forbidden	websocketpp/websocketpp/processors/base.hpp	/^    masking_forbidden,$/;"	e	enum:websocketpp::processor::error::processor_errors
masking_key_type	websocketpp/websocketpp/frame.hpp	/^typedef uint32_converter masking_key_type;$/;"	t	namespace:websocketpp::frame
masking_required	websocketpp/websocketpp/processors/base.hpp	/^    masking_required,$/;"	e	enum:websocketpp::processor::error::processor_errors
master_doc	docs/conf.py	/^master_doc = 'index'$/;"	v
maxInterval	daemon/fw/ncc-strategy.hpp	/^    time::microseconds maxInterval;$/;"	m	class:nfd::fw::NccStrategy::PitEntryInfo
max_body_size	websocketpp/websocketpp/http/constants.hpp	/^    size_t const max_body_size = 32000000;$/;"	m	namespace:websocketpp::http
max_c2s_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^static uint8_t const max_c2s_max_window_bits = 15;$/;"	m	namespace:websocketpp::extensions::permessage_deflate
max_extended_header_length	websocketpp/websocketpp/frame.hpp	/^    static unsigned int const max_extended_header_length = 12;$/;"	m	namespace:websocketpp::frame::limits
max_header_length	websocketpp/websocketpp/frame.hpp	/^    static unsigned int const max_header_length = 14;$/;"	m	namespace:websocketpp::frame::limits
max_header_size	websocketpp/websocketpp/http/constants.hpp	/^    size_t const max_header_size = 16000;$/;"	m	namespace:websocketpp::http
max_http_body_size	websocketpp/websocketpp/config/core.hpp	/^    static const size_t max_http_body_size = 32000000;$/;"	m	struct:websocketpp::config::core
max_http_body_size	websocketpp/websocketpp/config/core_client.hpp	/^    static const size_t max_http_body_size = 32000000;$/;"	m	struct:websocketpp::config::core_client
max_http_body_size	websocketpp/websocketpp/config/debug.hpp	/^    static const size_t max_http_body_size = 32000000;$/;"	m	struct:websocketpp::config::debug_core
max_http_body_size	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const size_t max_http_body_size = 32000000;$/;"	m	struct:websocketpp::config::minimal_server
max_message_size	websocketpp/test/processors/hybi00.cpp	/^    static const size_t max_message_size = 16000000;$/;"	m	struct:stub_config	file:
max_message_size	websocketpp/test/processors/hybi07.cpp	/^    static const size_t max_message_size = 16000000;$/;"	m	struct:stub_config	file:
max_message_size	websocketpp/test/processors/hybi08.cpp	/^    static const size_t max_message_size = 16000000;$/;"	m	struct:stub_config	file:
max_message_size	websocketpp/test/processors/hybi13.cpp	/^    static const size_t max_message_size = 16000000;$/;"	m	struct:stub_config	file:
max_message_size	websocketpp/test/processors/hybi13.cpp	/^    static const size_t max_message_size = 16000000;$/;"	m	struct:stub_config_ext	file:
max_message_size	websocketpp/websocketpp/config/core.hpp	/^    static const size_t max_message_size = 32000000;$/;"	m	struct:websocketpp::config::core
max_message_size	websocketpp/websocketpp/config/core_client.hpp	/^    static const size_t max_message_size = 32000000;$/;"	m	struct:websocketpp::config::core_client
max_message_size	websocketpp/websocketpp/config/debug.hpp	/^    static const size_t max_message_size = 32000000;$/;"	m	struct:websocketpp::config::debug_core
max_message_size	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const size_t max_message_size = 32000000;$/;"	m	struct:websocketpp::config::minimal_server
max_s2c_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^static uint8_t const max_s2c_max_window_bits = 15;$/;"	m	namespace:websocketpp::extensions::permessage_deflate
md5	websocketpp/websocketpp/common/md5.hpp	/^namespace md5 {$/;"	n	namespace:websocketpp
md5_append	websocketpp/websocketpp/common/md5.hpp	/^void md5_append(md5_state_t *pms, md5_byte_t const * data, size_t nbytes) {$/;"	f	namespace:websocketpp::md5
md5_byte_t	websocketpp/websocketpp/common/md5.hpp	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t	namespace:websocketpp::md5
md5_finish	websocketpp/websocketpp/common/md5.hpp	/^void md5_finish(md5_state_t *pms, md5_byte_t digest[16]) {$/;"	f	namespace:websocketpp::md5
md5_hash_hex	websocketpp/websocketpp/common/md5.hpp	/^inline std::string md5_hash_hex(std::string const & input) {$/;"	f	namespace:websocketpp::md5
md5_hash_string	websocketpp/websocketpp/common/md5.hpp	/^inline std::string md5_hash_string(std::string const & s) {$/;"	f	namespace:websocketpp::md5
md5_init	websocketpp/websocketpp/common/md5.hpp	/^void md5_init(md5_state_t *pms) {$/;"	f	namespace:websocketpp::md5
md5_process	websocketpp/websocketpp/common/md5.hpp	/^static void md5_process(md5_state_t *pms, md5_byte_t const * data \/*[64]*\/) {$/;"	f	namespace:websocketpp::md5
md5_state_s	websocketpp/websocketpp/common/md5.hpp	/^typedef struct md5_state_s {$/;"	s	namespace:websocketpp::md5
md5_state_t	websocketpp/websocketpp/common/md5.hpp	/^} md5_state_t;$/;"	t	namespace:websocketpp::md5	typeref:struct:websocketpp::md5::md5_state_s
md5_word_t	websocketpp/websocketpp/common/md5.hpp	/^typedef unsigned int md5_word_t; \/* 32-bit word *\/$/;"	t	namespace:websocketpp::md5
measurements	daemon/table/fib.hpp	/^namespace measurements {$/;"	n	namespace:nfd
measurements	daemon/table/measurements-entry.cpp	/^namespace measurements {$/;"	n	namespace:nfd	file:
measurements	daemon/table/measurements-entry.hpp	/^namespace measurements {$/;"	n	namespace:nfd
measurements	daemon/table/measurements.hpp	/^namespace measurements {$/;"	n	namespace:nfd
measurements	tests/daemon/table/measurements-accessor.t.cpp	/^  Measurements& measurements;$/;"	m	class:nfd::tests::MeasurementsAccessorFixture	file:
message	websocketpp/websocketpp/error.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::error::category
message	websocketpp/websocketpp/extensions/extension.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::extensions::error::category
message	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::extensions::permessage_deflate::error::category
message	websocketpp/websocketpp/message_buffer/message.hpp	/^    message(const con_msg_man_ptr manager)$/;"	f	class:websocketpp::message_buffer::message
message	websocketpp/websocketpp/message_buffer/message.hpp	/^    message(const con_msg_man_ptr manager, frame::opcode::value op, size_t size = 128)$/;"	f	class:websocketpp::message_buffer::message
message	websocketpp/websocketpp/message_buffer/message.hpp	/^class message {$/;"	c	namespace:websocketpp::message_buffer
message	websocketpp/websocketpp/message_buffer/pool.hpp	/^    message(con_msg_man_ptr manager, size_t size = 128)$/;"	f	class:websocketpp::message_buffer::message
message	websocketpp/websocketpp/message_buffer/pool.hpp	/^class message {$/;"	c	namespace:websocketpp::message_buffer
message	websocketpp/websocketpp/processors/base.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::processor::error::processor_category
message	websocketpp/websocketpp/transport/asio/base.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::transport::asio::error::category
message	websocketpp/websocketpp/transport/asio/security/base.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::transport::asio::socket::socket_category
message	websocketpp/websocketpp/transport/base/connection.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::transport::error::category
message	websocketpp/websocketpp/transport/debug/base.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::transport::debug::error::category
message	websocketpp/websocketpp/transport/iostream/base.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::transport::iostream::error::category
message	websocketpp/websocketpp/transport/stub/base.hpp	/^    std::string message(int value) const {$/;"	f	class:websocketpp::transport::stub::error::category
message_buffer	websocketpp/websocketpp/message_buffer/alloc.hpp	/^namespace message_buffer {$/;"	n	namespace:websocketpp
message_buffer	websocketpp/websocketpp/message_buffer/message.hpp	/^namespace message_buffer {$/;"	n	namespace:websocketpp
message_buffer	websocketpp/websocketpp/message_buffer/pool.hpp	/^namespace message_buffer {$/;"	n	namespace:websocketpp
message_deleter	websocketpp/websocketpp/message_buffer/pool.hpp	/^void message_deleter(T* msg) {$/;"	f	namespace:websocketpp::message_buffer
message_handler	websocketpp/websocketpp/connection.hpp	/^    typedef lib::function<void(connection_hdl,message_ptr)> message_handler;$/;"	t	class:websocketpp::connection
message_handler	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename connection_type::message_handler message_handler;$/;"	t	class:websocketpp::endpoint
message_header	websocketpp/websocketpp/logger/levels.hpp	/^    static level const message_header = 0x20;$/;"	m	struct:websocketpp::log::alevel
message_payload	websocketpp/websocketpp/logger/levels.hpp	/^    static level const message_payload = 0x40;$/;"	m	struct:websocketpp::log::alevel
message_ptr	websocketpp/examples/debug_client/debug_client.cpp	/^typedef websocketpp::config::asio_tls_client::message_type::ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/examples/debug_server/debug_server.cpp	/^typedef server::message_ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/examples/echo_server/echo_server.cpp	/^typedef server::message_ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/examples/echo_server_tls/echo_server_tls.cpp	/^typedef websocketpp::config::asio::message_type::ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/examples/iostream_server/iostream_server.cpp	/^typedef server::message_ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/examples/sip_client/sip_client.cpp	/^typedef websocketpp::config::asio_client::message_type::ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/examples/testee_client/testee_client.cpp	/^typedef websocketpp::config::asio_client::message_type::ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/examples/testee_server/testee_server.cpp	/^typedef server::message_ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/test/connection/connection_tu2.hpp	/^typedef websocketpp::config::core::message_type::ptr message_ptr;$/;"	t
message_ptr	websocketpp/test/processors/hybi00.cpp	/^typedef stub_config::message_type::ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/test/processors/hybi13.cpp	/^typedef stub_config::message_type::ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/test/roles/server.cpp	/^typedef websocketpp::config::core::message_type::ptr message_ptr;$/;"	t	file:
message_ptr	websocketpp/websocketpp/connection.hpp	/^    typedef typename message_type::ptr message_ptr;$/;"	t	class:websocketpp::connection
message_ptr	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename connection_type::message_ptr message_ptr;$/;"	t	class:websocketpp::endpoint
message_ptr	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    typedef typename message::ptr message_ptr;$/;"	t	class:websocketpp::message_buffer::alloc::con_msg_manager
message_ptr	websocketpp/websocketpp/message_buffer/pool.hpp	/^    typedef typename message::ptr message_ptr;$/;"	t	class:websocketpp::message_buffer::alloc::con_msg_manager
message_ptr	websocketpp/websocketpp/processors/hybi00.hpp	/^    typedef typename message_type::ptr message_ptr;$/;"	t	class:websocketpp::processor::hybi00
message_ptr	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename message_type::ptr message_ptr;$/;"	t	class:websocketpp::processor::hybi13
message_ptr	websocketpp/websocketpp/processors/processor.hpp	/^    typedef typename config::message_type::ptr message_ptr;$/;"	t	class:websocketpp::processor::processor
message_too_big	websocketpp/websocketpp/close.hpp	/^    static value const message_too_big = 1009;$/;"	m	namespace:websocketpp::close::status
message_too_big	websocketpp/websocketpp/processors/base.hpp	/^    message_too_big,$/;"	e	enum:websocketpp::processor::error::processor_errors
message_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::message_type message_type;$/;"	t	struct:debug_custom	file:
message_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::message_type message_type;$/;"	t	struct:custom_config	file:
message_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::message_type message_type;$/;"	t	struct:testee_config	file:
message_type	websocketpp/test/connection/connection.cpp	/^    typedef core::message_type message_type;$/;"	t	struct:debug_config_client	file:
message_type	websocketpp/test/connection/connection.cpp	/^    typedef core::message_type message_type;$/;"	t	struct:stub_config	file:
message_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::message_type message_type;$/;"	t	struct:stub_config	file:
message_type	websocketpp/test/processors/hybi00.cpp	/^        <websocketpp::message_buffer::alloc::con_msg_manager> message_type;$/;"	t	struct:stub_config	file:
message_type	websocketpp/test/processors/hybi07.cpp	/^        <websocketpp::message_buffer::alloc::con_msg_manager> message_type;$/;"	t	struct:stub_config	file:
message_type	websocketpp/test/processors/hybi08.cpp	/^        <websocketpp::message_buffer::alloc::con_msg_manager> message_type;$/;"	t	struct:stub_config	file:
message_type	websocketpp/test/processors/hybi13.cpp	/^        <websocketpp::message_buffer::alloc::con_msg_manager> message_type;$/;"	t	struct:stub_config	file:
message_type	websocketpp/test/processors/hybi13.cpp	/^        <websocketpp::message_buffer::alloc::con_msg_manager> message_type;$/;"	t	struct:stub_config_ext	file:
message_type	websocketpp/test/roles/client.cpp	/^    typedef core::message_type message_type;$/;"	t	struct:stub_config	file:
message_type	websocketpp/test/transport/integration.cpp	/^    typedef base::message_type message_type;$/;"	t	struct:config	file:
message_type	websocketpp/test/transport/integration.cpp	/^    typedef base::message_type message_type;$/;"	t	struct:config_tls	file:
message_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::message_type message_type;$/;"	t	struct:websocketpp::config::asio_tls
message_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::message_type message_type;$/;"	t	struct:websocketpp::config::asio_tls_client
message_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::message_type message_type;$/;"	t	struct:websocketpp::config::asio
message_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::message_type message_type;$/;"	t	struct:websocketpp::config::asio_client
message_type	websocketpp/websocketpp/config/core.hpp	/^        message_type;$/;"	t	struct:websocketpp::config::core
message_type	websocketpp/websocketpp/config/core_client.hpp	/^        message_type;$/;"	t	struct:websocketpp::config::core_client
message_type	websocketpp/websocketpp/config/debug.hpp	/^        message_type;$/;"	t	struct:websocketpp::config::debug_core
message_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::message_type message_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
message_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::message_type message_type;$/;"	t	struct:websocketpp::config::debug_asio
message_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        message_type;$/;"	t	struct:websocketpp::config::minimal_server
message_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::message_type message_type;$/;"	t	class:websocketpp::connection
message_type	websocketpp/websocketpp/processors/hybi00.hpp	/^    typedef typename config::message_type message_type;$/;"	t	class:websocketpp::processor::hybi00
message_type	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename config::message_type message_type;$/;"	t	class:websocketpp::processor::hybi13
method	websocketpp/websocketpp/http/parser.hpp	/^        method,$/;"	e	enum:websocketpp::http::parser::state::value
method_not_allowed	websocketpp/websocketpp/http/constants.hpp	/^            method_not_allowed = 405,$/;"	e	enum:websocketpp::http::status_code::value
mgmt	daemon/nfd.hpp	/^namespace mgmt {$/;"	n	namespace:ndn
min_c2s_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^static uint8_t const min_c2s_max_window_bits = 8;$/;"	m	namespace:websocketpp::extensions::permessage_deflate
min_s2c_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^static uint8_t const min_s2c_max_window_bits = 8;$/;"	m	namespace:websocketpp::extensions::permessage_deflate
minimal_client	websocketpp/websocketpp/config/minimal_client.hpp	/^typedef minimal_server minimal_client;$/;"	t	namespace:websocketpp::config
minimal_server	websocketpp/websocketpp/config/minimal_server.hpp	/^struct minimal_server {$/;"	s	namespace:websocketpp::config
minimum_outgoing_window_bits	websocketpp/websocketpp/config/core.hpp	/^        static const uint8_t minimum_outgoing_window_bits = 8;$/;"	m	struct:websocketpp::config::core::permessage_deflate_config
minimum_outgoing_window_bits	websocketpp/websocketpp/config/core_client.hpp	/^        static const uint8_t minimum_outgoing_window_bits = 8;$/;"	m	struct:websocketpp::config::core_client::permessage_deflate_config
minimum_outgoing_window_bits	websocketpp/websocketpp/config/debug.hpp	/^        static const uint8_t minimum_outgoing_window_bits = 8;$/;"	m	struct:websocketpp::config::debug_core::permessage_deflate_config
minimum_outgoing_window_bits	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const uint8_t minimum_outgoing_window_bits = 8;$/;"	m	struct:websocketpp::config::minimal_server::permessage_deflate_config
minor_version	websocketpp/websocketpp/version.hpp	/^static int const minor_version = 5;$/;"	m	namespace:websocketpp
missing_required_header	websocketpp/websocketpp/processors/base.hpp	/^    missing_required_header,$/;"	e	enum:websocketpp::processor::error::processor_errors
missing_tls_init_handler	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        missing_tls_init_handler,$/;"	e	enum:websocketpp::transport::asio::socket::error::value
mock_con	websocketpp/test/transport/asio/timers.cpp	/^    mock_con(bool a, config::alog_type& b, config::elog_type& c) : base(a,b,c) {}$/;"	f	struct:mock_con
mock_con	websocketpp/test/transport/asio/timers.cpp	/^struct mock_con: public websocketpp::transport::asio::connection<config> {$/;"	s	file:
mock_endpoint	websocketpp/test/transport/asio/timers.cpp	/^    mock_endpoint() {$/;"	f	struct:mock_endpoint
mock_endpoint	websocketpp/test/transport/asio/timers.cpp	/^struct mock_endpoint : public websocketpp::transport::asio::endpoint<config> {$/;"	s	file:
mode	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^namespace mode {$/;"	n	namespace:websocketpp::extensions::permessage_deflate
modifyChildrensInheritedRoutes	rib/fib-updater.cpp	/^FibUpdater::modifyChildrensInheritedRoutes(const Rib::RibEntryList& children,$/;"	f	class:nfd::rib::FibUpdater
modifyInheritedRoutes	rib/rib.cpp	/^Rib::modifyInheritedRoutes(const RibUpdateList& inheritedRoutes)$/;"	f	class:nfd::rib::Rib
moveStaleEventId	daemon/table/cs-policy-priority-fifo.hpp	/^  scheduler::EventId moveStaleEventId;$/;"	m	struct:nfd::cs::priority_fifo::EntryInfo
moveToStaleQueue	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::moveToStaleQueue(iterator i)$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
moved_permanently	websocketpp/websocketpp/http/constants.hpp	/^            moved_permanently = 301,$/;"	e	enum:websocketpp::http::status_code::value
msg	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    server::message_ptr msg;$/;"	m	struct:action	file:
msg_ftr	websocketpp/websocketpp/processors/hybi00.hpp	/^    uint8_t const msg_ftr;$/;"	m	class:websocketpp::processor::hybi00
msg_hdr	websocketpp/websocketpp/processors/hybi00.hpp	/^    uint8_t const msg_hdr;$/;"	m	class:websocketpp::processor::hybi00
msg_manager	websocketpp/test/processors/hybi00.cpp	/^    stub_config::con_msg_manager_type::ptr msg_manager;$/;"	m	struct:processor_setup	file:
msg_manager	websocketpp/test/processors/hybi13.cpp	/^    con_msg_manager_type::ptr msg_manager;$/;"	m	struct:processor_setup	file:
msg_manager	websocketpp/test/processors/hybi13.cpp	/^    con_msg_manager_type::ptr msg_manager;$/;"	m	struct:processor_setup_ext	file:
msg_manager_ptr	websocketpp/websocketpp/processors/hybi00.hpp	/^    typedef typename config::con_msg_manager_type::ptr msg_manager_ptr;$/;"	t	class:websocketpp::processor::hybi00
msg_manager_ptr	websocketpp/websocketpp/processors/hybi07.hpp	/^    typedef typename config::con_msg_manager_type::ptr msg_manager_ptr;$/;"	t	class:websocketpp::processor::hybi07
msg_manager_ptr	websocketpp/websocketpp/processors/hybi08.hpp	/^    typedef typename config::con_msg_manager_type::ptr msg_manager_ptr;$/;"	t	class:websocketpp::processor::hybi08
msg_manager_ptr	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename msg_manager_type::ptr msg_manager_ptr;$/;"	t	class:websocketpp::processor::hybi13
msg_manager_type	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename config::con_msg_manager_type msg_manager_type;$/;"	t	class:websocketpp::processor::hybi13
msg_metadata	websocketpp/websocketpp/processors/hybi13.hpp	/^        msg_metadata() {}$/;"	f	struct:websocketpp::processor::hybi13::msg_metadata
msg_metadata	websocketpp/websocketpp/processors/hybi13.hpp	/^        msg_metadata(message_ptr m, frame::masking_key_type p)$/;"	f	struct:websocketpp::processor::hybi13::msg_metadata
msg_metadata	websocketpp/websocketpp/processors/hybi13.hpp	/^        msg_metadata(message_ptr m, size_t p) : msg_ptr(m),prepared_key(p) {}$/;"	f	struct:websocketpp::processor::hybi13::msg_metadata
msg_metadata	websocketpp/websocketpp/processors/hybi13.hpp	/^    struct msg_metadata {$/;"	s	class:websocketpp::processor::hybi13
msg_ptr	websocketpp/websocketpp/processors/hybi13.hpp	/^        message_ptr msg_ptr;        \/\/ pointer to the message data buffer$/;"	m	struct:websocketpp::processor::hybi13::msg_metadata
multicast	daemon/fw/access-strategy.cpp	/^AccessStrategy::multicast(shared_ptr<pit::Entry> pitEntry, shared_ptr<fib::Entry> fibEntry,$/;"	f	class:nfd::fw::AccessStrategy
multiple_choices	websocketpp/websocketpp/http/constants.hpp	/^            multiple_choices = 300,$/;"	e	enum:websocketpp::http::status_code::value
mutex_type	websocketpp/websocketpp/concurrency/basic.hpp	/^    typedef lib::mutex mutex_type;$/;"	t	class:websocketpp::concurrency::basic
mutex_type	websocketpp/websocketpp/concurrency/none.hpp	/^    typedef none_impl::fake_mutex mutex_type;$/;"	t	class:websocketpp::concurrency::none
mutex_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename concurrency_type::mutex_type mutex_type;$/;"	t	class:websocketpp::connection
mutex_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename concurrency_type::mutex_type mutex_type;$/;"	t	class:websocketpp::endpoint
mutex_type	websocketpp/websocketpp/logger/basic.hpp	/^    typedef typename concurrency::mutex_type mutex_type;$/;"	t	class:websocketpp::log::basic
mutex_type	websocketpp/websocketpp/random/random_device.hpp	/^        typedef typename concurrency::mutex_type mutex_type;$/;"	t	class:websocketpp::random::random_device::int_generator
mutex_type	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef typename concurrency_type::mutex_type mutex_type;$/;"	t	class:websocketpp::transport::debug::connection
mutex_type	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef typename concurrency_type::mutex_type mutex_type;$/;"	t	class:websocketpp::transport::iostream::connection
mutex_type	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef typename concurrency_type::mutex_type mutex_type;$/;"	t	class:websocketpp::transport::stub::connection
my_equal	websocketpp/websocketpp/utilities.hpp	/^    my_equal(std::locale const & loc ) : m_loc(loc) {}$/;"	f	struct:websocketpp::utility::my_equal
my_equal	websocketpp/websocketpp/utilities.hpp	/^struct my_equal {$/;"	s	namespace:websocketpp::utility
nFinishedRegs	tools/ndn-autoconfig/multicast-discovery.hpp	/^  size_t nFinishedRegs;$/;"	m	class:ndn::tools::autoconfig::MulticastDiscovery
nRequestedRegs	tools/ndn-autoconfig/multicast-discovery.hpp	/^  size_t nRequestedRegs;$/;"	m	class:ndn::tools::autoconfig::MulticastDiscovery
name	core/network-interface.hpp	/^  std::string name;$/;"	m	class:nfd::NetworkInterfaceInfo
name	rib/fib-update.hpp	/^  Name name;$/;"	m	class:nfd::rib::FibUpdate
name	tests/daemon/table/dead-nonce-list.t.cpp	/^  Name name;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
name	websocketpp/examples/associative_storage/associative_storage.cpp	/^    std::string name;$/;"	m	struct:connection_data	file:
name	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    std::string name;$/;"	m	struct:connection_data	file:
name_tree	daemon/table/fib-entry.hpp	/^namespace name_tree {$/;"	n	namespace:nfd
name_tree	daemon/table/measurements-entry.hpp	/^namespace name_tree {$/;"	n	namespace:nfd
name_tree	daemon/table/name-tree-entry.cpp	/^namespace name_tree {$/;"	n	namespace:nfd	file:
name_tree	daemon/table/name-tree-entry.hpp	/^namespace name_tree {$/;"	n	namespace:nfd
name_tree	daemon/table/name-tree.cpp	/^namespace name_tree {$/;"	n	namespace:nfd	file:
name_tree	daemon/table/name-tree.hpp	/^namespace name_tree {$/;"	n	namespace:nfd
name_tree	daemon/table/pit-entry.hpp	/^namespace name_tree {$/;"	n	namespace:nfd
name_tree	daemon/table/strategy-choice-entry.hpp	/^namespace name_tree {$/;"	n	namespace:nfd
ndn	daemon/nfd.hpp	/^namespace ndn {$/;"	n
ndn	tools/ndn-autoconfig-server.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/ndn-autoconfig/base-dns.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/ndn-autoconfig/base-dns.hpp	/^namespace ndn {$/;"	n
ndn	tools/ndn-autoconfig/base.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/ndn-autoconfig/base.hpp	/^namespace ndn {$/;"	n
ndn	tools/ndn-autoconfig/guess-from-identity-name.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/ndn-autoconfig/guess-from-identity-name.hpp	/^namespace ndn {$/;"	n
ndn	tools/ndn-autoconfig/guess-from-search-domains.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/ndn-autoconfig/guess-from-search-domains.hpp	/^namespace ndn {$/;"	n
ndn	tools/ndn-autoconfig/main.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/ndn-autoconfig/multicast-discovery.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/ndn-autoconfig/multicast-discovery.hpp	/^namespace ndn {$/;"	n
ndn	tools/nfd-autoreg.cpp	/^namespace ndn {$/;"	n	file:
ndn	tools/nfd-status.cpp	/^namespace ndn {$/;"	n	file:
ndnlp	daemon/face/ndnlp-data.cpp	/^namespace ndnlp {$/;"	n	namespace:nfd	file:
ndnlp	daemon/face/ndnlp-data.hpp	/^namespace ndnlp {$/;"	n	namespace:nfd
ndnlp	daemon/face/ndnlp-partial-message-store.cpp	/^namespace ndnlp {$/;"	n	namespace:nfd	file:
ndnlp	daemon/face/ndnlp-partial-message-store.hpp	/^namespace ndnlp {$/;"	n	namespace:nfd
ndnlp	daemon/face/ndnlp-sequence-generator.cpp	/^namespace ndnlp {$/;"	n	namespace:nfd	file:
ndnlp	daemon/face/ndnlp-sequence-generator.hpp	/^namespace ndnlp {$/;"	n	namespace:nfd
ndnlp	daemon/face/ndnlp-slicer.cpp	/^namespace ndnlp {$/;"	n	namespace:nfd	file:
ndnlp	daemon/face/ndnlp-slicer.hpp	/^namespace ndnlp {$/;"	n	namespace:nfd
ndnlp	tests/daemon/face/ndnlp.t.cpp	/^namespace ndnlp {$/;"	n	namespace:nfd	file:
ndntlvpeek	tools/ndn-tlv-peek.cpp	/^namespace ndntlvpeek {$/;"	n	file:
ndntlvpoke	tools/ndn-tlv-poke.cpp	/^namespace ndntlvpoke {$/;"	n	file:
negotiate	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^    err_str_pair negotiate(http::attribute_list const &) {$/;"	f	class:websocketpp::extensions::permessage_deflate::disabled
negotiate	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    err_str_pair negotiate(http::attribute_list const & offer) {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
negotiate_c2s_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    void negotiate_c2s_max_window_bits(std::string const & value,$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
negotiate_c2s_no_context_takeover	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    void negotiate_c2s_no_context_takeover(std::string const & value,$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
negotiate_extensions	websocketpp/websocketpp/processors/hybi13.hpp	/^    err_str_pair negotiate_extensions(request_type const & req) {$/;"	f	class:websocketpp::processor::hybi13
negotiate_extensions	websocketpp/websocketpp/processors/processor.hpp	/^    virtual err_str_pair negotiate_extensions(request_type const &) {$/;"	f	class:websocketpp::processor::processor
negotiate_s2c_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    void negotiate_s2c_max_window_bits(std::string const & value,$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
negotiate_s2c_no_context_takeover	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    void negotiate_s2c_no_context_takeover(std::string const & value,$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
net	websocketpp/websocketpp/common/network.hpp	/^namespace net {$/;"	n	namespace:websocketpp::lib
network_authentication_required	websocketpp/websocketpp/http/constants.hpp	/^            network_authentication_required = 511$/;"	e	enum:websocketpp::http::status_code::value
nextBlock	daemon/face/ndnlp-sequence-generator.cpp	/^SequenceGenerator::nextBlock(size_t count)$/;"	f	class:nfd::ndnlp::SequenceGenerator
nfd	build/version.hpp	/^namespace nfd {$/;"	n
nfd	common.hpp	/^namespace nfd {$/;"	n
nfd	core/algorithm.hpp	/^namespace nfd {$/;"	n
nfd	core/config-file.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/config-file.hpp	/^namespace nfd {$/;"	n
nfd	core/extended-error-message.hpp	/^namespace nfd {$/;"	n
nfd	core/global-io.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/global-io.hpp	/^namespace nfd {$/;"	n
nfd	core/logger-factory.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/logger-factory.hpp	/^namespace nfd {$/;"	n
nfd	core/logger.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/logger.hpp	/^namespace nfd {$/;"	n
nfd	core/network-interface.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/network-interface.hpp	/^namespace nfd {$/;"	n
nfd	core/network.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/network.hpp	/^namespace nfd {$/;"	n
nfd	core/privilege-helper.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/privilege-helper.hpp	/^namespace nfd {$/;"	n
nfd	core/random.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/random.hpp	/^namespace nfd {$/;"	n
nfd	core/scheduler.cpp	/^namespace nfd {$/;"	n	file:
nfd	core/scheduler.hpp	/^namespace nfd {$/;"	n
nfd	core/segment-publisher.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/channel.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/channel.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/datagram-transport.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/ethernet-face.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/ethernet-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/ethernet-factory.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/ethernet-factory.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/face-counters.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/face-log.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/face.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/generic-link-service.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/generic-link-service.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/internal-face.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/internal-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/internal-transport.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/internal-transport.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/link-service.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/link-service.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/local-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/lp-face-wrapper.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/lp-face-wrapper.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/lp-face.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/lp-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/multicast-udp-transport.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/multicast-udp-transport.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/ndnlp-data.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/ndnlp-data.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/ndnlp-partial-message-store.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/ndnlp-partial-message-store.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/ndnlp-sequence-generator.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/ndnlp-sequence-generator.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/ndnlp-slicer.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/ndnlp-slicer.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/ndnlp-tlv.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/null-face.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/null-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/protocol-factory.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/stream-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/stream-transport.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/tcp-channel.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/tcp-channel.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/tcp-face.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/tcp-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/tcp-factory.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/tcp-factory.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/transport.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/transport.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/udp-channel.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/udp-channel.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/udp-factory.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/udp-factory.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/udp-protocol.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/udp-protocol.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/unicast-udp-transport.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/unicast-udp-transport.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/unix-stream-channel.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/unix-stream-channel.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/unix-stream-factory.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/unix-stream-factory.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/unix-stream-transport.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/unix-stream-transport.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/websocket-channel.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/websocket-channel.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/websocket-face.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/websocket-face.hpp	/^namespace nfd {$/;"	n
nfd	daemon/face/websocket-factory.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/face/websocket-factory.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/access-strategy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/access-strategy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/best-route-strategy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/best-route-strategy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/best-route-strategy2.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/best-route-strategy2.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/broadcast-strategy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/broadcast-strategy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/client-control-strategy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/client-control-strategy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/face-table.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/face-table.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/forwarder-counters.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/forwarder.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/forwarder.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/multicast-strategy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/multicast-strategy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/ncc-strategy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/ncc-strategy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/retx-suppression-exponential.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/retx-suppression-exponential.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/retx-suppression-fixed.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/retx-suppression-fixed.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/retx-suppression.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/retx-suppression.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/rtt-estimator.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/rtt-estimator.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/strategy-info.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/strategy-registry.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/strategy-registry.hpp	/^namespace nfd {$/;"	n
nfd	daemon/fw/strategy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/fw/strategy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/main.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/command-validator.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/command-validator.hpp	/^namespace nfd {$/;"	n
nfd	daemon/mgmt/face-manager.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/face-manager.hpp	/^namespace nfd {$/;"	n
nfd	daemon/mgmt/fib-manager.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/fib-manager.hpp	/^namespace nfd {$/;"	n
nfd	daemon/mgmt/forwarder-status-manager.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/forwarder-status-manager.hpp	/^namespace nfd {$/;"	n
nfd	daemon/mgmt/general-config-section.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/general-config-section.hpp	/^namespace nfd {$/;"	n
nfd	daemon/mgmt/manager-base.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/manager-base.hpp	/^namespace nfd {$/;"	n
nfd	daemon/mgmt/strategy-choice-manager.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/strategy-choice-manager.hpp	/^namespace nfd {$/;"	n
nfd	daemon/mgmt/tables-config-section.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/mgmt/tables-config-section.hpp	/^namespace nfd {$/;"	n
nfd	daemon/nfd.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/nfd.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/cs-entry-impl.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/cs-entry-impl.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/cs-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/cs-entry.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/cs-internal.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/cs-policy-lru.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/cs-policy-lru.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/cs-policy-priority-fifo.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/cs-policy-priority-fifo.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/cs-policy.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/cs-policy.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/cs.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/cs.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/dead-nonce-list.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/dead-nonce-list.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/fib-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/fib-entry.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/fib-nexthop.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/fib-nexthop.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/fib.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/fib.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/measurements-accessor.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/measurements-accessor.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/measurements-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/measurements-entry.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/measurements.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/measurements.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/name-tree-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/name-tree-entry.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/name-tree.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/name-tree.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/network-region-table.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/network-region-table.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/pit-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/pit-entry.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/pit-face-record.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/pit-face-record.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/pit-in-record.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/pit-in-record.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/pit-out-record.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/pit-out-record.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/pit.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/pit.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/strategy-choice-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/strategy-choice-entry.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/strategy-choice.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/strategy-choice.hpp	/^namespace nfd {$/;"	n
nfd	daemon/table/strategy-info-host.cpp	/^namespace nfd {$/;"	n	file:
nfd	daemon/table/strategy-info-host.hpp	/^namespace nfd {$/;"	n
nfd	rib/auto-prefix-propagator.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/auto-prefix-propagator.hpp	/^namespace nfd {$/;"	n
nfd	rib/fib-update.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/fib-update.hpp	/^namespace nfd {$/;"	n
nfd	rib/fib-updater.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/fib-updater.hpp	/^namespace nfd {$/;"	n
nfd	rib/nrd.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/nrd.hpp	/^namespace nfd {$/;"	n
nfd	rib/propagated-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/propagated-entry.hpp	/^namespace nfd {$/;"	n
nfd	rib/rib-entry.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/rib-entry.hpp	/^namespace nfd {$/;"	n
nfd	rib/rib-manager.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/rib-manager.hpp	/^namespace nfd {$/;"	n
nfd	rib/rib-status-publisher.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/rib-status-publisher.hpp	/^namespace nfd {$/;"	n
nfd	rib/rib-update-batch.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/rib-update-batch.hpp	/^namespace nfd {$/;"	n
nfd	rib/rib-update.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/rib-update.hpp	/^namespace nfd {$/;"	n
nfd	rib/rib.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/rib.hpp	/^namespace nfd {$/;"	n
nfd	rib/route.cpp	/^namespace nfd {$/;"	n	file:
nfd	rib/route.hpp	/^namespace nfd {$/;"	n
nfd	tests/core/algorithm.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/config-file.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/global-io.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/logger.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/ndebug.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/network-interface.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/network.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/privilege-helper.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/random.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/scheduler.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/segment-publisher.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/core/simple-notification.hpp	/^namespace nfd {$/;"	n
nfd	tests/core/version.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/dummy-face.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/face/dummy-lp-face.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/dummy-lp-face.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/face/dummy-stream-sender.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/face/dummy-transport.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/face/ethernet.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/face-counters.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/face-history.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/face/face.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/generic-link-service.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/internal-face.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/lp-face-wrapper.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/multicast-udp-transport.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/ndnlp.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/null-face.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/packet-datasets.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/packet-datasets.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/face/tcp.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/udp.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/unicast-udp-transport.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/unix-stream-transport.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/unix-stream.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/face/websocket.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/access-strategy.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/best-route-strategy2.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/broadcast-strategy.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/client-control-strategy.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/dummy-strategy.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/fw/face-table.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/forwarder.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/multicast-strategy.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/ncc-strategy.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/retx-suppression.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/rtt-estimator.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/strategy-tester.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/fw/strategy.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/topology-tester.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/fw/topology-tester.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/mgmt/command-validator.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/face-manager.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/fib-manager.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/forwarder-status-manager.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/general-config-section.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/manager-base.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/manager-common-fixture.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/manager-common-fixture.hpp	/^namespace nfd {$/;"	n
nfd	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/mgmt/tables-config-section.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/cs-policy-lru.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/cs-policy-priority-fifo.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/cs.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/dead-nonce-list.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/fib.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/measurements-accessor.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/measurements.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/name-tree.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/network-region-table.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/pit.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/strategy-choice.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/daemon/table/strategy-info-host.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/global-configuration.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/identity-management-fixture.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/identity-management-fixture.hpp	/^namespace nfd {$/;"	n
nfd	tests/limited-io.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/limited-io.hpp	/^namespace nfd {$/;"	n
nfd	tests/other/cs-benchmark.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/auto-prefix-propagator.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/fib-updates-common.hpp	/^namespace nfd {$/;"	n
nfd	tests/rib/fib-updates-erase-face.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/fib-updates-new-face.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/fib-updates-new-namespace.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/fib-updates-update-face.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/propagated-entry.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/rib-manager.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/rib-status-publisher-common.hpp	/^namespace nfd {$/;"	n
nfd	tests/rib/rib-status-publisher.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/rib-test-common.hpp	/^namespace nfd {$/;"	n
nfd	tests/rib/rib-update.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/rib/rib.t.cpp	/^namespace nfd {$/;"	n	file:
nfd	tests/test-common.hpp	/^namespace nfd {$/;"	n
nfd_autoreg	tools/nfd-autoreg.cpp	/^namespace nfd_autoreg {$/;"	n	namespace:ndn	file:
nfdc	tools/nfdc.cpp	/^namespace nfdc {$/;"	n	file:
nfdc	tools/nfdc.hpp	/^namespace nfdc {$/;"	n
noCallbacksFired	tests/core/config-file.t.cpp	/^  noCallbacksFired() const$/;"	f	class:nfd::tests::DummySubscriber
no_content	websocketpp/websocketpp/http/constants.hpp	/^            no_content = 204,$/;"	e	enum:websocketpp::http::status_code::value
no_incoming_buffers	websocketpp/websocketpp/error.hpp	/^    no_incoming_buffers,$/;"	e	enum:websocketpp::error::value
no_outgoing_buffers	websocketpp/websocketpp/error.hpp	/^    no_outgoing_buffers,$/;"	e	enum:websocketpp::error::value
no_protocol_support	websocketpp/websocketpp/processors/base.hpp	/^    no_protocol_support,$/;"	e	enum:websocketpp::processor::error::processor_errors
no_status	websocketpp/websocketpp/close.hpp	/^    static value const no_status = 1005;$/;"	m	namespace:websocketpp::close::status
nocase_compare	websocketpp/websocketpp/utilities.hpp	/^    struct nocase_compare$/;"	s	struct:websocketpp::utility::ci_less
node1	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  FaceManagerNode node1; \/\/ used to test FaceManager$/;"	m	class:nfd::tests::FaceManagerFixture	file:
node2	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  FaceManagerNode node2; \/\/ acts as a remote endpoint$/;"	m	class:nfd::tests::FaceManagerFixture	file:
non_authoritative_information	websocketpp/websocketpp/http/constants.hpp	/^            non_authoritative_information = 203,$/;"	e	enum:websocketpp::http::status_code::value
non_minimal_encoding	websocketpp/websocketpp/processors/base.hpp	/^    non_minimal_encoding,$/;"	e	enum:websocketpp::processor::error::processor_errors
none	websocketpp/websocketpp/concurrency/none.hpp	/^class none {$/;"	c	namespace:websocketpp::concurrency
none	websocketpp/websocketpp/logger/levels.hpp	/^    static level const none = 0x0;$/;"	m	struct:websocketpp::log::alevel
none	websocketpp/websocketpp/logger/levels.hpp	/^    static level const none = 0x0;$/;"	m	struct:websocketpp::log::elevel
none	websocketpp/websocketpp/logger/levels.hpp	/^    static value const none = 0;$/;"	m	struct:websocketpp::log::channel_type_hint
none	websocketpp/websocketpp/random/none.hpp	/^namespace none {$/;"	n	namespace:websocketpp::random
none_impl	websocketpp/websocketpp/concurrency/none.hpp	/^namespace none_impl {$/;"	n	namespace:websocketpp::concurrency
normal	websocketpp/websocketpp/close.hpp	/^    static value const normal = 1000;$/;"	m	namespace:websocketpp::close::status
not_acceptable	websocketpp/websocketpp/http/constants.hpp	/^            not_acceptable = 406,$/;"	e	enum:websocketpp::http::status_code::value
not_extended	websocketpp/websocketpp/http/constants.hpp	/^            not_extended = 510,$/;"	e	enum:websocketpp::http::status_code::value
not_found	websocketpp/websocketpp/http/constants.hpp	/^            not_found = 404,$/;"	e	enum:websocketpp::http::status_code::value
not_implemented	websocketpp/websocketpp/http/constants.hpp	/^            not_implemented = 501,$/;"	e	enum:websocketpp::http::status_code::value
not_implemented	websocketpp/websocketpp/processors/base.hpp	/^    not_implemented,$/;"	e	enum:websocketpp::processor::error::processor_errors
not_implemented	websocketpp/websocketpp/transport/debug/base.hpp	/^    not_implemented,$/;"	e	enum:websocketpp::transport::debug::error::value
not_implemented	websocketpp/websocketpp/transport/stub/base.hpp	/^    not_implemented$/;"	e	enum:websocketpp::transport::stub::error::value
not_modified	websocketpp/websocketpp/http/constants.hpp	/^            not_modified = 304,$/;"	e	enum:websocketpp::http::status_code::value
now	core/logger.cpp	/^Logger::now()$/;"	f	class:nfd::Logger
nt	tests/daemon/table/name-tree.t.cpp	/^  NameTree nt;$/;"	m	class:nfd::tests::EnumerationFixture	file:
obj	daemon/face/face-log.hpp	/^  const T& obj;$/;"	m	class:nfd::face::FaceLogHelper
ok	websocketpp/websocketpp/http/constants.hpp	/^            ok = 200,$/;"	e	enum:websocketpp::http::status_code::value
omit_handshake	websocketpp/websocketpp/close.hpp	/^    static value const omit_handshake = 1;$/;"	m	namespace:websocketpp::close::status
onA	tests/core/config-file.t.cpp	/^  onA(const ConfigSection& section, bool isDryRun)$/;"	f	class:nfd::tests::DummySubscriber
onAdd	daemon/fw/face-table.hpp	/^  signal::Signal<FaceTable, shared_ptr<Face>> onAdd;$/;"	m	class:nfd::FaceTable
onB	tests/core/config-file.t.cpp	/^  onB(const ConfigSection& section, bool isDryRun)$/;"	f	class:nfd::tests::DummySubscriber
onCanonizeFailure	tools/ndn-autoconfig/base.cpp	/^Base::onCanonizeFailure(const std::string& reason)$/;"	f	class:ndn::tools::autoconfig::Base
onCanonizeFailure	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::onCanonizeFailure(const std::string& reason)$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
onCanonizeFailure	tools/nfdc.cpp	/^Nfdc::onCanonizeFailure(const std::string& reason)$/;"	f	class:nfdc::Nfdc
onCanonizeSuccess	tools/ndn-autoconfig/base.cpp	/^Base::onCanonizeSuccess(const util::FaceUri& canonicalUri)$/;"	f	class:ndn::tools::autoconfig::Base
onCanonizeSuccess	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::onCanonizeSuccess(const ndn::util::FaceUri& canonicalUri)$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
onCommandError	rib/rib-manager.cpp	/^RibManager::onCommandError(uint32_t code, const std::string& error,$/;"	f	class:nfd::rib::RibManager
onCommandValidated	rib/rib-manager.cpp	/^RibManager::onCommandValidated(const shared_ptr<const Interest>& request)$/;"	f	class:nfd::rib::RibManager
onCommandValidationFailed	rib/rib-manager.cpp	/^RibManager::onCommandValidationFailed(const shared_ptr<const Interest>& request,$/;"	f	class:nfd::rib::RibManager
onConfig	core/logger-factory.cpp	/^LoggerFactory::onConfig(const ConfigSection& section,$/;"	f	class:nfd::LoggerFactory
onConfig	daemon/mgmt/command-validator.cpp	/^CommandValidator::onConfig(const ConfigSection& section,$/;"	f	class:nfd::CommandValidator
onConfig	daemon/mgmt/general-config-section.cpp	/^onConfig(const ConfigSection& configSection,$/;"	f	namespace:nfd::general
onConfig	rib/rib-manager.cpp	/^RibManager::onConfig(const ConfigSection& configSection,$/;"	f	class:nfd::rib::RibManager
onConnectFailed	tests/daemon/face/tcp.t.cpp	/^  onConnectFailed(const std::string& reason)$/;"	f	class:nfd::tests::FaceCreateTimeoutFixture
onConnectFailed	tests/daemon/face/tcp.t.cpp	/^  onConnectFailed(const std::string& reason)$/;"	f	class:nfd::tests::SimpleEndToEndFixture
onContentStoreHit	daemon/fw/forwarder.cpp	/^Forwarder::onContentStoreHit(const Face& inFace,$/;"	f	class:nfd::Forwarder
onContentStoreMiss	daemon/fw/forwarder.cpp	/^Forwarder::onContentStoreMiss(const Face& inFace,$/;"	f	class:nfd::Forwarder
onControlHeaderError	rib/rib-manager.cpp	/^RibManager::onControlHeaderError(uint32_t code, const std::string& reason)$/;"	f	class:nfd::rib::RibManager
onControlHeaderSuccess	rib/rib-manager.cpp	/^RibManager::onControlHeaderSuccess()$/;"	f	class:nfd::rib::RibManager
onData	tools/ndn-tlv-peek.cpp	/^  onData(const ndn::Interest& interest, ndn::Data& data)$/;"	f	class:ndntlvpeek::NdnTlvPeek
onDataUnsolicited	daemon/fw/forwarder.cpp	/^Forwarder::onDataUnsolicited(Face& inFace, const Data& data)$/;"	f	class:nfd::Forwarder
onDataUnsolicited_count	tests/daemon/fw/forwarder.t.cpp	/^  int onDataUnsolicited_count;$/;"	m	class:nfd::tests::ScopeLocalhostIncomingTestForwarder	file:
onError	tools/nfdc.cpp	/^Nfdc::onError(uint32_t code, const std::string& error, const std::string& message)$/;"	f	class:nfdc::Nfdc
onErrorFetch	tools/nfd-status.cpp	/^  onErrorFetch(uint32_t errorCode, const std::string& errorMsg)$/;"	f	class:ndn::NfdStatus
onFaceCreateError	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::onFaceCreateError(uint32_t code,$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
onFaceCreated	tests/daemon/face/tcp.t.cpp	/^  onFaceCreated(const shared_ptr<Face>& face)$/;"	f	class:nfd::tests::SimpleEndToEndFixture
onFaceCreated	tests/daemon/face/tcp.t.cpp	/^  onFaceCreated(const shared_ptr<Face>& newFace)$/;"	f	class:nfd::tests::FaceCreateTimeoutFixture
onFaceDestroyedEvent	rib/rib-manager.cpp	/^RibManager::onFaceDestroyedEvent(uint64_t faceId)$/;"	f	class:nfd::rib::RibManager
onFail	daemon/face/face.hpp	/^  signal::Signal<Face, std::string\/*reason*\/> onFail;$/;"	m	class:nfd::Face
onFail	tests/daemon/face/tcp.t.cpp	/^  onFail(const shared_ptr<Face>& face)$/;"	f	class:nfd::tests::SimpleEndToEndFixture
onFailure	tests/rib/fib-updates-common.hpp	/^  onFailure()$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
onFetchFaceStatusTimeout	rib/rib-manager.cpp	/^RibManager::onFetchFaceStatusTimeout()$/;"	f	class:nfd::rib::RibManager
onFibUpdateFailure	rib/rib.cpp	/^Rib::onFibUpdateFailure(const Rib::UpdateFailureCallback& onFailure,$/;"	f	class:nfd::rib::Rib
onFibUpdateSuccess	rib/rib.cpp	/^Rib::onFibUpdateSuccess(const RibUpdateBatch& batch,$/;"	f	class:nfd::rib::Rib
onHubConnectError	tools/ndn-autoconfig/base.cpp	/^Base::onHubConnectError(uint32_t code, const std::string& error)$/;"	f	class:ndn::tools::autoconfig::Base
onHubConnectSuccess	tools/ndn-autoconfig/base.cpp	/^Base::onHubConnectSuccess(const nfd::ControlParameters& resp)$/;"	f	class:ndn::tools::autoconfig::Base
onHubInterest	tools/ndn-autoconfig-server.cpp	/^  onHubInterest(const Name& name, const Interest& interest)$/;"	f	class:ndn::NdnAutoconfigServer
onIncomingData	daemon/fw/forwarder.cpp	/^Forwarder::onIncomingData(Face& inFace, const Data& data)$/;"	f	class:nfd::Forwarder
onIncomingInterest	daemon/fw/forwarder.cpp	/^Forwarder::onIncomingInterest(Face& inFace, const Interest& interest)$/;"	f	class:nfd::Forwarder
onIncomingNack	daemon/fw/forwarder.cpp	/^Forwarder::onIncomingNack(Face& inFace, const lp::Nack& nack)$/;"	f	class:nfd::Forwarder
onInterest	tools/ndn-tlv-poke.cpp	/^  onInterest(const ndn::Name& name,$/;"	f	class:ndntlvpoke::NdnTlvPoke
onInterestFinalize	daemon/fw/forwarder.cpp	/^Forwarder::onInterestFinalize(shared_ptr<pit::Entry> pitEntry, bool isSatisfied,$/;"	f	class:nfd::Forwarder
onInterestLoop	daemon/fw/forwarder.cpp	/^Forwarder::onInterestLoop(Face& inFace, const Interest& interest,$/;"	f	class:nfd::Forwarder
onInterestReject	daemon/fw/forwarder.cpp	/^Forwarder::onInterestReject(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::Forwarder
onInterestUnsatisfied	daemon/fw/forwarder.cpp	/^Forwarder::onInterestUnsatisfied(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::Forwarder
onLocalhopRequest	rib/rib-manager.cpp	/^RibManager::onLocalhopRequest(const Interest& request)$/;"	f	class:nfd::rib::RibManager
onLocalhostRequest	rib/rib-manager.cpp	/^RibManager::onLocalhostRequest(const Interest& request)$/;"	f	class:nfd::rib::RibManager
onNotification	rib/rib-manager.cpp	/^RibManager::onNotification(const FaceEventNotification& notification)$/;"	f	class:nfd::rib::RibManager
onNotification	tools/nfd-autoreg.cpp	/^  onNotification(const FaceEventNotification& notification)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
onNrdCommandPrefixAddNextHopError	rib/rib-manager.cpp	/^RibManager::onNrdCommandPrefixAddNextHopError(const Name& name, const std::string& msg)$/;"	f	class:nfd::rib::RibManager
onNrdCommandPrefixAddNextHopSuccess	rib/rib-manager.cpp	/^RibManager::onNrdCommandPrefixAddNextHopSuccess(const Name& prefix,$/;"	f	class:nfd::rib::RibManager
onObtainFaceIdFailure	tools/nfdc.cpp	/^Nfdc::onObtainFaceIdFailure(const std::string& message)$/;"	f	class:nfdc::Nfdc
onOutgoingData	daemon/fw/forwarder.cpp	/^Forwarder::onOutgoingData(const Data& data, Face& outFace)$/;"	f	class:nfd::Forwarder
onOutgoingInterest	daemon/fw/forwarder.cpp	/^Forwarder::onOutgoingInterest(shared_ptr<pit::Entry> pitEntry, Face& outFace,$/;"	f	class:nfd::Forwarder
onOutgoingNack	daemon/fw/forwarder.cpp	/^Forwarder::onOutgoingNack(shared_ptr<pit::Entry> pitEntry, const Face& outFace,$/;"	f	class:nfd::Forwarder
onPrefixRegistrationError	tools/ndn-autoconfig/base.cpp	/^Base::onPrefixRegistrationError(uint32_t code, const std::string& error)$/;"	f	class:ndn::tools::autoconfig::Base
onPrefixRegistrationSuccess	tools/ndn-autoconfig/base.cpp	/^Base::onPrefixRegistrationSuccess(const nfd::ControlParameters& commandSuccessResult)$/;"	f	class:ndn::tools::autoconfig::Base
onQueryFailure	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::onQueryFailure(uint32_t errorCode,$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
onQuerySuccess	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::onQuerySuccess(const ndn::ConstBufferPtr& data,$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
onReceive	daemon/face/ndnlp-partial-message-store.hpp	/^  signal::Signal<PartialMessageStore, Block> onReceive;$/;"	m	class:nfd::ndnlp::PartialMessageStore
onReceiveData	daemon/face/face.hpp	/^  signal::Signal<Face, Data> onReceiveData;$/;"	m	class:nfd::Face
onReceiveData	tests/daemon/face/tcp.t.cpp	/^  onReceiveData(const Data& data)$/;"	f	class:nfd::tests::SimpleEndToEndFixture
onReceiveInterest	daemon/face/face.hpp	/^  signal::Signal<Face, Interest> onReceiveInterest;$/;"	m	class:nfd::Face
onReceiveInterest	tests/daemon/face/tcp.t.cpp	/^  onReceiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::SimpleEndToEndFixture
onReceiveNack	daemon/face/face.hpp	/^  signal::Signal<Face, lp::Nack> onReceiveNack;$/;"	m	class:nfd::Face
onRefreshTimer	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::onRefreshTimer(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
onRegSuccess	rib/rib-manager.cpp	/^RibManager::onRegSuccess(const shared_ptr<const Interest>& request,$/;"	f	class:nfd::rib::RibManager
onRegisterCommandFailure	tools/nfd-autoreg.cpp	/^  onRegisterCommandFailure(uint64_t faceId, const Name& prefix,$/;"	f	class:ndn::nfd_autoreg::AutoregServer
onRegisterCommandSuccess	tools/nfd-autoreg.cpp	/^  onRegisterCommandSuccess(uint64_t faceId, const Name& prefix)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
onRegisterFailed	tools/ndn-autoconfig-server.cpp	/^  onRegisterFailed(const Name& prefix, const std::string& reason)$/;"	f	class:ndn::NdnAutoconfigServer
onRegisterFailed	tools/ndn-tlv-poke.cpp	/^  onRegisterFailed(const ndn::Name& prefix, const std::string& reason)$/;"	f	class:ndntlvpoke::NdnTlvPoke
onRegisterFailure	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::onRegisterFailure(uint32_t code, const std::string& error)$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
onRegisterSuccess	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::onRegisterSuccess()$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
onRemove	daemon/fw/face-table.hpp	/^  signal::Signal<FaceTable, shared_ptr<Face>> onRemove;$/;"	m	class:nfd::FaceTable
onRetryTimer	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::onRetryTimer(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
onRibUpdateFailure	rib/rib-manager.cpp	/^RibManager::onRibUpdateFailure(const RibUpdate& update, uint32_t code, const std::string& error)$/;"	f	class:nfd::rib::RibManager
onRibUpdateSuccess	rib/rib-manager.cpp	/^RibManager::onRibUpdateSuccess(const RibUpdate& update)$/;"	f	class:nfd::rib::RibManager
onRoutablePrefixesInterest	tools/ndn-autoconfig-server.cpp	/^  onRoutablePrefixesInterest(const Name& name, const Interest& interest)$/;"	f	class:ndn::NdnAutoconfigServer
onRouteExpiration	rib/rib.cpp	/^Rib::onRouteExpiration(const Name& prefix, const Route& route)$/;"	f	class:nfd::rib::Rib
onSendBatchFromQueue	tests/rib/fib-updates-common.hpp	/^  onSendBatchFromQueue(const RibUpdateBatch& batch)$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
onSendBatchFromQueue	tests/rib/rib-manager.t.cpp	/^  onSendBatchFromQueue(const RibUpdateBatch& batch, const ControlParameters parameters)$/;"	f	class:nfd::rib::tests::RibManagerFixture
onSendData	daemon/face/face.hpp	/^  signal::Signal<Face, Data> onSendData;$/;"	m	class:nfd::Face
onSendFinished	tests/daemon/face/dummy-stream-sender.hpp	/^  onSendFinished(const boost::system::error_code& error, bool isFinal)$/;"	f	class:nfd::tests::DummyStreamSender
onSendInterest	daemon/face/face.hpp	/^  signal::Signal<Face, Interest> onSendInterest;$/;"	m	class:nfd::Face
onSendNack	daemon/face/face.hpp	/^  signal::Signal<Face, lp::Nack> onSendNack;$/;"	m	class:nfd::Face
onSetStrategyFailure	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::onSetStrategyFailure(const std::string& error)$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
onSuccess	tests/rib/fib-updates-common.hpp	/^  onSuccess()$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
onSuccess	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::onSuccess(Data& data)$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
onSuccess	tools/nfdc.cpp	/^Nfdc::onSuccess(const ControlParameters& commandSuccessResult, const std::string& message)$/;"	f	class:nfdc::Nfdc
onSuccessfullConnect	tests/daemon/face/dummy-stream-sender.hpp	/^  onSuccessfullConnect(const boost::system::error_code& error)$/;"	f	class:nfd::tests::DummyStreamSender
onTimeout	tools/ndn-tlv-peek.cpp	/^  onTimeout(const ndn::Interest& interest)$/;"	f	class:ndntlvpeek::NdnTlvPeek
onTimeout	tools/nfd-status.cpp	/^  onTimeout()$/;"	f	class:ndn::NfdStatus
onUnRegSuccess	rib/rib-manager.cpp	/^RibManager::onUnRegSuccess(const shared_ptr<const Interest>& request,$/;"	f	class:nfd::rib::RibManager
onUpdateError	rib/fib-updater.cpp	/^FibUpdater::onUpdateError(const FibUpdate update,$/;"	f	class:nfd::rib::FibUpdater
onUpdateSuccess	rib/fib-updater.cpp	/^FibUpdater::onUpdateSuccess(const FibUpdate update,$/;"	f	class:nfd::rib::FibUpdater
onValidated	tests/daemon/mgmt/command-validator.t.cpp	/^  onValidated(const shared_ptr<const Interest>& interest)$/;"	f	class:nfd::tests::CommandValidatorTester
onValidationFailed	tests/daemon/mgmt/command-validator.t.cpp	/^  onValidationFailed(const shared_ptr<const Interest>& interest, const std::string& info)$/;"	f	class:nfd::tests::CommandValidatorTester
on_close	websocketpp/docs/simple_broadcast_server.cpp	/^    void on_close(connection_hdl hdl) {$/;"	f	class:broadcast_server
on_close	websocketpp/docs/simple_count_server_thread.cpp	/^    void on_close(connection_hdl hdl) {$/;"	f	class:count_server
on_close	websocketpp/examples/associative_storage/associative_storage.cpp	/^    void on_close(connection_hdl hdl) {$/;"	f	class:print_server
on_close	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    void on_close(connection_hdl hdl) {$/;"	f	class:broadcast_server
on_close	websocketpp/examples/debug_client/debug_client.cpp	/^    void on_close(websocketpp::connection_hdl) {$/;"	f	class:perftest
on_close	websocketpp/examples/debug_server/debug_server.cpp	/^void on_close(websocketpp::connection_hdl) {$/;"	f
on_close	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    void on_close(connection_hdl hdl) {$/;"	f	class:print_server
on_close	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    void on_close(connection_hdl hdl) {$/;"	f	class:broadcast_server
on_close	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    void on_close(websocketpp::connection_hdl) {$/;"	f	class:telemetry_client
on_close	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    void on_close(connection_hdl hdl) {$/;"	f	class:telemetry_server
on_close	websocketpp/examples/utility_client/utility_client.cpp	/^    void on_close(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_close	websocketpp/tutorials/utility_client/step5.cpp	/^    void on_close(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_close	websocketpp/tutorials/utility_client/step6.cpp	/^    void on_close(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_fail	websocketpp/examples/debug_client/debug_client.cpp	/^    void on_fail(websocketpp::connection_hdl hdl) {$/;"	f	class:perftest
on_fail	websocketpp/examples/debug_server/debug_server.cpp	/^void on_fail(server* s, websocketpp::connection_hdl hdl) {$/;"	f
on_fail	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    void on_fail(websocketpp::connection_hdl) {$/;"	f	class:telemetry_client
on_fail	websocketpp/examples/utility_client/utility_client.cpp	/^    void on_fail(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_fail	websocketpp/tutorials/utility_client/step4.cpp	/^    void on_fail(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_fail	websocketpp/tutorials/utility_client/step5.cpp	/^    void on_fail(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_fail	websocketpp/tutorials/utility_client/step6.cpp	/^    void on_fail(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_http	websocketpp/examples/debug_server/debug_server.cpp	/^void on_http(server* s, websocketpp::connection_hdl hdl) {$/;"	f
on_http	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    void on_http(connection_hdl hdl) {$/;"	f	class:telemetry_server
on_message	websocketpp/docs/simple_broadcast_server.cpp	/^    void on_message(connection_hdl hdl, server::message_ptr msg) {$/;"	f	class:broadcast_server
on_message	websocketpp/examples/associative_storage/associative_storage.cpp	/^    void on_message(connection_hdl hdl, server::message_ptr msg) {$/;"	f	class:print_server
on_message	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    void on_message(connection_hdl hdl, server::message_ptr msg) {$/;"	f	class:broadcast_server
on_message	websocketpp/examples/debug_client/debug_client.cpp	/^    void on_message(websocketpp::connection_hdl hdl, message_ptr) {$/;"	f	class:perftest
on_message	websocketpp/examples/debug_server/debug_server.cpp	/^void on_message(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
on_message	websocketpp/examples/echo_server/echo_handler.hpp	/^    void on_message(connection_ptr con, std::string msg) {$/;"	f	class:echo_handler
on_message	websocketpp/examples/echo_server/echo_server.cpp	/^void on_message(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
on_message	websocketpp/examples/echo_server_both/echo_server_both.cpp	/^void on_message(EndpointType* s, websocketpp::connection_hdl hdl,$/;"	f
on_message	websocketpp/examples/echo_server_tls/echo_server_tls.cpp	/^void on_message(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
on_message	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    void on_message(connection_hdl hdl, server::message_ptr msg) {$/;"	f	class:print_server
on_message	websocketpp/examples/iostream_server/iostream_server.cpp	/^void on_message(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
on_message	websocketpp/examples/print_server/print_server.cpp	/^void on_message(websocketpp::connection_hdl, server::message_ptr msg) {$/;"	f
on_message	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    void on_message(connection_hdl hdl, server::message_ptr msg) {$/;"	f	class:broadcast_server
on_message	websocketpp/examples/sip_client/sip_client.cpp	/^void on_message(client* c, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
on_message	websocketpp/examples/testee_client/testee_client.cpp	/^void on_message(client* c, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
on_message	websocketpp/examples/testee_server/testee_server.cpp	/^void on_message(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
on_message	websocketpp/examples/utility_client/utility_client.cpp	/^    void on_message(websocketpp::connection_hdl, client::message_ptr msg) {$/;"	f	class:connection_metadata
on_message	websocketpp/tutorials/utility_client/step6.cpp	/^    void on_message(websocketpp::connection_hdl, client::message_ptr msg) {$/;"	f	class:connection_metadata
on_open	websocketpp/docs/simple_broadcast_server.cpp	/^    void on_open(connection_hdl hdl) {$/;"	f	class:broadcast_server
on_open	websocketpp/docs/simple_count_server_thread.cpp	/^    void on_open(connection_hdl hdl) {$/;"	f	class:count_server
on_open	websocketpp/examples/associative_storage/associative_storage.cpp	/^    void on_open(connection_hdl hdl) {$/;"	f	class:print_server
on_open	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    void on_open(connection_hdl hdl) {$/;"	f	class:broadcast_server
on_open	websocketpp/examples/debug_client/debug_client.cpp	/^    void on_open(websocketpp::connection_hdl hdl) {$/;"	f	class:perftest
on_open	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    void on_open(connection_hdl hdl) {$/;"	f	class:print_server
on_open	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    void on_open(connection_hdl hdl) {$/;"	f	class:broadcast_server
on_open	websocketpp/examples/sip_client/sip_client.cpp	/^void on_open(client* c, websocketpp::connection_hdl hdl) {$/;"	f
on_open	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    void on_open(websocketpp::connection_hdl) {$/;"	f	class:telemetry_client
on_open	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    void on_open(connection_hdl hdl) {$/;"	f	class:telemetry_server
on_open	websocketpp/examples/utility_client/utility_client.cpp	/^    void on_open(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_open	websocketpp/tutorials/utility_client/step4.cpp	/^    void on_open(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_open	websocketpp/tutorials/utility_client/step5.cpp	/^    void on_open(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_open	websocketpp/tutorials/utility_client/step6.cpp	/^    void on_open(client * c, websocketpp::connection_hdl hdl) {$/;"	f	class:connection_metadata
on_open_print	websocketpp/test/connection/connection.cpp	/^void on_open_print(server* s, websocketpp::connection_hdl hdl)$/;"	f
on_ping	websocketpp/test/transport/integration.cpp	/^bool on_ping(server * s, websocketpp::connection_hdl, std::string) {$/;"	f
on_socket_init	websocketpp/examples/debug_client/debug_client.cpp	/^    void on_socket_init(websocketpp::connection_hdl) {$/;"	f	class:perftest
on_socket_init	websocketpp/examples/testee_server/testee_server.cpp	/^void on_socket_init(websocketpp::connection_hdl, boost::asio::ip::tcp::socket & s) {$/;"	f
on_timer	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    void on_timer(websocketpp::lib::error_code const & ec) {$/;"	f	class:telemetry_server
on_tls_init	websocketpp/examples/debug_client/debug_client.cpp	/^    context_ptr on_tls_init(websocketpp::connection_hdl) {$/;"	f	class:perftest
on_tls_init	websocketpp/examples/echo_server_both/echo_server_both.cpp	/^context_ptr on_tls_init(websocketpp::connection_hdl hdl) {$/;"	f
on_tls_init	websocketpp/examples/echo_server_tls/echo_server_tls.cpp	/^context_ptr on_tls_init(websocketpp::connection_hdl hdl) {$/;"	f
on_tls_init	websocketpp/test/transport/asio/timers.cpp	/^context_ptr on_tls_init(websocketpp::connection_hdl) {$/;"	f
opcode	websocketpp/websocketpp/frame.hpp	/^namespace opcode {$/;"	n	namespace:websocketpp::frame
open	websocketpp/websocketpp/connection.hpp	/^        open = 1,$/;"	e	enum:websocketpp::session::state::value
open_func_subprotocol	websocketpp/test/roles/server.cpp	/^void open_func_subprotocol(server* s, std::string* out, websocketpp::connection_hdl hdl) {$/;"	f
open_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(connection_hdl)> open_handler;$/;"	t	namespace:websocketpp
open_handshake_timeout	websocketpp/websocketpp/error.hpp	/^    open_handshake_timeout,$/;"	e	enum:websocketpp::error::value
operation_aborted	websocketpp/websocketpp/transport/base/connection.hpp	/^    operation_aborted,$/;"	e	enum:websocketpp::transport::error::value
operation_canceled	websocketpp/websocketpp/error.hpp	/^    operation_canceled,$/;"	e	enum:websocketpp::error::value
operation_not_supported	websocketpp/websocketpp/transport/base/connection.hpp	/^    operation_not_supported,$/;"	e	enum:websocketpp::transport::error::value
operator !=	core/network.hpp	/^  operator!=(const Network& rhs) const$/;"	f	class:nfd::Network
operator !=	daemon/table/fib.hpp	/^Fib::const_iterator::operator!=(const Fib::const_iterator& other) const$/;"	f	class:nfd::Fib::const_iterator
operator !=	daemon/table/name-tree.hpp	/^NameTree::const_iterator::operator!=(const NameTree::const_iterator& other) const$/;"	f	class:nfd::NameTree::const_iterator
operator !=	daemon/table/pit.hpp	/^Pit::const_iterator::operator!=(const Pit::const_iterator& other) const$/;"	f	class:nfd::Pit::const_iterator
operator !=	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::operator!=(const StrategyChoice::const_iterator& other) const$/;"	f	class:nfd::StrategyChoice::const_iterator
operator !=	tests/daemon/mgmt/face-manager.t.cpp	/^operator!=(const FaceStatus& left, const FaceStatus& right)$/;"	f	namespace:nfd::tests
operator !=	tests/daemon/mgmt/fib-manager.t.cpp	/^operator!=(const FibEntry& left, const FibEntry& right)$/;"	f	namespace:nfd::tests
operator !=	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^operator!=(const StrategyChoice& left, const StrategyChoice& right)$/;"	f	namespace:nfd::tests
operator ()	daemon/table/cs-policy-lru.hpp	/^  operator()(const iterator& a, const iterator& b) const$/;"	f	struct:nfd::cs::lru::EntryItComparator
operator ()	daemon/table/cs-policy-priority-fifo.hpp	/^  operator()(const iterator& a, const iterator& b) const$/;"	f	struct:nfd::cs::priority_fifo::EntryItComparator
operator ()	daemon/table/cs.hpp	/^    operator()(const EntryImpl& entry) const$/;"	f	struct:nfd::cs::Cs::EntryFromEntryImpl
operator ()	daemon/table/measurements.hpp	/^  operator()(const Entry& entry)$/;"	f	class:nfd::measurements::AnyEntry
operator ()	daemon/table/measurements.hpp	/^  operator()(const Entry& entry)$/;"	f	class:nfd::measurements::EntryWithStrategyInfo
operator ()	daemon/table/name-tree.hpp	/^  operator()(const Entry& entry)$/;"	f	struct:nfd::name_tree::AnyEntry
operator ()	daemon/table/name-tree.hpp	/^  operator()(const Entry& entry)$/;"	f	struct:nfd::name_tree::AnyEntrySubTree
operator ()	tests/other/cs-benchmark.cpp	/^    operator()(size_t i) const$/;"	f	class:nfd::tests::CsBenchmarkFixture::SimpleNameGenerator
operator ()	websocketpp/websocketpp/random/none.hpp	/^        int_type operator()() {$/;"	f	class:websocketpp::random::none::int_generator
operator ()	websocketpp/websocketpp/random/random_device.hpp	/^        int_type operator()() {$/;"	f	class:websocketpp::random::random_device::int_generator
operator ()	websocketpp/websocketpp/transport/asio/base.hpp	/^  void operator()(Arg1 arg1)$/;"	f	class:websocketpp::transport::asio::custom_alloc_handler
operator ()	websocketpp/websocketpp/transport/asio/base.hpp	/^  void operator()(Arg1 arg1, Arg2 arg2)$/;"	f	class:websocketpp::transport::asio::custom_alloc_handler
operator ()	websocketpp/websocketpp/utilities.hpp	/^        bool operator() (unsigned char const & c1, unsigned char const & c2) const {$/;"	f	struct:websocketpp::utility::ci_less::nocase_compare
operator ()	websocketpp/websocketpp/utilities.hpp	/^    bool operator() (std::string const & s1, std::string const & s2) const {$/;"	f	struct:websocketpp::utility::ci_less
operator ()	websocketpp/websocketpp/utilities.hpp	/^    bool operator()(charT ch1, charT ch2) {$/;"	f	struct:websocketpp::utility::my_equal
operator *	daemon/table/fib.hpp	/^Fib::const_iterator::operator*() const$/;"	f	class:nfd::Fib::const_iterator
operator *	daemon/table/name-tree.hpp	/^NameTree::const_iterator::operator*() const$/;"	f	class:nfd::NameTree::const_iterator
operator *	daemon/table/pit.hpp	/^Pit::const_iterator::operator*() const$/;"	f	class:nfd::Pit::const_iterator
operator *	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::operator*() const$/;"	f	class:nfd::StrategyChoice::const_iterator
operator ++	daemon/face/face-counters.hpp	/^  operator++()$/;"	f	class:nfd::PacketCounter
operator ++	daemon/table/fib.hpp	/^Fib::const_iterator::operator++()$/;"	f	class:nfd::Fib::const_iterator
operator ++	daemon/table/fib.hpp	/^Fib::const_iterator::operator++(int)$/;"	f	class:nfd::Fib::const_iterator
operator ++	daemon/table/name-tree.cpp	/^NameTree::const_iterator::operator++()$/;"	f	class:nfd::NameTree::const_iterator
operator ++	daemon/table/name-tree.hpp	/^NameTree::const_iterator::operator++(int)$/;"	f	class:nfd::NameTree::const_iterator
operator ++	daemon/table/pit.hpp	/^Pit::const_iterator::operator++()$/;"	f	class:nfd::Pit::const_iterator
operator ++	daemon/table/pit.hpp	/^Pit::const_iterator::operator++(int)$/;"	f	class:nfd::Pit::const_iterator
operator ++	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::operator++()$/;"	f	class:nfd::StrategyChoice::const_iterator
operator ++	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::operator++(int)$/;"	f	class:nfd::StrategyChoice::const_iterator
operator +=	daemon/face/face-counters.hpp	/^  operator+=(rep n)$/;"	f	class:nfd::ByteCounter
operator ->	daemon/table/fib.hpp	/^Fib::const_iterator::operator->() const$/;"	f	class:nfd::Fib::const_iterator
operator ->	daemon/table/name-tree.hpp	/^NameTree::const_iterator::operator->() const$/;"	f	class:nfd::NameTree::const_iterator
operator ->	daemon/table/pit.hpp	/^Pit::const_iterator::operator->() const$/;"	f	class:nfd::Pit::const_iterator
operator ->	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::operator->() const$/;"	f	class:nfd::StrategyChoice::const_iterator
operator <	daemon/table/cs-entry-impl.cpp	/^EntryImpl::operator<(const EntryImpl& other) const$/;"	f	class:nfd::cs::EntryImpl
operator <<	core/logger.hpp	/^operator<<(std::ostream& output, const Logger& logger)$/;"	f	namespace:nfd
operator <<	core/network.cpp	/^operator<<(std::ostream& os, const Network& network)$/;"	f	namespace:nfd
operator <<	daemon/face/face.hpp	/^operator<<(std::ostream& os, const face::FaceLogHelper<T>& flh)$/;"	f	namespace:nfd
operator <<	daemon/face/link-service.cpp	/^operator<<(std::ostream& os, const FaceLogHelper<LinkService>& flh)$/;"	f	namespace:nfd::face
operator <<	daemon/face/link-service.hpp	/^operator<<(std::ostream& os, const FaceLogHelper<T>& flh)$/;"	f	namespace:nfd::face
operator <<	daemon/face/lp-face.hpp	/^operator<<(std::ostream& os, const FaceLogHelper<T>& flh)$/;"	f	namespace:nfd::face
operator <<	daemon/face/transport.cpp	/^operator<<(std::ostream& os, TransportState state)$/;"	f	namespace:nfd::face
operator <<	daemon/face/transport.cpp	/^operator<<(std::ostream& os, const FaceLogHelper<Transport>& flh)$/;"	f	namespace:nfd::face
operator <<	daemon/face/transport.hpp	/^operator<<(std::ostream& os, const FaceLogHelper<T>& flh)$/;"	f	namespace:nfd::face
operator <<	rib/fib-update.hpp	/^operator<<(std::ostream& os, const FibUpdate& update)$/;"	f	namespace:nfd::rib
operator <<	rib/propagated-entry.cpp	/^operator<<(std::ostream& out, PropagationStatus status)$/;"	f	namespace:nfd::rib
operator <<	rib/rib-entry.cpp	/^operator<<(std::ostream& os, const RibEntry& entry)$/;"	f	namespace:nfd::rib
operator <<	rib/rib-update.cpp	/^operator<<(std::ostream& os, const RibUpdate& update)$/;"	f	namespace:nfd::rib
operator <<	rib/rib-update.cpp	/^operator<<(std::ostream& os, const RibUpdate::Action action)$/;"	f	namespace:nfd::rib
operator <<	rib/rib.cpp	/^operator<<(std::ostream& os, const Rib& rib)$/;"	f	namespace:nfd::rib
operator <<	rib/route.cpp	/^operator<<(std::ostream& os, const Route& route)$/;"	f	namespace:nfd::rib
operator <<	tests/daemon/mgmt/face-manager.t.cpp	/^operator<<(std::ostream &os, const FaceStatus& status)$/;"	f	namespace:nfd::tests
operator <<	tests/daemon/mgmt/fib-manager.t.cpp	/^operator<<(std::ostream &os, const FibEntry& entry)$/;"	f	namespace:nfd::tests
operator <<	tests/daemon/mgmt/fib-manager.t.cpp	/^operator<<(std::ostream &os, const FibManagerFixture::CheckNextHopResult& result)$/;"	f	namespace:nfd::tests
operator <<	tests/daemon/mgmt/manager-common-fixture.cpp	/^operator<<(std::ostream &os, const ManagerCommonFixture::CheckResponseResult& result)$/;"	f	namespace:nfd::tests
operator <<	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^operator<<(std::ostream &os, const StrategyChoice& entry)$/;"	f	namespace:nfd::tests
operator <<	tests/rib/auto-prefix-propagator.t.cpp	/^operator<<(std::ostream &os, const AutoPrefixPropagatorFixture::CheckRequestResult& result)$/;"	f	namespace:nfd::rib::tests
operator <<	websocketpp/examples/utility_client/utility_client.cpp	/^std::ostream & operator<< (std::ostream & out, connection_metadata const & data) {$/;"	f
operator <<	websocketpp/tutorials/utility_client/step4.cpp	/^std::ostream & operator<< (std::ostream & out, connection_metadata const & data) {$/;"	f
operator <<	websocketpp/tutorials/utility_client/step5.cpp	/^std::ostream & operator<< (std::ostream & out, connection_metadata const & data) {$/;"	f
operator <<	websocketpp/tutorials/utility_client/step6.cpp	/^std::ostream & operator<< (std::ostream & out, connection_metadata const & data) {$/;"	f
operator =	core/scheduler.cpp	/^ScopedEventId::operator=(const EventId& event)$/;"	f	class:nfd::scheduler::ScopedEventId
operator =	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    endpoint& operator= (const endpoint && rhs) {$/;"	f	class:websocketpp::transport::asio::endpoint
operator ==	core/network.hpp	/^  operator==(const Network& rhs) const$/;"	f	class:nfd::Network
operator ==	daemon/table/fib.hpp	/^Fib::const_iterator::operator==(const Fib::const_iterator& other) const$/;"	f	class:nfd::Fib::const_iterator
operator ==	daemon/table/name-tree.hpp	/^NameTree::const_iterator::operator==(const NameTree::const_iterator& other) const$/;"	f	class:nfd::NameTree::const_iterator
operator ==	daemon/table/pit.hpp	/^Pit::const_iterator::operator==(const Pit::const_iterator& other) const$/;"	f	class:nfd::Pit::const_iterator
operator ==	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::operator==(const StrategyChoice::const_iterator& other) const$/;"	f	class:nfd::StrategyChoice::const_iterator
operator ==	rib/fib-update.hpp	/^  operator==(const FibUpdate& other) const$/;"	f	class:nfd::rib::FibUpdate
operator ==	rib/route.cpp	/^Route::operator==(const Route& other) const$/;"	f	class:nfd::rib::Route
operator >>	core/network.cpp	/^operator>>(std::istream& is, Network& network)$/;"	f	namespace:nfd
operator >>	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    friend std::istream & operator>> (std::istream & in, type & t) {$/;"	f	class:websocketpp::transport::iostream::connection
operator []	daemon/face/ndnlp-sequence-generator.hpp	/^SequenceBlock::operator[](size_t pos) const$/;"	f	class:nfd::ndnlp::SequenceBlock
operator rep	daemon/face/face-counters.hpp	/^  operator rep() const$/;"	f	class:nfd::ByteCounter
operator rep	daemon/face/face-counters.hpp	/^  operator rep() const$/;"	f	class:nfd::PacketCounter
options	rib/auto-prefix-propagator.hpp	/^    ndn::nfd::CommandOptions options;$/;"	m	struct:nfd::rib::AutoPrefixPropagator::PrefixPropagationParameters
origin	rib/route.hpp	/^  uint64_t origin;$/;"	m	class:nfd::rib::Route
other	rib/propagated-entry.hpp	/^  operator=(const PropagatedEntry& other) = delete;$/;"	m	class:nfd::rib::PropagatedEntry
outFaceId	tests/daemon/fw/strategy-tester.hpp	/^    FaceId outFaceId;$/;"	m	struct:nfd::fw::tests::StrategyTester::SendInterestArgs
outFaceId	tests/daemon/fw/strategy-tester.hpp	/^    FaceId outFaceId;$/;"	m	struct:nfd::fw::tests::StrategyTester::SendNackArgs
output_stream_required	websocketpp/websocketpp/transport/iostream/base.hpp	/^    output_stream_required,$/;"	e	enum:websocketpp::transport::iostream::error::value
p	websocketpp/test/processors/hybi00.cpp	/^    websocketpp::processor::hybi00<stub_config> p;$/;"	m	struct:processor_setup	file:
p	websocketpp/test/processors/hybi13.cpp	/^    websocketpp::processor::hybi13<stub_config> p;$/;"	m	struct:processor_setup	file:
p	websocketpp/test/processors/hybi13.cpp	/^    websocketpp::processor::hybi13<stub_config_ext> p;$/;"	m	struct:processor_setup_ext	file:
packet	daemon/face/transport.hpp	/^    Block packet;$/;"	m	class:nfd::face::Transport::Packet
parameter_list	websocketpp/websocketpp/http/constants.hpp	/^    typedef std::vector< std::pair<std::string,attribute_list> > parameter_list;$/;"	t	namespace:websocketpp::http
parameters	rib/auto-prefix-propagator.hpp	/^    ndn::nfd::ControlParameters parameters;$/;"	m	struct:nfd::rib::AutoPrefixPropagator::PrefixPropagationParameters
parse	core/config-file.cpp	/^ConfigFile::parse(const ConfigSection& config, bool isDryRun, const std::string& filename)$/;"	f	class:nfd::ConfigFile
parse	core/config-file.cpp	/^ConfigFile::parse(const std::string& filename, bool isDryRun)$/;"	f	class:nfd::ConfigFile
parse	core/config-file.cpp	/^ConfigFile::parse(const std::string& input, bool isDryRun, const std::string& filename)$/;"	f	class:nfd::ConfigFile
parse	core/config-file.cpp	/^ConfigFile::parse(std::istream& input, bool isDryRun, const std::string& filename)$/;"	f	class:nfd::ConfigFile
parseConfig	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^  parseConfig(const std::string& type, bool isDryRun)$/;"	f	class:nfd::tests::FaceManagerProcessConfigFixture
parseLevel	core/logger-factory.cpp	/^LoggerFactory::parseLevel(const std::string& level)$/;"	f	class:nfd::LoggerFactory
parseNumber	core/config-file.hpp	/^ConfigFile::parseNumber(const ConfigSection::value_type& option,$/;"	f	class:nfd::ConfigFile
parseSrvRr	tools/ndn-autoconfig/base-dns.cpp	/^BaseDns::parseSrvRr(const QueryAnswer& queryAnswer, int answerSize)$/;"	f	class:ndn::tools::autoconfig::BaseDns
parseYesNo	core/config-file.cpp	/^ConfigFile::parseYesNo(const ConfigSection::value_type& option,$/;"	f	class:nfd::ConfigFile
parse_parameter_list	websocketpp/websocketpp/http/impl/parser.hpp	/^inline bool parser::parse_parameter_list(std::string const & in,$/;"	f	class:websocketpp::http::parser::parser
parser	websocketpp/websocketpp/http/impl/parser.hpp	/^namespace parser {$/;"	n	namespace:websocketpp::http
parser	websocketpp/websocketpp/http/impl/request.hpp	/^namespace parser {$/;"	n	namespace:websocketpp::http
parser	websocketpp/websocketpp/http/impl/response.hpp	/^namespace parser {$/;"	n	namespace:websocketpp::http
parser	websocketpp/websocketpp/http/parser.hpp	/^    parser()$/;"	f	class:websocketpp::http::parser::parser
parser	websocketpp/websocketpp/http/parser.hpp	/^class parser {$/;"	c	namespace:websocketpp::http::parser
parser	websocketpp/websocketpp/http/parser.hpp	/^namespace parser {$/;"	n	namespace:websocketpp::http
parser	websocketpp/websocketpp/http/request.hpp	/^namespace parser {$/;"	n	namespace:websocketpp::http
parser	websocketpp/websocketpp/http/response.hpp	/^namespace parser {$/;"	n	namespace:websocketpp::http
partialEnumerate	daemon/table/name-tree.cpp	/^NameTree::partialEnumerate(const Name& prefix,$/;"	f	class:nfd::NameTree
partial_content	websocketpp/websocketpp/http/constants.hpp	/^            partial_content = 206,$/;"	e	enum:websocketpp::http::status_code::value
pass_through	websocketpp/websocketpp/transport/asio/base.hpp	/^    pass_through,$/;"	e	enum:websocketpp::transport::asio::error::value
pass_through	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        pass_through,$/;"	e	enum:websocketpp::transport::asio::socket::error::value
pass_through	websocketpp/websocketpp/transport/base/connection.hpp	/^    pass_through,$/;"	e	enum:websocketpp::transport::error::value
patch_version	websocketpp/websocketpp/version.hpp	/^static int const patch_version = 1;$/;"	m	namespace:websocketpp
pause_reading	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::pause_reading() {$/;"	f	class:websocketpp::connection
pause_reading	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::pause_reading(connection_hdl hdl) {$/;"	f	class:websocketpp::endpoint
pause_reading	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::pause_reading(connection_hdl hdl, lib::error_code & ec)$/;"	f	class:websocketpp::endpoint
payload	daemon/face/ndnlp-data.hpp	/^  Block payload;$/;"	m	class:nfd::ndnlp::NdnlpData
payload_size_basic	websocketpp/websocketpp/frame.hpp	/^    static uint8_t const payload_size_basic = 125;$/;"	m	namespace:websocketpp::frame::limits
payload_size_code_16bit	websocketpp/websocketpp/frame.hpp	/^static uint8_t const payload_size_code_16bit = 0x7E; \/\/ 126$/;"	m	namespace:websocketpp::frame
payload_size_code_64bit	websocketpp/websocketpp/frame.hpp	/^static uint8_t const payload_size_code_64bit = 0x7F; \/\/ 127$/;"	m	namespace:websocketpp::frame
payload_size_extended	websocketpp/websocketpp/frame.hpp	/^    static uint16_t const payload_size_extended = 0xFFFF; \/\/ 2^16, 65535$/;"	m	namespace:websocketpp::frame::limits
payload_size_jumbo	websocketpp/websocketpp/frame.hpp	/^    static uint64_t const payload_size_jumbo = 0x7FFFFFFFFFFFFFFFLL;\/\/2^63$/;"	m	namespace:websocketpp::frame::limits
payload_violation	websocketpp/websocketpp/error.hpp	/^    payload_violation,$/;"	e	enum:websocketpp::error::value
payment_required	websocketpp/websocketpp/http/constants.hpp	/^            payment_required = 402,$/;"	e	enum:websocketpp::http::status_code::value
pcapInit	daemon/face/ethernet-face.cpp	/^EthernetFace::pcapInit()$/;"	f	class:nfd::EthernetFace
pcap_t	daemon/face/ethernet-face.hpp	/^typedef pcap pcap_t;$/;"	t
perftest	websocketpp/examples/debug_client/debug_client.cpp	/^    perftest () {$/;"	f	class:perftest
perftest	websocketpp/examples/debug_client/debug_client.cpp	/^class perftest {$/;"	c	file:
permessage_deflate	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^namespace permessage_deflate {$/;"	n	namespace:websocketpp::extensions
permessage_deflate	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^namespace permessage_deflate {$/;"	n	namespace:websocketpp::extensions
permessage_deflate_config	websocketpp/test/processors/hybi07.cpp	/^    struct permessage_deflate_config {$/;"	s	struct:stub_config	file:
permessage_deflate_config	websocketpp/test/processors/hybi08.cpp	/^    struct permessage_deflate_config {$/;"	s	struct:stub_config	file:
permessage_deflate_config	websocketpp/test/processors/hybi13.cpp	/^    struct permessage_deflate_config {$/;"	s	struct:stub_config	file:
permessage_deflate_config	websocketpp/test/processors/hybi13.cpp	/^    struct permessage_deflate_config {$/;"	s	struct:stub_config_ext	file:
permessage_deflate_config	websocketpp/websocketpp/config/core.hpp	/^    struct permessage_deflate_config {$/;"	s	struct:websocketpp::config::core
permessage_deflate_config	websocketpp/websocketpp/config/core_client.hpp	/^    struct permessage_deflate_config {$/;"	s	struct:websocketpp::config::core_client
permessage_deflate_config	websocketpp/websocketpp/config/debug.hpp	/^    struct permessage_deflate_config {$/;"	s	struct:websocketpp::config::debug_core
permessage_deflate_config	websocketpp/websocketpp/config/minimal_server.hpp	/^    struct permessage_deflate_config {$/;"	s	struct:websocketpp::config::minimal_server
permessage_deflate_type	websocketpp/test/processors/hybi07.cpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:stub_config	file:
permessage_deflate_type	websocketpp/test/processors/hybi08.cpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:stub_config	file:
permessage_deflate_type	websocketpp/test/processors/hybi13.cpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:stub_config	file:
permessage_deflate_type	websocketpp/test/processors/hybi13.cpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:stub_config_ext	file:
permessage_deflate_type	websocketpp/websocketpp/config/core.hpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:websocketpp::config::core
permessage_deflate_type	websocketpp/websocketpp/config/core_client.hpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:websocketpp::config::core_client
permessage_deflate_type	websocketpp/websocketpp/config/debug.hpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:websocketpp::config::debug_core
permessage_deflate_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        <permessage_deflate_config> permessage_deflate_type;$/;"	t	struct:websocketpp::config::minimal_server
permessage_deflate_type	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename config::permessage_deflate_type permessage_deflate_type;$/;"	t	class:websocketpp::processor::hybi13
ping	websocketpp/websocketpp/frame.hpp	/^        ping = 0x9,$/;"	e	enum:websocketpp::frame::opcode::value
ping	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::ping(std::string const & payload) {$/;"	f	class:websocketpp::connection
ping	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::ping(std::string const& payload, lib::error_code& ec) {$/;"	f	class:websocketpp::connection
ping	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::ping(connection_hdl hdl, std::string const & payload)$/;"	f	class:websocketpp::endpoint
ping	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::ping(connection_hdl hdl, std::string const &$/;"	f	class:websocketpp::endpoint
ping_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<bool(connection_hdl,std::string)> ping_handler;$/;"	t	namespace:websocketpp
ping_on_open	websocketpp/test/transport/integration.cpp	/^void ping_on_open(T * c, std::string payload, websocketpp::connection_hdl hdl) {$/;"	f
pit	daemon/table/fib.hpp	/^namespace pit {$/;"	n	namespace:nfd
pit	daemon/table/measurements.hpp	/^namespace pit {$/;"	n	namespace:nfd
pit	daemon/table/pit-entry.cpp	/^namespace pit {$/;"	n	namespace:nfd	file:
pit	daemon/table/pit-entry.hpp	/^namespace pit {$/;"	n	namespace:nfd
pit	daemon/table/pit-face-record.cpp	/^namespace pit {$/;"	n	namespace:nfd	file:
pit	daemon/table/pit-face-record.hpp	/^namespace pit {$/;"	n	namespace:nfd
pit	daemon/table/pit-in-record.cpp	/^namespace pit {$/;"	n	namespace:nfd	file:
pit	daemon/table/pit-in-record.hpp	/^namespace pit {$/;"	n	namespace:nfd
pit	daemon/table/pit-out-record.cpp	/^namespace pit {$/;"	n	namespace:nfd	file:
pit	daemon/table/pit-out-record.hpp	/^namespace pit {$/;"	n	namespace:nfd
pit	daemon/table/pit.cpp	/^namespace pit {$/;"	n	namespace:nfd	file:
pit	daemon/table/pit.hpp	/^namespace pit {$/;"	n	namespace:nfd
pit	tests/daemon/fw/best-route-strategy2.t.cpp	/^  Pit& pit;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
pit	tests/daemon/table/pit.t.cpp	/^namespace pit {$/;"	n	namespace:nfd	file:
pitEntry	tests/daemon/fw/strategy-tester.hpp	/^    shared_ptr<pit::Entry> pitEntry;$/;"	m	struct:nfd::fw::tests::StrategyTester::RejectPendingInterestArgs
pitEntry	tests/daemon/fw/strategy-tester.hpp	/^    shared_ptr<pit::Entry> pitEntry;$/;"	m	struct:nfd::fw::tests::StrategyTester::SendInterestArgs
pitEntry	tests/daemon/fw/strategy-tester.hpp	/^    shared_ptr<pit::Entry> pitEntry;$/;"	m	struct:nfd::fw::tests::StrategyTester::SendNackArgs
plain	websocketpp/websocketpp/http/parser.hpp	/^        plain,$/;"	e	enum:websocketpp::http::parser::body_encoding::value
pms	daemon/face/ethernet-face.hpp	/^    unique_ptr<ndnlp::PartialMessageStore> pms;$/;"	m	struct:nfd::EthernetFace::Reassembler
pms	tests/daemon/face/ndnlp.t.cpp	/^  ndnlp::PartialMessageStore pms;$/;"	m	class:nfd::ndnlp::tests::ReassembleFixture	file:
policy_violation	websocketpp/websocketpp/close.hpp	/^    static value const policy_violation = 1008;$/;"	m	namespace:websocketpp::close::status
poll	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    std::size_t poll() {$/;"	f	class:websocketpp::transport::asio::endpoint
poll_one	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    std::size_t poll_one() {$/;"	f	class:websocketpp::transport::asio::endpoint
pong	websocketpp/websocketpp/frame.hpp	/^        pong = 0xA,$/;"	e	enum:websocketpp::frame::opcode::value
pong	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::pong(std::string const & payload) {$/;"	f	class:websocketpp::connection
pong	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::pong(std::string const& payload, lib::error_code& ec) {$/;"	f	class:websocketpp::connection
pong	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::pong(connection_hdl hdl, std::string const & payload)$/;"	f	class:websocketpp::endpoint
pong	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::pong(connection_hdl hdl, std::string const & payload,$/;"	f	class:websocketpp::endpoint
pong_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(connection_hdl,std::string)> pong_handler;$/;"	t	namespace:websocketpp
pong_timeout_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(connection_hdl,std::string)> pong_timeout_handler;$/;"	t	namespace:websocketpp
pool	websocketpp/websocketpp/message_buffer/pool.hpp	/^namespace pool {$/;"	n	namespace:websocketpp::message_buffer
post_init	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void post_init() {$/;"	f	class:websocketpp::transport::asio::connection
post_init	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    void post_init(init_handler callback) {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
post_init	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void post_init(init_handler callback) {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
pre_init	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    void pre_init(init_handler callback) {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
pre_init	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void pre_init(init_handler callback) {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
pre_init_handler	websocketpp/websocketpp/transport/asio/base.hpp	/^typedef lib::function<void (lib::error_code const & ec)> pre_init_handler;$/;"	t	namespace:websocketpp::transport::asio
precondition_failed	websocketpp/websocketpp/http/constants.hpp	/^            precondition_failed = 412,$/;"	e	enum:websocketpp::http::status_code::value
precondition_required	websocketpp/websocketpp/http/constants.hpp	/^            precondition_required = 428,$/;"	e	enum:websocketpp::http::status_code::value
predicate_NameTreeEntry_hasFibEntry	daemon/table/fib.cpp	/^predicate_NameTreeEntry_hasFibEntry(const name_tree::Entry& entry)$/;"	f	namespace:nfd
predicate_NextHop_eligible	daemon/fw/best-route-strategy2.cpp	/^predicate_NextHop_eligible(const shared_ptr<pit::Entry>& pitEntry,$/;"	f	namespace:nfd::fw
predicate_PitEntry_canForwardTo_NextHop	daemon/fw/best-route-strategy.cpp	/^predicate_PitEntry_canForwardTo_NextHop(shared_ptr<pit::Entry> pitEntry,$/;"	f	namespace:nfd::fw
prediction	daemon/fw/ncc-strategy.hpp	/^    time::microseconds prediction;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
prepare_body	websocketpp/websocketpp/http/impl/parser.hpp	/^inline bool parser::prepare_body() {$/;"	f	class:websocketpp::http::parser::parser
prepare_close	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code prepare_close(close::status::value, std::string const &, $/;"	f	class:websocketpp::processor::hybi00
prepare_close	websocketpp/websocketpp/processors/hybi13.hpp	/^    virtual lib::error_code prepare_close(close::status::value code,$/;"	f	class:websocketpp::processor::hybi13
prepare_control	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code prepare_control(frame::opcode::value op,$/;"	f	class:websocketpp::processor::hybi13
prepare_data_frame	websocketpp/websocketpp/processors/hybi00.hpp	/^    virtual lib::error_code prepare_data_frame(message_ptr in, message_ptr out)$/;"	f	class:websocketpp::processor::hybi00
prepare_data_frame	websocketpp/websocketpp/processors/hybi13.hpp	/^    virtual lib::error_code prepare_data_frame(message_ptr in, message_ptr out)$/;"	f	class:websocketpp::processor::hybi13
prepare_header	websocketpp/websocketpp/frame.hpp	/^inline std::string prepare_header(const basic_header &h, const$/;"	f	namespace:websocketpp::frame
prepare_masking_key	websocketpp/websocketpp/frame.hpp	/^inline size_t prepare_masking_key(const masking_key_type& key) {$/;"	f	namespace:websocketpp::frame
prepare_ping	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code prepare_ping(std::string const &, message_ptr) const$/;"	f	class:websocketpp::processor::hybi00
prepare_ping	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code prepare_ping(std::string const & in, message_ptr out) const {$/;"	f	class:websocketpp::processor::hybi13
prepare_pong	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code prepare_pong(std::string const &, message_ptr) const$/;"	f	class:websocketpp::processor::hybi00
prepare_pong	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code prepare_pong(std::string const & in, message_ptr out) const {$/;"	f	class:websocketpp::processor::hybi13
prepared_key	websocketpp/websocketpp/processors/hybi13.hpp	/^        size_t      prepared_key;   \/\/ prepared masking key$/;"	m	struct:websocketpp::processor::hybi13::msg_metadata
prerelease_flag	websocketpp/websocketpp/version.hpp	/^static char const prerelease_flag[] = "";$/;"	m	namespace:websocketpp
previousFace	daemon/fw/ncc-strategy.hpp	/^    weak_ptr<Face> previousFace;$/;"	m	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
print	core/network.cpp	/^Network::print(std::ostream& os) const$/;"	f	class:nfd::Network
printModules	daemon/main.cpp	/^  printModules(std::ostream& os)$/;"	f	class:nfd::NfdRunner
printUsage	daemon/main.cpp	/^  printUsage(std::ostream& os, const std::string& programName)$/;"	f	class:nfd::NfdRunner
printXmlFooter	tools/nfd-status.cpp	/^  printXmlFooter()$/;"	f	class:ndn::NfdStatus	file:
printXmlHeader	tools/nfd-status.cpp	/^  printXmlHeader()$/;"	f	class:ndn::NfdStatus	file:
print_server	websocketpp/examples/associative_storage/associative_storage.cpp	/^    print_server() : m_next_sessionid(1) {$/;"	f	class:print_server
print_server	websocketpp/examples/associative_storage/associative_storage.cpp	/^class print_server {$/;"	c	file:
print_server	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    print_server() : m_next_sessionid(1) {$/;"	f	class:print_server
print_server	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^class print_server {$/;"	c	file:
priority_fifo	daemon/table/cs-policy-priority-fifo.cpp	/^namespace priority_fifo {$/;"	n	namespace:nfd::cs	file:
priority_fifo	daemon/table/cs-policy-priority-fifo.hpp	/^namespace priority_fifo {$/;"	n	namespace:nfd::cs
process	core/config-file.cpp	/^ConfigFile::process(bool isDryRun, const std::string& filename) const$/;"	f	class:nfd::ConfigFile
process	websocketpp/websocketpp/http/impl/request.hpp	/^inline void request::process(std::string::iterator begin, std::string::iterator$/;"	f	class:websocketpp::http::parser::request
process	websocketpp/websocketpp/http/impl/response.hpp	/^inline void response::process(std::string::iterator begin,$/;"	f	class:websocketpp::http::parser::response
processConfig	daemon/mgmt/face-manager.cpp	/^FaceManager::processConfig(const ConfigSection& configSection,$/;"	f	class:nfd::FaceManager
processConfig	daemon/mgmt/tables-config-section.cpp	/^TablesConfigSection::processConfig(const ConfigSection& configSection,$/;"	f	class:nfd::TablesConfigSection
processErrorCode	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::processErrorCode(const boost::system::error_code& error)$/;"	f	class:nfd::face::DatagramTransport
processErrorCode	daemon/face/ethernet-face.cpp	/^EthernetFace::processErrorCode(const boost::system::error_code& error)$/;"	f	class:nfd::EthernetFace
processErrorCode	daemon/face/stream-face.hpp	/^StreamFace<T, U>::processErrorCode(const boost::system::error_code& error)$/;"	f	class:nfd::StreamFace
processErrorCode	daemon/face/stream-transport.hpp	/^StreamTransport<T>::processErrorCode(const boost::system::error_code& error)$/;"	f	class:nfd::face::StreamTransport
processFaceStatusDataset	tools/nfd-autoreg.cpp	/^  processFaceStatusDataset(const shared_ptr<ndn::OBufferStream>& buffer)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
processIncomingPacket	daemon/face/ethernet-face.cpp	/^EthernetFace::processIncomingPacket(const pcap_pkthdr* header, const uint8_t* packet)$/;"	f	class:nfd::EthernetFace
processInterest	tests/daemon/fw/forwarder.t.cpp	/^  processInterest(shared_ptr<Interest> badInterest)$/;"	f	class:nfd::tests::MalformedPacketFixture
processNetworkRegionSection	daemon/mgmt/tables-config-section.cpp	/^TablesConfigSection::processNetworkRegionSection(const ConfigSection& configSection,$/;"	f	class:nfd::TablesConfigSection
processSectionEther	daemon/mgmt/face-manager.cpp	/^FaceManager::processSectionEther(const ConfigSection& configSection, bool isDryRun,$/;"	f	class:nfd::FaceManager
processSectionTcp	daemon/mgmt/face-manager.cpp	/^FaceManager::processSectionTcp(const ConfigSection& configSection, bool isDryRun)$/;"	f	class:nfd::FaceManager
processSectionUdp	daemon/mgmt/face-manager.cpp	/^FaceManager::processSectionUdp(const ConfigSection& configSection, bool isDryRun,$/;"	f	class:nfd::FaceManager
processSectionUnix	daemon/mgmt/face-manager.cpp	/^FaceManager::processSectionUnix(const ConfigSection& configSection, bool isDryRun)$/;"	f	class:nfd::FaceManager
processSectionWebSocket	daemon/mgmt/face-manager.cpp	/^FaceManager::processSectionWebSocket(const ConfigSection& configSection, bool isDryRun)$/;"	f	class:nfd::FaceManager
processStrategyChoiceSection	daemon/mgmt/tables-config-section.cpp	/^TablesConfigSection::processStrategyChoiceSection(const ConfigSection& configSection,$/;"	f	class:nfd::TablesConfigSection
process_body	websocketpp/websocketpp/http/impl/parser.hpp	/^inline size_t parser::process_body(char const * buf, size_t len) {$/;"	f	class:websocketpp::http::parser::parser
process_body	websocketpp/websocketpp/http/impl/response.hpp	/^inline size_t response::process_body(char const * buf, size_t len) {$/;"	f	class:websocketpp::http::parser::response
process_control_frame	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::process_control_frame(typename config::message_type::ptr msg)$/;"	f	class:websocketpp::connection
process_handshake	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code process_handshake(request_type const & req,$/;"	f	class:websocketpp::processor::hybi00
process_handshake	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code process_handshake(request_type const & request, $/;"	f	class:websocketpp::processor::hybi13
process_handshake_key	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code process_handshake_key(std::string & key) const {$/;"	f	class:websocketpp::processor::hybi13
process_handshake_request	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::process_handshake_request() {$/;"	f	class:websocketpp::connection
process_header	websocketpp/websocketpp/http/impl/parser.hpp	/^inline void parser::process_header(std::string::iterator begin,$/;"	f	class:websocketpp::http::parser::parser
process_messages	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    void process_messages() {$/;"	f	class:broadcast_server
process_payload_bytes	websocketpp/websocketpp/processors/hybi13.hpp	/^    size_t process_payload_bytes(uint8_t * buf, size_t len, lib::error_code& ec)$/;"	f	class:websocketpp::processor::hybi13
processor	websocketpp/websocketpp/processors/base.hpp	/^namespace processor {$/;"	n	namespace:websocketpp
processor	websocketpp/websocketpp/processors/hybi00.hpp	/^namespace processor {$/;"	n	namespace:websocketpp
processor	websocketpp/websocketpp/processors/hybi07.hpp	/^namespace processor {$/;"	n	namespace:websocketpp
processor	websocketpp/websocketpp/processors/hybi08.hpp	/^namespace processor {$/;"	n	namespace:websocketpp
processor	websocketpp/websocketpp/processors/hybi13.hpp	/^namespace processor {$/;"	n	namespace:websocketpp
processor	websocketpp/websocketpp/processors/processor.hpp	/^    explicit processor(bool secure, bool p_is_server)$/;"	f	class:websocketpp::processor::processor
processor	websocketpp/websocketpp/processors/processor.hpp	/^class processor {$/;"	c	namespace:websocketpp::processor
processor	websocketpp/websocketpp/processors/processor.hpp	/^namespace processor {$/;"	n	namespace:websocketpp
processor_category	websocketpp/websocketpp/processors/base.hpp	/^    processor_category() {}$/;"	f	class:websocketpp::processor::error::processor_category
processor_category	websocketpp/websocketpp/processors/base.hpp	/^class processor_category : public lib::error_category {$/;"	c	namespace:websocketpp::processor::error
processor_errors	websocketpp/websocketpp/processors/base.hpp	/^enum processor_errors {$/;"	g	namespace:websocketpp::processor::error
processor_ptr	websocketpp/websocketpp/connection.hpp	/^    typedef lib::shared_ptr<processor_type> processor_ptr;$/;"	t	class:websocketpp::connection
processor_setup	websocketpp/test/processors/hybi00.cpp	/^    processor_setup(bool server)$/;"	f	struct:processor_setup
processor_setup	websocketpp/test/processors/hybi00.cpp	/^struct processor_setup {$/;"	s	file:
processor_setup	websocketpp/test/processors/hybi13.cpp	/^    processor_setup(bool server)$/;"	f	struct:processor_setup
processor_setup	websocketpp/test/processors/hybi13.cpp	/^struct processor_setup {$/;"	s	file:
processor_setup_ext	websocketpp/test/processors/hybi13.cpp	/^    processor_setup_ext(bool server)$/;"	f	struct:processor_setup_ext
processor_setup_ext	websocketpp/test/processors/hybi13.cpp	/^struct processor_setup_ext {$/;"	s	file:
processor_type	websocketpp/websocketpp/connection.hpp	/^    typedef processor::processor<config> processor_type;$/;"	t	class:websocketpp::connection
prohibitAllIpv4Endpoints	daemon/face/tcp-factory.cpp	/^TcpFactory::prohibitAllIpv4Endpoints(uint16_t port)$/;"	f	class:nfd::TcpFactory
prohibitAllIpv4Endpoints	daemon/face/udp-factory.cpp	/^UdpFactory::prohibitAllIpv4Endpoints(uint16_t port)$/;"	f	class:nfd::UdpFactory
prohibitAllIpv6Endpoints	daemon/face/tcp-factory.cpp	/^TcpFactory::prohibitAllIpv6Endpoints(uint16_t port)$/;"	f	class:nfd::TcpFactory
prohibitAllIpv6Endpoints	daemon/face/udp-factory.cpp	/^UdpFactory::prohibitAllIpv6Endpoints(uint16_t port)$/;"	f	class:nfd::UdpFactory
prohibitEndpoint	daemon/face/tcp-factory.cpp	/^TcpFactory::prohibitEndpoint(const tcp::Endpoint& endpoint)$/;"	f	class:nfd::TcpFactory
prohibitEndpoint	daemon/face/udp-factory.cpp	/^UdpFactory::prohibitEndpoint(const udp::Endpoint& endpoint)$/;"	f	class:nfd::UdpFactory
project	docs/conf.py	/^project = u'NFD - Named Data Networking Forwarding Daemon'$/;"	v
propagateTimer	daemon/fw/ncc-strategy.hpp	/^    scheduler::EventId propagateTimer;$/;"	m	class:nfd::fw::NccStrategy::PitEntryInfo
protocol	daemon/face/datagram-transport.hpp	/^  typedef Protocol protocol;$/;"	t	class:nfd::face::DatagramTransport
protocol	daemon/face/stream-face.hpp	/^  typedef Protocol protocol;$/;"	t	class:nfd::StreamFace
protocol	daemon/face/stream-transport.hpp	/^  typedef Protocol protocol;$/;"	t	class:nfd::face::StreamTransport
protocol_error	websocketpp/websocketpp/close.hpp	/^    static value const protocol_error = 1002;$/;"	m	namespace:websocketpp::close::status
protocol_violation	websocketpp/websocketpp/processors/base.hpp	/^    protocol_violation,$/;"	e	enum:websocketpp::processor::error::processor_errors
proxy_authentication_required	websocketpp/websocketpp/http/constants.hpp	/^            proxy_authentication_required = 407,$/;"	e	enum:websocketpp::http::status_code::value
proxy_data	websocketpp/websocketpp/transport/asio/connection.hpp	/^        proxy_data() : timeout_proxy(config::timeout_proxy) {}$/;"	f	struct:websocketpp::transport::asio::connection::proxy_data
proxy_data	websocketpp/websocketpp/transport/asio/connection.hpp	/^    struct proxy_data {$/;"	s	class:websocketpp::transport::asio::connection
proxy_failed	websocketpp/websocketpp/transport/asio/base.hpp	/^    proxy_failed,$/;"	e	enum:websocketpp::transport::asio::error::value
proxy_init	websocketpp/websocketpp/transport/asio/connection.hpp	/^    lib::error_code proxy_init(std::string const & authority) {$/;"	f	class:websocketpp::transport::asio::connection
proxy_invalid	websocketpp/websocketpp/transport/asio/base.hpp	/^    proxy_invalid,$/;"	e	enum:websocketpp::transport::asio::error::value
proxy_read	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void proxy_read(init_handler callback) {$/;"	f	class:websocketpp::transport::asio::connection
proxy_write	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void proxy_write() {$/;"	f	class:websocketpp::transport::asio::connection
ptr	websocketpp/examples/utility_client/utility_client.cpp	/^    typedef websocketpp::lib::shared_ptr<connection_metadata> ptr;$/;"	t	class:connection_metadata	file:
ptr	websocketpp/test/message_buffer/alloc.cpp	/^    typedef websocketpp::lib::shared_ptr<stub> ptr;$/;"	t	struct:stub	file:
ptr	websocketpp/test/message_buffer/message.cpp	/^    typedef websocketpp::lib::shared_ptr<stub> ptr;$/;"	t	struct:stub	file:
ptr	websocketpp/test/transport/iostream/connection.cpp	/^    typedef websocketpp::lib::shared_ptr<type> ptr;$/;"	t	struct:stub_con	file:
ptr	websocketpp/tutorials/utility_client/step4.cpp	/^    typedef websocketpp::lib::shared_ptr<connection_metadata> ptr;$/;"	t	class:connection_metadata	file:
ptr	websocketpp/tutorials/utility_client/step5.cpp	/^    typedef websocketpp::lib::shared_ptr<connection_metadata> ptr;$/;"	t	class:connection_metadata	file:
ptr	websocketpp/tutorials/utility_client/step6.cpp	/^    typedef websocketpp::lib::shared_ptr<connection_metadata> ptr;$/;"	t	class:connection_metadata	file:
ptr	websocketpp/websocketpp/connection.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::connection
ptr	websocketpp/websocketpp/http/request.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::http::parser::request
ptr	websocketpp/websocketpp/http/response.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::http::parser::response
ptr	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    typedef lib::shared_ptr<con_msg_manager> ptr;$/;"	t	class:websocketpp::message_buffer::alloc::con_msg_manager
ptr	websocketpp/websocketpp/message_buffer/message.hpp	/^    typedef lib::shared_ptr<message> ptr;$/;"	t	class:websocketpp::message_buffer::message
ptr	websocketpp/websocketpp/message_buffer/pool.hpp	/^    typedef lib::shared_ptr<con_msg_manager> ptr;$/;"	t	class:websocketpp::message_buffer::alloc::con_msg_manager
ptr	websocketpp/websocketpp/message_buffer/pool.hpp	/^    typedef lib::shared_ptr<message> ptr;$/;"	t	class:websocketpp::message_buffer::message
ptr	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::asio::connection
ptr	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::asio::basic_socket::connection
ptr	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
ptr	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::debug::connection
ptr	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::debug::endpoint
ptr	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::iostream::connection
ptr	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::iostream::endpoint
ptr	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::stub::connection
ptr	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    typedef lib::shared_ptr<type> ptr;$/;"	t	class:websocketpp::transport::stub::endpoint
publish	core/segment-publisher.hpp	/^  publish()$/;"	f	class:nfd::SegmentPublisher
publishSegment	core/segment-publisher.hpp	/^  publishSegment(shared_ptr<Data>& data)$/;"	f	class:nfd::SegmentPublisher
pygments_style	docs/conf.py	/^pygments_style = 'sphinx'$/;"	v
queryFaces	daemon/mgmt/face-manager.cpp	/^FaceManager::queryFaces(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FaceManager
querySrvRr	tools/ndn-autoconfig/base-dns.cpp	/^BaseDns::querySrvRr(const std::string& fqdn)$/;"	f	class:ndn::tools::autoconfig::BaseDns
querySrvRrSearch	tools/ndn-autoconfig/base-dns.cpp	/^BaseDns::querySrvRrSearch()$/;"	f	class:ndn::tools::autoconfig::BaseDns
queueIt	daemon/table/cs-policy-priority-fifo.hpp	/^  QueueIt queueIt;$/;"	m	struct:nfd::cs::priority_fifo::EntryInfo
queueType	daemon/table/cs-policy-priority-fifo.hpp	/^  QueueType queueType;$/;"	m	struct:nfd::cs::priority_fifo::EntryInfo
raise	core/privilege-helper.cpp	/^PrivilegeHelper::raise()$/;"	f	class:nfd::PrivilegeHelper
random	websocketpp/websocketpp/random/none.hpp	/^namespace random {$/;"	n	namespace:websocketpp
random	websocketpp/websocketpp/random/random_device.hpp	/^namespace random {$/;"	n	namespace:websocketpp
random_device	websocketpp/websocketpp/random/random_device.hpp	/^namespace random_device {$/;"	n	namespace:websocketpp::random
raw	websocketpp/websocketpp/http/impl/request.hpp	/^inline std::string request::raw() const {$/;"	f	class:websocketpp::http::parser::request
raw	websocketpp/websocketpp/http/impl/response.hpp	/^inline std::string response::raw() const {$/;"	f	class:websocketpp::http::parser::response
raw_head	websocketpp/websocketpp/http/impl/request.hpp	/^inline std::string request::raw_head() const {$/;"	f	class:websocketpp::http::parser::request
raw_headers	websocketpp/websocketpp/http/impl/parser.hpp	/^inline std::string parser::raw_headers() const {$/;"	f	class:websocketpp::http::parser::parser
read	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void read(std::istream &in) {$/;"	f	class:websocketpp::transport::iostream::connection
read_all	websocketpp/websocketpp/transport/debug/connection.hpp	/^    size_t read_all(char const * buf, size_t len) {        $/;"	f	class:websocketpp::transport::debug::connection
read_all	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    size_t read_all(char const * buf, size_t len) {$/;"	f	class:websocketpp::transport::iostream::connection
read_buf	websocketpp/websocketpp/transport/asio/connection.hpp	/^        boost::asio::streambuf read_buf;$/;"	m	struct:websocketpp::transport::asio::connection::proxy_data
read_frame	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::read_frame() {$/;"	f	class:websocketpp::connection
read_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(lib::error_code const & ec, size_t bytes_transferred)> read_handler;$/;"	t	namespace:websocketpp
read_handler	websocketpp/websocketpp/transport/base/connection.hpp	/^typedef lib::function<void(lib::error_code const &,size_t)> read_handler;$/;"	t	namespace:websocketpp::transport
read_handshake	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::read_handshake(size_t num_bytes) {$/;"	f	class:websocketpp::connection
read_some	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    size_t read_some(char const * buf, size_t len) {$/;"	f	class:websocketpp::transport::iostream::connection
read_some_impl	websocketpp/websocketpp/transport/debug/connection.hpp	/^    size_t read_some_impl(char const * buf, size_t len) {$/;"	f	class:websocketpp::transport::debug::connection
read_some_impl	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    size_t read_some_impl(char const * buf, size_t len) {$/;"	f	class:websocketpp::transport::iostream::connection
readsome	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    size_t readsome(char const * buf, size_t len) {$/;"	f	class:websocketpp::transport::iostream::connection
ready	websocketpp/websocketpp/http/request.hpp	/^    bool ready() const {$/;"	f	class:websocketpp::http::parser::request
ready	websocketpp/websocketpp/http/response.hpp	/^    bool ready() const {$/;"	f	class:websocketpp::http::parser::response
ready	websocketpp/websocketpp/processors/hybi00.hpp	/^    bool ready() const {$/;"	f	class:websocketpp::processor::hybi00
ready	websocketpp/websocketpp/processors/hybi13.hpp	/^    bool ready() const {$/;"	f	class:websocketpp::processor::hybi13
reason_requires_code	websocketpp/websocketpp/processors/base.hpp	/^    reason_requires_code,$/;"	e	enum:websocketpp::processor::error::processor_errors
reassemble	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessage::reassemble()$/;"	f	class:nfd::ndnlp::PartialMessage
reassembleSingle	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessage::reassembleSingle(const NdnlpData& fragment)$/;"	f	class:nfd::ndnlp::PartialMessage
receive	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessageStore::receive(const NdnlpData& pkt)$/;"	f	class:nfd::ndnlp::PartialMessageStore
receive	daemon/face/transport.cpp	/^Transport::receive(Packet&& packet)$/;"	f	class:nfd::face::Transport
receiveCommandInterest	tests/rib/rib-manager.t.cpp	/^  receiveCommandInterest(const Name& name, ControlParameters& parameters)$/;"	f	class:nfd::rib::tests::RibManagerFixture
receiveData	daemon/face/link-service.cpp	/^LinkService::receiveData(const Data& data)$/;"	f	class:nfd::face::LinkService
receiveData	tests/daemon/face/dummy-face.hpp	/^  receiveData(const Data& data)$/;"	f	class:nfd::tests::DummyFaceImpl
receiveData	tests/daemon/face/dummy-lp-face.cpp	/^  receiveData(const Data& data)$/;"	f	class:nfd::face::tests::DummyLpFace::LinkService
receiveData	tests/daemon/face/dummy-lp-face.cpp	/^DummyLpFace::receiveData(const Data& data)$/;"	f	class:nfd::face::tests::DummyLpFace
receiveDatagram	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::receiveDatagram(const uint8_t* buffer, size_t nBytesReceived,$/;"	f	class:nfd::face::DatagramTransport
receiveFromLink	daemon/face/internal-transport.cpp	/^InternalClientTransport::receiveFromLink(const Block& packet)$/;"	f	class:nfd::face::InternalClientTransport
receiveFromLink	daemon/face/internal-transport.cpp	/^InternalForwarderTransport::receiveFromLink(const Block& packet)$/;"	f	class:nfd::face::InternalForwarderTransport
receiveInterest	daemon/face/link-service.cpp	/^LinkService::receiveInterest(const Interest& interest)$/;"	f	class:nfd::face::LinkService
receiveInterest	tests/daemon/face/dummy-face.hpp	/^  receiveInterest(const Interest& interest)$/;"	f	class:nfd::tests::DummyFaceImpl
receiveInterest	tests/daemon/face/dummy-lp-face.cpp	/^  receiveInterest(const Interest& interest)$/;"	f	class:nfd::face::tests::DummyLpFace::LinkService
receiveInterest	tests/daemon/face/dummy-lp-face.cpp	/^DummyLpFace::receiveInterest(const Interest& interest)$/;"	f	class:nfd::face::tests::DummyLpFace
receiveInterest	tests/daemon/mgmt/manager-common-fixture.cpp	/^ManagerCommonFixture::receiveInterest(shared_ptr<Interest> interest)$/;"	f	class:nfd::tests::ManagerCommonFixture
receiveNack	daemon/face/link-service.cpp	/^LinkService::receiveNack(const ndn::lp::Nack& nack)$/;"	f	class:nfd::face::LinkService
receiveNack	tests/daemon/face/dummy-lp-face.cpp	/^  receiveNack(const lp::Nack& nack)$/;"	f	class:nfd::face::tests::DummyLpFace::LinkService
receiveNack	tests/daemon/face/dummy-lp-face.cpp	/^DummyLpFace::receiveNack(const lp::Nack& nack)$/;"	f	class:nfd::face::tests::DummyLpFace
receiveNdnlpData	tests/daemon/face/ndnlp.t.cpp	/^  receiveNdnlpData(const Block& block)$/;"	f	class:nfd::ndnlp::tests::ReassembleFixture
receivePacket	daemon/face/link-service.hpp	/^LinkService::receivePacket(Transport::Packet&& packet)$/;"	f	class:nfd::face::LinkService
receivePacket	tests/daemon/face/dummy-transport.hpp	/^  receivePacket(Block block)$/;"	f	class:nfd::face::tests::DummyTransport
receivePacket	tests/daemon/face/dummy-transport.hpp	/^  receivePacket(Packet&& packet)$/;"	f	class:nfd::face::tests::DummyTransport
received	tests/daemon/face/ndnlp.t.cpp	/^  std::vector<Block> received;$/;"	m	class:nfd::ndnlp::tests::ReassembleFixture	file:
received	websocketpp/examples/sip_client/sip_client.cpp	/^bool received;$/;"	v
receivedData	tests/daemon/face/face-history.hpp	/^  std::vector<Data> receivedData;$/;"	m	class:nfd::tests::FaceHistory
receivedData	tests/daemon/face/generic-link-service.t.cpp	/^  std::vector<Data> receivedData;$/;"	m	class:nfd::face::tests::GenericLinkServiceFixture	file:
receivedData	tests/daemon/face/internal-face.t.cpp	/^  std::vector<Data> receivedData;$/;"	m	class:nfd::face::tests::InternalFaceFixture	file:
receivedDatas	tests/daemon/face/tcp.t.cpp	/^  std::vector<Data> receivedDatas;$/;"	m	class:nfd::tests::SimpleEndToEndFixture	file:
receivedInterests	tests/daemon/face/face-history.hpp	/^  std::vector<Interest> receivedInterests;$/;"	m	class:nfd::tests::FaceHistory
receivedInterests	tests/daemon/face/generic-link-service.t.cpp	/^  std::vector<Interest> receivedInterests;$/;"	m	class:nfd::face::tests::GenericLinkServiceFixture	file:
receivedInterests	tests/daemon/face/internal-face.t.cpp	/^  std::vector<Interest> receivedInterests;$/;"	m	class:nfd::face::tests::InternalFaceFixture	file:
receivedInterests	tests/daemon/face/tcp.t.cpp	/^  std::vector<Interest> receivedInterests;$/;"	m	class:nfd::tests::SimpleEndToEndFixture	file:
receivedNacks	tests/daemon/face/generic-link-service.t.cpp	/^  std::vector<lp::Nack> receivedNacks;$/;"	m	class:nfd::face::tests::GenericLinkServiceFixture	file:
receivedNacks	tests/daemon/face/internal-face.t.cpp	/^  std::vector<lp::Nack> receivedNacks;$/;"	m	class:nfd::face::tests::InternalFaceFixture	file:
record_sent_message	websocketpp/examples/utility_client/utility_client.cpp	/^    void record_sent_message(std::string message) {$/;"	f	class:connection_metadata
record_sent_message	websocketpp/tutorials/utility_client/step6.cpp	/^    void record_sent_message(std::string message) {$/;"	f	class:connection_metadata
recover	tests/daemon/fw/topology-tester.cpp	/^TopologyAppLink::recover()$/;"	f	class:nfd::fw::tests::TopologyAppLink
recover	tests/daemon/fw/topology-tester.hpp	/^  recover()$/;"	f	class:nfd::fw::tests::TopologyLink
recycle	websocketpp/test/message_buffer/alloc.cpp	/^    bool recycle() {$/;"	f	struct:stub
recycle	websocketpp/test/message_buffer/message.cpp	/^    bool recycle(message *) {$/;"	f	struct:stub
recycle	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    bool recycle(message *) {$/;"	f	class:websocketpp::message_buffer::alloc::con_msg_manager
recycle	websocketpp/websocketpp/message_buffer/message.hpp	/^    bool recycle() {$/;"	f	class:websocketpp::message_buffer::message
recycle	websocketpp/websocketpp/message_buffer/pool.hpp	/^    bool recycle() {$/;"	f	class:websocketpp::message_buffer::message
recycle	websocketpp/websocketpp/message_buffer/pool.hpp	/^    bool recycle(message * msg) {$/;"	f	class:websocketpp::message_buffer::alloc::con_msg_manager
recycled	websocketpp/test/message_buffer/message.cpp	/^    bool recycled;$/;"	m	struct:stub	file:
redmine_project_url	docs/conf.py	/^redmine_project_url = "http:\/\/redmine.named-data.net\/"$/;"	v
redmine_role	docs/redmine_issue.py	/^def redmine_role(name, rawtext, text, lineno, inliner, options={}, content=[]):$/;"	f
redoPropagation	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::redoPropagation(PropagatedEntryIt entryIt,$/;"	f	class:nfd::rib::AutoPrefixPropagator
registerCommandHandler	daemon/mgmt/manager-base.hpp	/^ManagerBase::registerCommandHandler(const std::string& verb,$/;"	f	class:nfd::ManagerBase
registerEntry	rib/rib-manager.cpp	/^RibManager::registerEntry(const shared_ptr<const Interest>& request,$/;"	f	class:nfd::rib::RibManager
registerHubDiscoveryPrefix	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::registerHubDiscoveryPrefix(const ConstBufferPtr& buffer)$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
registerNotificationStream	daemon/mgmt/manager-base.cpp	/^ManagerBase::registerNotificationStream(const std::string& verb)$/;"	f	class:nfd::ManagerBase
registerPrefix	tests/daemon/fw/topology-tester.cpp	/^TopologyTester::registerPrefix(TopologyNode i, const Face& face, const Name& prefix, uint64_t cost)$/;"	f	class:nfd::fw::tests::TopologyTester
registerPrefix	tools/ndn-autoconfig/base.cpp	/^Base::registerPrefix(const Name& prefix, uint64_t faceId)$/;"	f	class:ndn::tools::autoconfig::Base
registerPrefixesForFace	tools/nfd-autoreg.cpp	/^  registerPrefixesForFace(uint64_t faceId,$/;"	f	class:ndn::nfd_autoreg::AutoregServer
registerPrefixesIfNeeded	tools/nfd-autoreg.cpp	/^  registerPrefixesIfNeeded(uint64_t faceId, const FaceUri& uri, FacePersistency facePersistency)$/;"	f	class:ndn::nfd_autoreg::AutoregServer
registerStatusDatasetHandler	daemon/mgmt/manager-base.cpp	/^ManagerBase::registerStatusDatasetHandler(const std::string& verb,$/;"	f	class:nfd::ManagerBase
registerStrategy	daemon/fw/strategy-registry.hpp	/^registerStrategy()$/;"	f	namespace:nfd::fw
registerStrategyImpl	daemon/fw/strategy-registry.cpp	/^registerStrategyImpl(const Name& strategyName, const StrategyCreateFunc& createFunc)$/;"	f	namespace:nfd::fw
registerWithNfd	rib/rib-manager.cpp	/^RibManager::registerWithNfd()$/;"	f	class:nfd::rib::RibManager
register_ostream	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void register_ostream(std::ostream * o) {$/;"	f	class:websocketpp::transport::iostream::connection
register_ostream	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    void register_ostream(std::ostream * o) {$/;"	f	class:websocketpp::transport::iostream::endpoint
rejectPendingInterest	daemon/fw/strategy.hpp	/^Strategy::rejectPendingInterest(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::fw::Strategy
rejectPendingInterest	tests/daemon/fw/strategy-tester.hpp	/^StrategyTester<S>::rejectPendingInterest(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::fw::tests::StrategyTester
rejectPendingInterestHistory	tests/daemon/fw/strategy-tester.hpp	/^  std::vector<RejectPendingInterestArgs> rejectPendingInterestHistory;$/;"	m	class:nfd::fw::tests::StrategyTester
rejected	websocketpp/websocketpp/error.hpp	/^    rejected,$/;"	e	enum:websocketpp::error::value
release	core/scheduler.cpp	/^ScopedEventId::release()$/;"	f	class:nfd::scheduler::ScopedEventId
reload	daemon/main.cpp	/^  reload(const boost::system::error_code& error, int signalNo)$/;"	f	class:nfd::NfdRunner
reloadConfigFile	daemon/nfd.cpp	/^Nfd::reloadConfigFile()$/;"	f	class:nfd::Nfd
reloadConfigFileFaceSection	daemon/nfd.cpp	/^Nfd::reloadConfigFileFaceSection()$/;"	f	class:nfd::Nfd
remoteEndpoint	daemon/face/transport.hpp	/^    EndpointId remoteEndpoint;$/;"	m	class:nfd::face::Transport::Packet
remove	daemon/fw/face-table.cpp	/^FaceTable::remove(shared_ptr<Face> face, const std::string& reason)$/;"	f	class:nfd::FaceTable
removeChild	rib/rib-entry.cpp	/^RibEntry::removeChild(shared_ptr<RibEntry> child)$/;"	f	class:nfd::rib::RibEntry
removeFaceInfo	daemon/fw/access-strategy.cpp	/^AccessStrategy::removeFaceInfo(shared_ptr<Face> face)$/;"	f	class:nfd::fw::AccessStrategy
removeInheritedRoute	rib/fib-updater.cpp	/^FibUpdater::removeInheritedRoute(const Name& name, const Route& route)$/;"	f	class:nfd::rib::FibUpdater
removeInheritedRoute	rib/rib-entry.cpp	/^RibEntry::removeInheritedRoute(const Route& route)$/;"	f	class:nfd::rib::RibEntry
removeInheritedRoutes	rib/fib-updater.cpp	/^FibUpdater::removeInheritedRoutes(const RibEntry& entry, const Rib::Rib::RouteSet& routesToRemove)$/;"	f	class:nfd::rib::FibUpdater
removeInvalidFaces	rib/rib-manager.cpp	/^RibManager::removeInvalidFaces(shared_ptr<ndn::OBufferStream> buffer)$/;"	f	class:nfd::rib::RibManager
removeNextHop	daemon/mgmt/fib-manager.cpp	/^FibManager::removeNextHop(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::FibManager
removeNextHop	daemon/table/fib-entry.cpp	/^Entry::removeNextHop(shared_ptr<Face> face)$/;"	f	class:nfd::fib::Entry
removeNextHopFromAllEntries	daemon/table/fib.cpp	/^Fib::removeNextHopFromAllEntries(shared_ptr<Face> face)$/;"	f	class:nfd::Fib
remove_header	websocketpp/websocketpp/http/impl/parser.hpp	/^inline void parser::remove_header(std::string const & key) {$/;"	f	class:websocketpp::http::parser::parser
remove_header	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::remove_header(std::string const & key)$/;"	f	class:websocketpp::connection
removedFaces	tests/daemon/fw/strategy.t.cpp	/^  std::vector<FaceId> removedFaces;$/;"	m	class:nfd::fw::tests::FaceTableAccessTestStrategy	file:
rep	daemon/face/face-counters.hpp	/^  typedef uint64_t rep;$/;"	t	class:nfd::ByteCounter
rep	daemon/face/face-counters.hpp	/^  typedef uint64_t rep;$/;"	t	class:nfd::PacketCounter
replace_header	websocketpp/websocketpp/http/impl/parser.hpp	/^inline void parser::replace_header(std::string const & key, std::string const &$/;"	f	class:websocketpp::http::parser::parser
replace_header	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::replace_header(std::string const & key,$/;"	f	class:websocketpp::connection
req	websocketpp/test/processors/hybi00.cpp	/^    stub_config::request_type req;$/;"	m	struct:processor_setup	file:
req	websocketpp/test/processors/hybi13.cpp	/^    stub_config::request_type req;$/;"	m	struct:processor_setup	file:
req	websocketpp/test/processors/hybi13.cpp	/^    stub_config::request_type req;$/;"	m	struct:processor_setup_ext	file:
req	websocketpp/websocketpp/transport/asio/connection.hpp	/^        request_type req;$/;"	m	struct:websocketpp::transport::asio::connection::proxy_data
req_pong	websocketpp/test/transport/integration.cpp	/^void req_pong(std::string expected_payload, websocketpp::connection_hdl,$/;"	f
req_pong_timeout	websocketpp/test/transport/integration.cpp	/^void req_pong_timeout(T * c, std::string expected_payload,$/;"	f
request	websocketpp/websocketpp/http/request.hpp	/^    request()$/;"	f	class:websocketpp::http::parser::request
request	websocketpp/websocketpp/http/request.hpp	/^class request : public parser {$/;"	c	namespace:websocketpp::http::parser
requestHubData	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::requestHubData()$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
request_entity_too_large	websocketpp/websocketpp/http/constants.hpp	/^            request_entity_too_large = 413,$/;"	e	enum:websocketpp::http::status_code::value
request_header_fields_too_large	websocketpp/websocketpp/http/constants.hpp	/^            request_header_fields_too_large = 431,$/;"	e	enum:websocketpp::http::status_code::value
request_ptr	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename request_type::ptr request_ptr;$/;"	t	class:websocketpp::transport::asio::connection
request_range_not_satisfiable	websocketpp/websocketpp/http/constants.hpp	/^            request_range_not_satisfiable = 416,$/;"	e	enum:websocketpp::http::status_code::value
request_timeout	websocketpp/websocketpp/http/constants.hpp	/^            request_timeout = 408,$/;"	e	enum:websocketpp::http::status_code::value
request_type	websocketpp/examples/debug_server/debug_server.cpp	/^        typedef type::request_type request_type;$/;"	t	struct:debug_custom::transport_config	file:
request_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::request_type request_type;$/;"	t	struct:debug_custom	file:
request_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::request_type request_type;$/;"	t	struct:custom_config	file:
request_type	websocketpp/examples/testee_server/testee_server.cpp	/^        typedef core::request_type request_type;$/;"	t	struct:testee_config::transport_config	file:
request_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::request_type request_type;$/;"	t	struct:testee_config	file:
request_type	websocketpp/test/connection/connection.cpp	/^        typedef type::request_type request_type;$/;"	t	struct:debug_config_client::transport_config	file:
request_type	websocketpp/test/connection/connection.cpp	/^    typedef core::request_type request_type;$/;"	t	struct:debug_config_client	file:
request_type	websocketpp/test/connection/connection.cpp	/^    typedef core::request_type request_type;$/;"	t	struct:stub_config	file:
request_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::request_type request_type;$/;"	t	struct:stub_config	file:
request_type	websocketpp/test/processors/extension_permessage_compress.cpp	/^    typedef websocketpp::http::parser::request request_type;$/;"	t	struct:config	file:
request_type	websocketpp/test/processors/hybi00.cpp	/^    typedef websocketpp::http::parser::request request_type;$/;"	t	struct:stub_config	file:
request_type	websocketpp/test/processors/hybi07.cpp	/^        typedef stub_config::request_type request_type;$/;"	t	struct:stub_config::permessage_deflate_config	file:
request_type	websocketpp/test/processors/hybi07.cpp	/^    typedef websocketpp::http::parser::request request_type;$/;"	t	struct:stub_config	file:
request_type	websocketpp/test/processors/hybi08.cpp	/^        typedef stub_config::request_type request_type;$/;"	t	struct:stub_config::permessage_deflate_config	file:
request_type	websocketpp/test/processors/hybi08.cpp	/^    typedef websocketpp::http::parser::request request_type;$/;"	t	struct:stub_config	file:
request_type	websocketpp/test/processors/hybi13.cpp	/^        typedef stub_config::request_type request_type;$/;"	t	struct:stub_config::permessage_deflate_config	file:
request_type	websocketpp/test/processors/hybi13.cpp	/^        typedef stub_config_ext::request_type request_type;$/;"	t	struct:stub_config_ext::permessage_deflate_config	file:
request_type	websocketpp/test/processors/hybi13.cpp	/^    typedef websocketpp::http::parser::request request_type;$/;"	t	struct:stub_config	file:
request_type	websocketpp/test/processors/hybi13.cpp	/^    typedef websocketpp::http::parser::request request_type;$/;"	t	struct:stub_config_ext	file:
request_type	websocketpp/test/roles/client.cpp	/^    typedef core::request_type request_type;$/;"	t	struct:stub_config	file:
request_type	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::http::parser::request request_type;$/;"	t	struct:config	file:
request_type	websocketpp/test/transport/integration.cpp	/^        typedef type::request_type request_type;$/;"	t	struct:config::transport_config	file:
request_type	websocketpp/test/transport/integration.cpp	/^        typedef type::request_type request_type;$/;"	t	struct:config_tls::transport_config	file:
request_type	websocketpp/test/transport/integration.cpp	/^    typedef base::request_type request_type;$/;"	t	struct:config	file:
request_type	websocketpp/test/transport/integration.cpp	/^    typedef base::request_type request_type;$/;"	t	struct:config_tls	file:
request_type	websocketpp/websocketpp/config/asio.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::asio_tls::transport_config
request_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::request_type request_type;$/;"	t	struct:websocketpp::config::asio_tls
request_type	websocketpp/websocketpp/config/asio_client.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::asio_tls_client::transport_config
request_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::request_type request_type;$/;"	t	struct:websocketpp::config::asio_tls_client
request_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::asio::transport_config
request_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::request_type request_type;$/;"	t	struct:websocketpp::config::asio
request_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::asio_client::transport_config
request_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::request_type request_type;$/;"	t	struct:websocketpp::config::asio_client
request_type	websocketpp/websocketpp/config/core.hpp	/^        typedef core::request_type request_type;$/;"	t	struct:websocketpp::config::core::permessage_deflate_config
request_type	websocketpp/websocketpp/config/core.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::core::transport_config
request_type	websocketpp/websocketpp/config/core.hpp	/^    typedef http::parser::request request_type;$/;"	t	struct:websocketpp::config::core
request_type	websocketpp/websocketpp/config/core_client.hpp	/^        typedef core_client::request_type request_type;$/;"	t	struct:websocketpp::config::core_client::permessage_deflate_config
request_type	websocketpp/websocketpp/config/core_client.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::core_client::transport_config
request_type	websocketpp/websocketpp/config/core_client.hpp	/^    typedef http::parser::request request_type;$/;"	t	struct:websocketpp::config::core_client
request_type	websocketpp/websocketpp/config/debug.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::debug_core::permessage_deflate_config
request_type	websocketpp/websocketpp/config/debug.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::debug_core::transport_config
request_type	websocketpp/websocketpp/config/debug.hpp	/^    typedef http::parser::request request_type;$/;"	t	struct:websocketpp::config::debug_core
request_type	websocketpp/websocketpp/config/debug_asio.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::debug_asio_tls::transport_config
request_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::request_type request_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
request_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::debug_asio::transport_config
request_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::request_type request_type;$/;"	t	struct:websocketpp::config::debug_asio
request_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        typedef core::request_type request_type;$/;"	t	struct:websocketpp::config::minimal_server::permessage_deflate_config
request_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        typedef type::request_type request_type;$/;"	t	struct:websocketpp::config::minimal_server::transport_config
request_type	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef http::parser::request request_type;$/;"	t	struct:websocketpp::config::minimal_server
request_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::request_type request_type;$/;"	t	class:websocketpp::connection
request_type	websocketpp/websocketpp/processors/hybi00.hpp	/^    typedef typename config::request_type request_type;$/;"	t	class:websocketpp::processor::hybi00
request_type	websocketpp/websocketpp/processors/hybi07.hpp	/^    typedef typename config::request_type request_type;$/;"	t	class:websocketpp::processor::hybi07
request_type	websocketpp/websocketpp/processors/hybi08.hpp	/^    typedef typename config::request_type request_type;$/;"	t	class:websocketpp::processor::hybi08
request_type	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename config::request_type request_type;$/;"	t	class:websocketpp::processor::hybi13
request_type	websocketpp/websocketpp/processors/processor.hpp	/^    typedef typename config::request_type request_type;$/;"	t	class:websocketpp::processor::processor
request_type	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename config::request_type request_type;$/;"	t	class:websocketpp::transport::asio::connection
request_uri_too_long	websocketpp/websocketpp/http/constants.hpp	/^            request_uri_too_long = 414,$/;"	e	enum:websocketpp::http::status_code::value
requires_64bit	websocketpp/websocketpp/processors/base.hpp	/^    requires_64bit,$/;"	e	enum:websocketpp::processor::error::processor_errors
rerror	websocketpp/websocketpp/logger/levels.hpp	/^    static level const rerror = 0x10;$/;"	m	struct:websocketpp::log::elevel
res	websocketpp/test/processors/hybi00.cpp	/^    stub_config::response_type res;$/;"	m	struct:processor_setup	file:
res	websocketpp/test/processors/hybi13.cpp	/^    stub_config::response_type res;$/;"	m	struct:processor_setup	file:
res	websocketpp/test/processors/hybi13.cpp	/^    stub_config::response_type res;$/;"	m	struct:processor_setup_ext	file:
res	websocketpp/websocketpp/transport/asio/connection.hpp	/^        response_type res;$/;"	m	struct:websocketpp::transport::asio::connection::proxy_data
reserved	websocketpp/websocketpp/close.hpp	/^    inline bool reserved(value code) {$/;"	f	namespace:websocketpp::close::status
reserved	websocketpp/websocketpp/frame.hpp	/^    inline bool reserved(value v) {$/;"	f	namespace:websocketpp::frame::opcode
reserved_close_code	websocketpp/websocketpp/error.hpp	/^    reserved_close_code,$/;"	e	enum:websocketpp::error::value
reserved_close_code	websocketpp/websocketpp/processors/base.hpp	/^    reserved_close_code,$/;"	e	enum:websocketpp::processor::error::processor_errors
reset	daemon/table/cs-entry.cpp	/^Entry::reset()$/;"	f	class:nfd::cs::Entry
reset	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void reset() {$/;"	f	class:websocketpp::transport::asio::endpoint
reset	websocketpp/websocketpp/utf8_validator.hpp	/^    void reset() {$/;"	f	class:websocketpp::utf8_validator::validator
resetGlobalIoService	core/global-io.cpp	/^resetGlobalIoService()$/;"	f	namespace:nfd
resetGlobalRng	core/random.cpp	/^resetGlobalRng()$/;"	f	namespace:nfd
resetGlobalScheduler	core/scheduler.cpp	/^resetGlobalScheduler()$/;"	f	namespace:nfd::scheduler
resetRecentUsage	daemon/face/datagram-transport.hpp	/^DatagramTransport<T, U>::resetRecentUsage()$/;"	f	class:nfd::face::DatagramTransport
resetValidation	tests/daemon/mgmt/command-validator.t.cpp	/^  resetValidation()$/;"	f	class:nfd::tests::CommandValidatorTester
reset_content	websocketpp/websocketpp/http/constants.hpp	/^            reset_content = 205,$/;"	e	enum:websocketpp::http::status_code::value
reset_headers	websocketpp/websocketpp/processors/hybi13.hpp	/^    void reset_headers() {$/;"	f	class:websocketpp::processor::hybi13
resize	daemon/table/name-tree.cpp	/^NameTree::resize(size_t newNBuckets)$/;"	f	class:nfd::NameTree
resolver_ptr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef lib::shared_ptr<boost::asio::ip::tcp::resolver> resolver_ptr;$/;"	t	class:websocketpp::transport::asio::endpoint
resource	websocketpp/websocketpp/http/parser.hpp	/^        resource,$/;"	e	enum:websocketpp::http::parser::state::value
response	websocketpp/websocketpp/http/response.hpp	/^    response()$/;"	f	class:websocketpp::http::parser::response
response	websocketpp/websocketpp/http/response.hpp	/^class response : public parser {$/;"	c	namespace:websocketpp::http::parser
response_ptr	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename response_type::ptr response_ptr;$/;"	t	class:websocketpp::transport::asio::connection
response_type	websocketpp/examples/debug_server/debug_server.cpp	/^        typedef type::response_type response_type;$/;"	t	struct:debug_custom::transport_config	file:
response_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::response_type response_type;$/;"	t	struct:debug_custom	file:
response_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::response_type response_type;$/;"	t	struct:custom_config	file:
response_type	websocketpp/examples/testee_server/testee_server.cpp	/^        typedef core::response_type response_type;$/;"	t	struct:testee_config::transport_config	file:
response_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::response_type response_type;$/;"	t	struct:testee_config	file:
response_type	websocketpp/test/connection/connection.cpp	/^        typedef type::response_type response_type;$/;"	t	struct:debug_config_client::transport_config	file:
response_type	websocketpp/test/connection/connection.cpp	/^    typedef core::response_type response_type;$/;"	t	struct:debug_config_client	file:
response_type	websocketpp/test/connection/connection.cpp	/^    typedef core::response_type response_type;$/;"	t	struct:stub_config	file:
response_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::response_type response_type;$/;"	t	struct:stub_config	file:
response_type	websocketpp/test/processors/hybi00.cpp	/^    typedef websocketpp::http::parser::response response_type;$/;"	t	struct:stub_config	file:
response_type	websocketpp/test/processors/hybi07.cpp	/^    typedef websocketpp::http::parser::response response_type;$/;"	t	struct:stub_config	file:
response_type	websocketpp/test/processors/hybi08.cpp	/^    typedef websocketpp::http::parser::response response_type;$/;"	t	struct:stub_config	file:
response_type	websocketpp/test/processors/hybi13.cpp	/^    typedef websocketpp::http::parser::response response_type;$/;"	t	struct:stub_config	file:
response_type	websocketpp/test/processors/hybi13.cpp	/^    typedef websocketpp::http::parser::response response_type;$/;"	t	struct:stub_config_ext	file:
response_type	websocketpp/test/roles/client.cpp	/^    typedef core::response_type response_type;$/;"	t	struct:stub_config	file:
response_type	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::http::parser::response response_type;$/;"	t	struct:config	file:
response_type	websocketpp/test/transport/integration.cpp	/^        typedef type::response_type response_type;$/;"	t	struct:config::transport_config	file:
response_type	websocketpp/test/transport/integration.cpp	/^        typedef type::response_type response_type;$/;"	t	struct:config_tls::transport_config	file:
response_type	websocketpp/test/transport/integration.cpp	/^    typedef base::response_type response_type;$/;"	t	struct:config	file:
response_type	websocketpp/test/transport/integration.cpp	/^    typedef base::response_type response_type;$/;"	t	struct:config_tls	file:
response_type	websocketpp/websocketpp/config/asio.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::asio_tls::transport_config
response_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::response_type response_type;$/;"	t	struct:websocketpp::config::asio_tls
response_type	websocketpp/websocketpp/config/asio_client.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::asio_tls_client::transport_config
response_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::response_type response_type;$/;"	t	struct:websocketpp::config::asio_tls_client
response_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::asio::transport_config
response_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::response_type response_type;$/;"	t	struct:websocketpp::config::asio
response_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::asio_client::transport_config
response_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::response_type response_type;$/;"	t	struct:websocketpp::config::asio_client
response_type	websocketpp/websocketpp/config/core.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::core::transport_config
response_type	websocketpp/websocketpp/config/core.hpp	/^    typedef http::parser::response response_type;$/;"	t	struct:websocketpp::config::core
response_type	websocketpp/websocketpp/config/core_client.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::core_client::transport_config
response_type	websocketpp/websocketpp/config/core_client.hpp	/^    typedef http::parser::response response_type;$/;"	t	struct:websocketpp::config::core_client
response_type	websocketpp/websocketpp/config/debug.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::debug_core::transport_config
response_type	websocketpp/websocketpp/config/debug.hpp	/^    typedef http::parser::response response_type;$/;"	t	struct:websocketpp::config::debug_core
response_type	websocketpp/websocketpp/config/debug_asio.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::debug_asio_tls::transport_config
response_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::response_type response_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
response_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::debug_asio::transport_config
response_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::response_type response_type;$/;"	t	struct:websocketpp::config::debug_asio
response_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        typedef type::response_type response_type;$/;"	t	struct:websocketpp::config::minimal_server::transport_config
response_type	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef http::parser::response response_type;$/;"	t	struct:websocketpp::config::minimal_server
response_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::response_type response_type;$/;"	t	class:websocketpp::connection
response_type	websocketpp/websocketpp/processors/hybi00.hpp	/^    typedef typename config::response_type response_type;$/;"	t	class:websocketpp::processor::hybi00
response_type	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename config::response_type response_type;$/;"	t	class:websocketpp::processor::hybi13
response_type	websocketpp/websocketpp/processors/processor.hpp	/^    typedef typename config::response_type response_type;$/;"	t	class:websocketpp::processor::processor
response_type	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename config::response_type response_type;$/;"	t	class:websocketpp::transport::asio::connection
result_type	daemon/table/cs.hpp	/^    typedef const Entry& result_type;$/;"	t	struct:nfd::cs::Cs::EntryFromEntryImpl
resume_reading	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::resume_reading() {$/;"	f	class:websocketpp::connection
resume_reading	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::resume_reading(connection_hdl hdl) {$/;"	f	class:websocketpp::endpoint
resume_reading	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::resume_reading(connection_hdl hdl, lib::error_code & ec)$/;"	f	class:websocketpp::endpoint
rhs	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    endpoint& operator= (const endpoint & rhs) = delete;$/;"	m	class:websocketpp::transport::asio::endpoint
rib	rib/auto-prefix-propagator.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/auto-prefix-propagator.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/fib-update.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/fib-update.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/fib-updater.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/fib-updater.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/nrd.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/nrd.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/propagated-entry.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/propagated-entry.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/rib-entry.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/rib-entry.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/rib-manager.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/rib-manager.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/rib-status-publisher.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/rib-status-publisher.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/rib-update-batch.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/rib-update-batch.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/rib-update.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/rib-update.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/rib.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/rib.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	rib/route.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	rib/route.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	tests/rib/auto-prefix-propagator.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/fib-updates-common.hpp	/^  rib::Rib rib;$/;"	m	class:nfd::rib::tests::FibUpdatesFixture
rib	tests/rib/fib-updates-common.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	tests/rib/fib-updates-erase-face.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/fib-updates-new-face.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/fib-updates-new-namespace.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/fib-updates-update-face.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/propagated-entry.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/rib-manager.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/rib-status-publisher-common.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	tests/rib/rib-status-publisher.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/rib-test-common.hpp	/^namespace rib {$/;"	n	namespace:nfd
rib	tests/rib/rib-update.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
rib	tests/rib/rib.t.cpp	/^namespace rib {$/;"	n	namespace:nfd	file:
ribRegisterPrefix	tools/nfdc.cpp	/^Nfdc::ribRegisterPrefix()$/;"	f	class:nfdc::Nfdc
ribUnregisterPrefix	tools/nfdc.cpp	/^Nfdc::ribUnregisterPrefix()$/;"	f	class:nfdc::Nfdc
rng	websocketpp/test/connection/connection.cpp	/^    stub_config::rng_type rng;$/;"	m	struct:connection_setup	file:
rng	websocketpp/test/processors/hybi13.cpp	/^    stub_config::rng_type rng;$/;"	m	struct:processor_setup	file:
rng	websocketpp/test/processors/hybi13.cpp	/^    stub_config::rng_type rng;$/;"	m	struct:processor_setup_ext	file:
rng_type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:debug_custom	file:
rng_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::rng_type rng_type;$/;"	t	struct:custom_config	file:
rng_type	websocketpp/examples/testee_server/testee_server.cpp	/^    typedef core::rng_type rng_type;$/;"	t	struct:testee_config	file:
rng_type	websocketpp/test/connection/connection.cpp	/^    typedef core::rng_type rng_type;$/;"	t	struct:stub_config	file:
rng_type	websocketpp/test/connection/connection.cpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:debug_config_client	file:
rng_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::rng_type rng_type;$/;"	t	struct:stub_config	file:
rng_type	websocketpp/test/processors/hybi07.cpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:stub_config	file:
rng_type	websocketpp/test/processors/hybi08.cpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:stub_config	file:
rng_type	websocketpp/test/processors/hybi13.cpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:stub_config	file:
rng_type	websocketpp/test/processors/hybi13.cpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:stub_config_ext	file:
rng_type	websocketpp/test/roles/client.cpp	/^    typedef websocketpp::random::random_device::int_generator<uint32_t,concurrency_type> rng_type;$/;"	t	struct:stub_config	file:
rng_type	websocketpp/test/transport/integration.cpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:config	file:
rng_type	websocketpp/test/transport/integration.cpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:config_tls	file:
rng_type	websocketpp/websocketpp/config/asio.hpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:websocketpp::config::asio_tls
rng_type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:websocketpp::config::asio_tls_client
rng_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:websocketpp::config::asio
rng_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:websocketpp::config::asio_client
rng_type	websocketpp/websocketpp/config/core.hpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:websocketpp::config::core
rng_type	websocketpp/websocketpp/config/core_client.hpp	/^        concurrency_type> rng_type;$/;"	t	struct:websocketpp::config::core_client
rng_type	websocketpp/websocketpp/config/debug.hpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:websocketpp::config::debug_core
rng_type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
rng_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef base::rng_type rng_type;$/;"	t	struct:websocketpp::config::debug_asio
rng_type	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef websocketpp::random::none::int_generator<uint32_t> rng_type;$/;"	t	struct:websocketpp::config::minimal_server
rng_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename config::rng_type rng_type;$/;"	t	class:websocketpp::connection
rng_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename config::rng_type rng_type;$/;"	t	class:websocketpp::endpoint
rng_type	websocketpp/websocketpp/processors/hybi07.hpp	/^    typedef typename config::rng_type rng_type;$/;"	t	class:websocketpp::processor::hybi07
rng_type	websocketpp/websocketpp/processors/hybi08.hpp	/^    typedef typename config::rng_type rng_type;$/;"	t	class:websocketpp::processor::hybi08
rng_type	websocketpp/websocketpp/processors/hybi13.hpp	/^    typedef typename config::rng_type rng_type;$/;"	t	class:websocketpp::processor::hybi13
rol	websocketpp/websocketpp/sha1/sha1.hpp	/^inline unsigned int rol(unsigned int value, unsigned int steps) {$/;"	f	namespace:websocketpp::sha1::__anon2
router	tests/daemon/fw/access-strategy.t.cpp	/^  TopologyNode router;$/;"	m	class:nfd::fw::tests::TwoLaptopsFixture	file:
rsv3	websocketpp/websocketpp/frame.hpp	/^        rsv3 = 0x3,$/;"	e	enum:websocketpp::frame::opcode::value
rsv4	websocketpp/websocketpp/frame.hpp	/^        rsv4 = 0x4,$/;"	e	enum:websocketpp::frame::opcode::value
rsv5	websocketpp/websocketpp/frame.hpp	/^        rsv5 = 0x5,$/;"	e	enum:websocketpp::frame::opcode::value
rsv6	websocketpp/websocketpp/frame.hpp	/^        rsv6 = 0x6,$/;"	e	enum:websocketpp::frame::opcode::value
rsv7	websocketpp/websocketpp/frame.hpp	/^        rsv7 = 0x7,$/;"	e	enum:websocketpp::frame::opcode::value
rsv_end	websocketpp/websocketpp/close.hpp	/^    static value const rsv_end = 2999;$/;"	m	namespace:websocketpp::close::status
rsv_start	websocketpp/websocketpp/close.hpp	/^    static value const rsv_start = 1016;$/;"	m	namespace:websocketpp::close::status
rtoTimer	daemon/fw/access-strategy.hpp	/^    scheduler::ScopedEventId rtoTimer;$/;"	m	class:nfd::fw::AccessStrategy::PitInfo
rtt	daemon/fw/access-strategy.hpp	/^    RttEstimator rtt;$/;"	m	class:nfd::fw::AccessStrategy::FaceInfo
rtt	daemon/fw/access-strategy.hpp	/^    RttEstimator rtt;$/;"	m	class:nfd::fw::AccessStrategy::MtInfo
run	daemon/main.cpp	/^  run()$/;"	f	class:nfd::NfdRunner
run	tests/limited-io.cpp	/^LimitedIo::run(int nOpsLimit, const time::nanoseconds& timeLimit, const time::nanoseconds& tick)$/;"	f	class:nfd::tests::LimitedIo
run	tools/ndn-autoconfig-server.cpp	/^  run()$/;"	f	class:ndn::NdnAutoconfigServer
run	tools/ndn-autoconfig/main.cpp	/^  run()$/;"	f	class:ndn::tools::NdnAutoconfig
run	tools/ndn-tlv-peek.cpp	/^  run()$/;"	f	class:ndntlvpeek::NdnTlvPeek
run	tools/ndn-tlv-poke.cpp	/^  run()$/;"	f	class:ndntlvpoke::NdnTlvPoke
run	websocketpp/docs/simple_broadcast_server.cpp	/^    void run(uint16_t port) {$/;"	f	class:broadcast_server
run	websocketpp/docs/simple_count_server_thread.cpp	/^    void run(uint16_t port) {$/;"	f	class:count_server
run	websocketpp/examples/associative_storage/associative_storage.cpp	/^    void run(uint16_t port) {$/;"	f	class:print_server
run	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    void run(uint16_t port) {$/;"	f	class:broadcast_server
run	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    void run(uint16_t port) {$/;"	f	class:print_server
run	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^    void run(uint16_t port) {$/;"	f	class:broadcast_server
run	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    void run(const std::string & uri) {$/;"	f	class:telemetry_client
run	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    void run(std::string docroot, uint16_t port) {$/;"	f	class:telemetry_server
run	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    std::size_t run() {$/;"	f	class:websocketpp::transport::asio::endpoint
runConfig	tests/daemon/mgmt/tables-config-section.t.cpp	/^  runConfig(const std::string& CONFIG, bool isDryRun)$/;"	f	class:nfd::tests::TablesConfigSectionFixture
runElevated	core/privilege-helper.cpp	/^PrivilegeHelper::runElevated(function<void()> f)$/;"	f	class:nfd::PrivilegeHelper
runNextStep	tools/nfd-status.cpp	/^  runNextStep()$/;"	f	class:ndn::NfdStatus	file:
run_client	websocketpp/test/transport/integration.cpp	/^void run_client(client & c, std::string uri, bool log = false) {$/;"	f
run_client_and_mark	websocketpp/test/transport/integration.cpp	/^void run_client_and_mark(client * c, bool * flag, websocketpp::lib::mutex * mutex) {$/;"	f
run_dummy_client	websocketpp/test/transport/integration.cpp	/^void run_dummy_client(std::string port) {$/;"	f
run_dummy_server	websocketpp/test/transport/asio/timers.cpp	/^void run_dummy_server(int port) {$/;"	f
run_dummy_server	websocketpp/test/transport/integration.cpp	/^void run_dummy_server(int port) {$/;"	f
run_one	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    std::size_t run_one() {$/;"	f	class:websocketpp::transport::asio::endpoint
run_server	websocketpp/test/transport/integration.cpp	/^void run_server(server * s, int port, bool log = false) {$/;"	f
run_server_test	websocketpp/test/connection/connection_tu2.cpp	/^std::string run_server_test(server & s, std::string input, bool log) {$/;"	f
run_server_test	websocketpp/test/connection/connection_tu2.cpp	/^std::string run_server_test(std::string input, bool log) {$/;"	f
run_server_test	websocketpp/test/roles/server.cpp	/^std::string run_server_test(server& s, std::string input) {$/;"	f
run_test_timer	websocketpp/test/transport/asio/timers.cpp	/^void run_test_timer(long value) {$/;"	f
run_test_timer	websocketpp/test/transport/integration.cpp	/^void run_test_timer(long value) {$/;"	f
run_time_limited_client	websocketpp/test/transport/integration.cpp	/^void run_time_limited_client(client & c, std::string uri, long timeout,$/;"	f
s_debugNetworkInterfaces	core/network-interface.cpp	/^static shared_ptr<std::vector<NetworkInterfaceInfo>> s_debugNetworkInterfaces = nullptr;$/;"	m	namespace:nfd	file:
s_emptyEntry	daemon/table/fib.cpp	/^const shared_ptr<fib::Entry> Fib::s_emptyEntry = make_shared<fib::Entry>(Name());$/;"	m	class:nfd::Fib	file:
s_emptyEntry	daemon/table/fib.hpp	/^  static const shared_ptr<fib::Entry> s_emptyEntry;$/;"	m	class:nfd::Fib
s_normalGid	core/privilege-helper.cpp	/^gid_t PrivilegeHelper::s_normalGid = ::getegid();$/;"	m	class:nfd::PrivilegeHelper	file:
s_normalGid	core/privilege-helper.hpp	/^  static gid_t s_normalGid;$/;"	m	class:nfd::PrivilegeHelper
s_normalUid	core/privilege-helper.cpp	/^uid_t PrivilegeHelper::s_normalUid = ::geteuid();$/;"	m	class:nfd::PrivilegeHelper	file:
s_normalUid	core/privilege-helper.hpp	/^  static uid_t s_normalUid;$/;"	m	class:nfd::PrivilegeHelper
s_privilegedGid	core/privilege-helper.cpp	/^gid_t PrivilegeHelper::s_privilegedGid = ::getegid();$/;"	m	class:nfd::PrivilegeHelper	file:
s_privilegedGid	core/privilege-helper.hpp	/^  static gid_t s_privilegedGid;$/;"	m	class:nfd::PrivilegeHelper
s_privilegedUid	core/privilege-helper.cpp	/^uid_t PrivilegeHelper::s_privilegedUid = ::geteuid();$/;"	m	class:nfd::PrivilegeHelper	file:
s_privilegedUid	core/privilege-helper.hpp	/^  static uid_t s_privilegedUid;$/;"	m	class:nfd::PrivilegeHelper
saveIdentityToFile	tests/daemon/mgmt/command-validator.t.cpp	/^  saveIdentityToFile(const char* filename)$/;"	f	class:nfd::tests::CommandValidatorTester
schedule	core/scheduler.cpp	/^schedule(const time::nanoseconds& after, const Scheduler::Event& event)$/;"	f	namespace:nfd::scheduler
scheduleActiveFaceFetch	rib/rib-manager.cpp	/^RibManager::scheduleActiveFaceFetch(const time::seconds& timeToWait)$/;"	f	class:nfd::rib::RibManager
scheduleCleanup	daemon/face/ndnlp-partial-message-store.cpp	/^PartialMessageStore::scheduleCleanup(uint64_t messageIdentifier,$/;"	f	class:nfd::ndnlp::PartialMessageStore
scheduleReceive	tests/daemon/fw/topology-tester.cpp	/^TopologyLink::scheduleReceive(InternalTransportBase* recipient, const Block& packet)$/;"	f	class:nfd::fw::tests::TopologyLink
scheduler	core/global-io.cpp	/^namespace scheduler {$/;"	n	namespace:nfd	file:
scheduler	core/scheduler.cpp	/^namespace scheduler {$/;"	n	namespace:nfd	file:
scheduler	core/scheduler.hpp	/^namespace scheduler {$/;"	n	namespace:nfd
scheduler	tests/core/scheduler.t.cpp	/^namespace scheduler {$/;"	n	namespace:nfd	file:
scoped_lock	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    typedef websocketpp::lib::lock_guard<websocketpp::lib::mutex> scoped_lock;$/;"	t	class:telemetry_client	file:
scoped_lock	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    typedef websocketpp::lib::lock_guard<websocketpp::lib::mutex> scoped_lock;$/;"	t	class:telemetry_server	file:
scoped_lock_type	websocketpp/websocketpp/concurrency/basic.hpp	/^    typedef lib::lock_guard<mutex_type> scoped_lock_type;$/;"	t	class:websocketpp::concurrency::basic
scoped_lock_type	websocketpp/websocketpp/concurrency/none.hpp	/^    typedef none_impl::fake_lock_guard scoped_lock_type;$/;"	t	class:websocketpp::concurrency::none
scoped_lock_type	websocketpp/websocketpp/connection.hpp	/^    typedef typename concurrency_type::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::connection
scoped_lock_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename concurrency_type::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::endpoint
scoped_lock_type	websocketpp/websocketpp/logger/basic.hpp	/^    typedef typename concurrency::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::log::basic
scoped_lock_type	websocketpp/websocketpp/logger/syslog.hpp	/^    typedef typename base::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::log::syslog
scoped_lock_type	websocketpp/websocketpp/random/random_device.hpp	/^        typedef typename concurrency::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::random::random_device::int_generator
scoped_lock_type	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef typename concurrency_type::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::transport::debug::connection
scoped_lock_type	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef typename concurrency_type::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::transport::iostream::connection
scoped_lock_type	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef typename concurrency_type::scoped_lock_type scoped_lock_type;$/;"	t	class:websocketpp::transport::stub::connection
scoped_timer	websocketpp/test/http/parser_perf.cpp	/^    scoped_timer(std::string i) : m_id(i),m_start(std::chrono::steady_clock::now()) {$/;"	f	class:scoped_timer
scoped_timer	websocketpp/test/http/parser_perf.cpp	/^class scoped_timer {$/;"	c	file:
sd_handler	websocketpp/test/transport/iostream/connection.cpp	/^websocketpp::lib::error_code sd_handler(websocketpp::connection_hdl) {$/;"	f
security	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        security = 1,$/;"	e	enum:websocketpp::transport::asio::socket::error::value
see_other	websocketpp/websocketpp/http/constants.hpp	/^            see_other = 303,$/;"	e	enum:websocketpp::http::status_code::value
select_subprotocol	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::select_subprotocol(std::string const & value) {$/;"	f	class:websocketpp::connection
select_subprotocol	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::select_subprotocol(std::string const & value,$/;"	f	class:websocketpp::connection
send	daemon/face/internal-transport.cpp	/^InternalClientTransport::send(const Block& header, const Block& payload)$/;"	f	class:nfd::face::InternalClientTransport
send	daemon/face/internal-transport.cpp	/^InternalClientTransport::send(const Block& wire)$/;"	f	class:nfd::face::InternalClientTransport
send	daemon/face/stream-face.hpp	/^  send(StreamFace<Protocol, FaceBase>& face, const Packet& packet)$/;"	f	struct:nfd::StreamFaceSenderImpl
send	daemon/face/stream-face.hpp	/^  send(StreamFace<Protocol, LocalFace>& face, const Packet& packet)$/;"	f	struct:nfd::StreamFaceSenderImpl
send	daemon/face/transport.cpp	/^Transport::send(Packet&& packet)$/;"	f	class:nfd::face::Transport
send	websocketpp/examples/utility_client/utility_client.cpp	/^    void send(int id, std::string message) {$/;"	f	class:websocket_endpoint
send	websocketpp/tutorials/utility_client/step6.cpp	/^    void send(int id, std::string message) {$/;"	f	class:websocket_endpoint
send	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::send(std::string const & payload,$/;"	f	class:websocketpp::connection
send	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::send(typename config::message_type::ptr msg)$/;"	f	class:websocketpp::connection
send	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::send(void const * payload, size_t len,$/;"	f	class:websocketpp::connection
send	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::send(connection_hdl hdl, message_ptr msg) {$/;"	f	class:websocketpp::endpoint
send	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::send(connection_hdl hdl, message_ptr msg,$/;"	f	class:websocketpp::endpoint
send	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::send(connection_hdl hdl, std::string const & payload,$/;"	f	class:websocketpp::endpoint
send	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^void endpoint<connection,config>::send(connection_hdl hdl, void const * payload,$/;"	f	class:websocketpp::endpoint
sendAddNextHopUpdate	rib/fib-updater.cpp	/^FibUpdater::sendAddNextHopUpdate(const FibUpdate& update,$/;"	f	class:nfd::rib::FibUpdater
sendBatchFromQueue	rib/rib.cpp	/^Rib::sendBatchFromQueue()$/;"	f	class:nfd::rib::Rib
sendData	daemon/face/ethernet-face.cpp	/^EthernetFace::sendData(const Data& data)$/;"	f	class:nfd::EthernetFace
sendData	daemon/face/link-service.cpp	/^LinkService::sendData(const Data& data)$/;"	f	class:nfd::face::LinkService
sendData	daemon/face/lp-face-wrapper.hpp	/^LpFaceWrapper::sendData(const Data& data)$/;"	f	class:nfd::face::LpFaceWrapper
sendData	daemon/face/lp-face.hpp	/^LpFace::sendData(const Data& data)$/;"	f	class:nfd::face::LpFace
sendData	daemon/face/null-face.cpp	/^NullFace::sendData(const Data& data)$/;"	f	class:nfd::NullFace
sendData	daemon/face/stream-face.hpp	/^StreamFace<T, U>::sendData(const Data& data)$/;"	f	class:nfd::StreamFace
sendData	daemon/face/websocket-face.cpp	/^WebSocketFace::sendData(const Data& data)$/;"	f	class:nfd::WebSocketFace
sendErrorResponse	rib/rib-manager.cpp	/^RibManager::sendErrorResponse(uint32_t code, const std::string& error,$/;"	f	class:nfd::rib::RibManager
sendFromQueue	daemon/face/stream-face.hpp	/^StreamFace<T, U>::sendFromQueue()$/;"	f	class:nfd::StreamFace
sendFromQueue	daemon/face/stream-transport.hpp	/^StreamTransport<T>::sendFromQueue()$/;"	f	class:nfd::face::StreamTransport
sendInterest	daemon/face/ethernet-face.cpp	/^EthernetFace::sendInterest(const Interest& interest)$/;"	f	class:nfd::EthernetFace
sendInterest	daemon/face/link-service.cpp	/^LinkService::sendInterest(const Interest& interest)$/;"	f	class:nfd::face::LinkService
sendInterest	daemon/face/lp-face-wrapper.hpp	/^LpFaceWrapper::sendInterest(const Interest& interest)$/;"	f	class:nfd::face::LpFaceWrapper
sendInterest	daemon/face/lp-face.hpp	/^LpFace::sendInterest(const Interest& interest)$/;"	f	class:nfd::face::LpFace
sendInterest	daemon/face/null-face.cpp	/^NullFace::sendInterest(const Interest& interest)$/;"	f	class:nfd::NullFace
sendInterest	daemon/face/stream-face.hpp	/^StreamFace<T, U>::sendInterest(const Interest& interest)$/;"	f	class:nfd::StreamFace
sendInterest	daemon/face/websocket-face.cpp	/^WebSocketFace::sendInterest(const Interest& interest)$/;"	f	class:nfd::WebSocketFace
sendInterest	daemon/fw/strategy.hpp	/^Strategy::sendInterest(shared_ptr<pit::Entry> pitEntry,$/;"	f	class:nfd::fw::Strategy
sendInterest	tests/daemon/fw/strategy-tester.hpp	/^StrategyTester<S>::sendInterest(shared_ptr<pit::Entry> pitEntry,$/;"	f	class:nfd::fw::tests::StrategyTester
sendInterestHistory	tests/daemon/fw/strategy-tester.hpp	/^  std::vector<SendInterestArgs> sendInterestHistory;$/;"	m	class:nfd::fw::tests::StrategyTester
sendNack	daemon/face/face.hpp	/^  sendNack(const ndn::lp::Nack& nack)$/;"	f	class:nfd::Face
sendNack	daemon/face/link-service.cpp	/^LinkService::sendNack(const ndn::lp::Nack& nack)$/;"	f	class:nfd::face::LinkService
sendNack	daemon/face/lp-face-wrapper.hpp	/^LpFaceWrapper::sendNack(const lp::Nack& nack)$/;"	f	class:nfd::face::LpFaceWrapper
sendNack	daemon/face/lp-face.hpp	/^LpFace::sendNack(const lp::Nack& nack)$/;"	f	class:nfd::face::LpFace
sendNack	daemon/fw/strategy.hpp	/^Strategy::sendNack(shared_ptr<pit::Entry> pitEntry, const Face& outFace,$/;"	f	class:nfd::fw::Strategy
sendNack	tests/daemon/fw/strategy-tester.hpp	/^StrategyTester<S>::sendNack(shared_ptr<pit::Entry> pitEntry, const Face& outFace,$/;"	f	class:nfd::fw::tests::StrategyTester
sendNackHistory	tests/daemon/fw/strategy-tester.hpp	/^  std::vector<SendNackArgs> sendNackHistory;$/;"	m	class:nfd::fw::tests::StrategyTester
sendNacks	daemon/fw/strategy.cpp	/^Strategy::sendNacks(shared_ptr<pit::Entry> pitEntry, const lp::NackHeader& header,$/;"	f	class:nfd::fw::Strategy
sendPacket	daemon/face/ethernet-face.cpp	/^EthernetFace::sendPacket(const ndn::Block& block)$/;"	f	class:nfd::EthernetFace
sendPacket	daemon/face/link-service.hpp	/^LinkService::sendPacket(Transport::Packet&& packet)$/;"	f	class:nfd::face::LinkService
sendPing	daemon/face/websocket-channel.cpp	/^WebSocketChannel::sendPing(websocketpp::connection_hdl hdl)$/;"	f	class:nfd::WebSocketChannel
sendRemoveNextHopUpdate	rib/fib-updater.cpp	/^FibUpdater::sendRemoveNextHopUpdate(const FibUpdate& update,$/;"	f	class:nfd::rib::FibUpdater
sendResponse	rib/rib-manager.cpp	/^RibManager::sendResponse(const Name& name,$/;"	f	class:nfd::rib::RibManager
sendSuccessResponse	rib/rib-manager.cpp	/^RibManager::sendSuccessResponse(const shared_ptr<const Interest>& request,$/;"	f	class:nfd::rib::RibManager
sendToLastNexthop	daemon/fw/access-strategy.cpp	/^AccessStrategy::sendToLastNexthop(const Face& inFace, shared_ptr<pit::Entry> pitEntry, MtInfo& mi,$/;"	f	class:nfd::fw::AccessStrategy
sendUpdates	rib/fib-updater.cpp	/^FibUpdater::sendUpdates(const FibUpdateList& updates,$/;"	f	class:nfd::rib::FibUpdater
sendUpdatesForBatchFaceId	rib/fib-updater.cpp	/^FibUpdater::sendUpdatesForBatchFaceId(const FibUpdateSuccessCallback& onSuccess,$/;"	f	class:nfd::rib::FibUpdater
sendUpdatesForNonBatchFaceId	rib/fib-updater.cpp	/^FibUpdater::sendUpdatesForNonBatchFaceId(const FibUpdateSuccessCallback& onSuccess,$/;"	f	class:nfd::rib::FibUpdater
send_close_ack	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::send_close_ack(close::status::value code,$/;"	f	class:websocketpp::connection
send_close_frame	websocketpp/websocketpp/impl/connection_impl.hpp	/^lib::error_code connection<config>::send_close_frame(close::status::value code,$/;"	f	class:websocketpp::connection
send_http_request	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::send_http_request() {$/;"	f	class:websocketpp::connection
send_http_response	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::send_http_response(lib::error_code const & ec) {$/;"	f	class:websocketpp::connection
send_http_response_error	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::send_http_response_error(lib::error_code const & ec) {$/;"	f	class:websocketpp::connection
send_queue_full	websocketpp/websocketpp/error.hpp	/^    send_queue_full,$/;"	e	enum:websocketpp::error::value
sentData	tests/daemon/face/dummy-lp-face.cpp	/^  std::vector<Data> sentData;$/;"	m	class:nfd::face::tests::DummyLpFace::LinkService	file:
sentData	tests/daemon/face/dummy-lp-face.hpp	/^  std::vector<Data>& sentData;$/;"	m	class:nfd::face::tests::DummyLpFace
sentInterests	tests/daemon/face/dummy-lp-face.cpp	/^  std::vector<Interest> sentInterests;$/;"	m	class:nfd::face::tests::DummyLpFace::LinkService	file:
sentInterests	tests/daemon/face/dummy-lp-face.hpp	/^  std::vector<Interest>& sentInterests;$/;"	m	class:nfd::face::tests::DummyLpFace
sentNacks	tests/daemon/face/dummy-lp-face.cpp	/^  std::vector<lp::Nack> sentNacks;$/;"	m	class:nfd::face::tests::DummyLpFace::LinkService	file:
sentNacks	tests/daemon/face/dummy-lp-face.hpp	/^  std::vector<lp::Nack>& sentNacks;$/;"	m	class:nfd::face::tests::DummyLpFace
sentPackets	tests/daemon/face/dummy-transport.hpp	/^  std::vector<Packet> sentPackets;$/;"	m	class:nfd::face::tests::DummyTransport
seq	daemon/face/ndnlp-data.hpp	/^  uint64_t seq;$/;"	m	class:nfd::ndnlp::NdnlpData
server	websocketpp/docs/simple_broadcast_server.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/docs/simple_count_server_thread.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/associative_storage/associative_storage.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/debug_server/debug_server.cpp	/^typedef websocketpp::server<debug_custom> server;$/;"	t	file:
server	websocketpp/examples/dev/main.cpp	/^typedef websocketpp::server<websocketpp::config::core> server;$/;"	t	file:
server	websocketpp/examples/echo_server/echo_server.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/echo_server_tls/echo_server_tls.cpp	/^typedef websocketpp::server<websocketpp::config::asio_tls> server;$/;"	t	file:
server	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^typedef websocketpp::server<custom_config> server;$/;"	t	file:
server	websocketpp/examples/handler_switch/handler_switch.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/iostream_server/iostream_server.cpp	/^typedef websocketpp::server<websocketpp::config::core> server;$/;"	t	file:
server	websocketpp/examples/print_server/print_server.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/simple_broadcast_server/simple_broadcast_server.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/subprotocol_server/subprotocol_server.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	file:
server	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    typedef websocketpp::server<websocketpp::config::asio> server;$/;"	t	class:telemetry_server	file:
server	websocketpp/examples/testee_server/testee_server.cpp	/^typedef websocketpp::server<testee_config> server;$/;"	t	file:
server	websocketpp/test/connection/connection_tu2.hpp	/^typedef websocketpp::server<websocketpp::config::core> server;$/;"	t
server	websocketpp/test/roles/server.cpp	/^typedef websocketpp::server<websocketpp::config::core> server;$/;"	t	file:
server	websocketpp/test/transport/integration.cpp	/^typedef websocketpp::server<config> server;$/;"	t	file:
server	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    explicit server() : endpoint_type(true)$/;"	f	class:websocketpp::server
server	websocketpp/websocketpp/roles/server_endpoint.hpp	/^class server : public endpoint<connection<config>,config> {$/;"	c	namespace:websocketpp
server_only	websocketpp/websocketpp/error.hpp	/^    server_only,$/;"	e	enum:websocketpp::error::value
server_plain	websocketpp/examples/echo_server_both/echo_server_both.cpp	/^typedef websocketpp::server<websocketpp::config::asio> server_plain;$/;"	t	file:
server_tls	websocketpp/examples/echo_server_both/echo_server_both.cpp	/^typedef websocketpp::server<websocketpp::config::asio_tls> server_tls;$/;"	t	file:
server_tls	websocketpp/test/transport/integration.cpp	/^typedef websocketpp::server<config_tls> server_tls;$/;"	t	file:
service	tests/daemon/face/generic-link-service.t.cpp	/^  GenericLinkService* service;$/;"	m	class:nfd::face::tests::GenericLinkServiceFixture	file:
service_restart	websocketpp/websocketpp/close.hpp	/^    static value const service_restart = 1012;$/;"	m	namespace:websocketpp::close::status
service_unavailable	websocketpp/websocketpp/http/constants.hpp	/^            service_unavailable = 503,$/;"	e	enum:websocketpp::http::status_code::value
session	websocketpp/websocketpp/connection.hpp	/^namespace session {$/;"	n	namespace:websocketpp
sessionid	websocketpp/examples/associative_storage/associative_storage.cpp	/^    int sessionid;$/;"	m	struct:connection_data	file:
sessionid	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    int sessionid;$/;"	m	struct:connection_data	file:
set	daemon/face/face-counters.hpp	/^  set(rep value)$/;"	f	class:nfd::ByteCounter
set	daemon/face/face-counters.hpp	/^  set(rep value)$/;"	f	class:nfd::PacketCounter
setAction	rib/rib-update.hpp	/^RibUpdate::setAction(Action action)$/;"	f	class:nfd::rib::RibUpdate
setConfigFile	core/logger-factory.cpp	/^LoggerFactory::setConfigFile(ConfigFile& config)$/;"	f	class:nfd::LoggerFactory
setConfigFile	daemon/mgmt/command-validator.cpp	/^CommandValidator::setConfigFile(ConfigFile& configFile)$/;"	f	class:nfd::CommandValidator
setConfigFile	daemon/mgmt/face-manager.cpp	/^FaceManager::setConfigFile(ConfigFile& configFile)$/;"	f	class:nfd::FaceManager
setConfigFile	daemon/mgmt/general-config-section.cpp	/^setConfigFile(ConfigFile& configFile)$/;"	f	namespace:nfd::general
setConfigFile	daemon/mgmt/tables-config-section.cpp	/^TablesConfigSection::setConfigFile(ConfigFile& configFile)$/;"	f	class:nfd::TablesConfigSection
setConfigFile	rib/rib-manager.cpp	/^RibManager::setConfigFile(ConfigFile& configFile)$/;"	f	class:nfd::rib::RibManager
setCost	daemon/table/fib-nexthop.cpp	/^NextHop::setCost(uint64_t cost)$/;"	f	class:nfd::fib::NextHop
setCs	daemon/table/cs-policy.hpp	/^Policy::setCs(Cs *cs)$/;"	f	class:nfd::cs::Policy
setData	daemon/table/cs-entry.cpp	/^Entry::setData(shared_ptr<const Data> data, bool isUnsolicited)$/;"	f	class:nfd::cs::Entry
setData	daemon/table/cs-entry.hpp	/^  setData(const Data& data, bool isUnsolicited)$/;"	f	class:nfd::cs::Entry
setDebugNetworkInterfaces	core/network-interface.cpp	/^setDebugNetworkInterfaces(shared_ptr<std::vector<NetworkInterfaceInfo>> interfaces)$/;"	f	namespace:nfd
setDefaultLevel	core/logger-factory.cpp	/^LoggerFactory::setDefaultLevel(LogLevel level)$/;"	f	class:nfd::LoggerFactory
setDefaultStrategy	daemon/table/strategy-choice.cpp	/^StrategyChoice::setDefaultStrategy(shared_ptr<Strategy> strategy)$/;"	f	class:nfd::StrategyChoice
setDescription	daemon/face/face.hpp	/^Face::setDescription(const std::string& description)$/;"	f	class:nfd::Face
setExpirationEvent	rib/route.hpp	/^  setExpirationEvent(const scheduler::EventId eid)$/;"	f	class:nfd::rib::Route
setFaceAndLinkService	daemon/face/transport.cpp	/^Transport::setFaceAndLinkService(LpFace& face, LinkService& service)$/;"	f	class:nfd::face::Transport
setFaceAndTransport	daemon/face/link-service.cpp	/^LinkService::setFaceAndTransport(LpFace& face, Transport& transport)$/;"	f	class:nfd::face::LinkService
setFaceForSelfRegistration	daemon/mgmt/fib-manager.cpp	/^FibManager::setFaceForSelfRegistration(const Interest& request, ControlParameters& parameters)$/;"	f	class:nfd::FibManager
setFibEntry	daemon/table/name-tree-entry.cpp	/^Entry::setFibEntry(shared_ptr<fib::Entry> fibEntry)$/;"	f	class:nfd::name_tree::Entry
setFibUpdater	rib/rib.cpp	/^Rib::setFibUpdater(FibUpdater* updater)$/;"	f	class:nfd::rib::Rib
setForceData	tools/ndn-tlv-poke.cpp	/^  setForceData()$/;"	f	class:ndntlvpoke::NdnTlvPoke
setFreshnessPeriod	tools/ndn-tlv-poke.cpp	/^  setFreshnessPeriod(int freshnessPeriod)$/;"	f	class:ndntlvpoke::NdnTlvPoke
setHash	daemon/table/name-tree-entry.hpp	/^Entry::setHash(size_t hash)$/;"	f	class:nfd::name_tree::Entry
setId	daemon/face/face.hpp	/^Face::setId(FaceId faceId)$/;"	f	class:nfd::Face
setId	daemon/face/lp-face-wrapper.cpp	/^LpFaceWrapper::setId(nfd::FaceId faceId)$/;"	f	class:nfd::face::LpFaceWrapper
setId	daemon/face/lp-face.hpp	/^LpFace::setId(FaceId id)$/;"	f	class:nfd::face::LpFace
setIdentityName	tools/ndn-tlv-poke.cpp	/^  setIdentityName(char* identityName)$/;"	f	class:ndntlvpoke::NdnTlvPoke
setIncomingNack	daemon/table/pit-out-record.cpp	/^OutRecord::setIncomingNack(const lp::Nack& nack)$/;"	f	class:nfd::pit::OutRecord
setInterestLifetime	tools/ndn-tlv-peek.cpp	/^  setInterestLifetime(int interestLifetime)$/;"	f	class:ndntlvpeek::NdnTlvPeek
setLastAsFinalBlockId	tools/ndn-tlv-poke.cpp	/^  setLastAsFinalBlockId()$/;"	f	class:ndntlvpoke::NdnTlvPoke
setLimit	daemon/table/cs-policy.cpp	/^Policy::setLimit(size_t nMaxEntries)$/;"	f	class:nfd::cs::Policy
setLimit	daemon/table/cs.cpp	/^Cs::setLimit(size_t nMaxPackets)$/;"	f	class:nfd::cs::Cs
setLinkType	daemon/face/transport.hpp	/^Transport::setLinkType(ndn::nfd::LinkType linkType)$/;"	f	class:nfd::face::Transport
setLocalControlHeaderFeature	daemon/face/local-face.hpp	/^LocalFace::setLocalControlHeaderFeature(LocalControlFeature feature, bool enabled\/* = true*\/)$/;"	f	class:nfd::LocalFace
setLocalUri	daemon/face/transport.hpp	/^Transport::setLocalUri(const FaceUri& uri)$/;"	f	class:nfd::face::Transport
setLogLevel	core/logger.hpp	/^  setLogLevel(LogLevel level)$/;"	f	class:nfd::Logger
setMaxSuffixComponents	tools/ndn-tlv-peek.cpp	/^  setMaxSuffixComponents(int maxSuffixComponents)$/;"	f	class:ndntlvpeek::NdnTlvPeek
setMeasurementsEntry	daemon/table/name-tree-entry.cpp	/^Entry::setMeasurementsEntry(shared_ptr<measurements::Entry> measurementsEntry)$/;"	f	class:nfd::name_tree::Entry
setMessage	tests/core/simple-notification.hpp	/^  setMessage(const std::string& message)$/;"	f	class:nfd::tests::SimpleNotification
setMinSuffixComponents	tools/ndn-tlv-peek.cpp	/^  setMinSuffixComponents(int minSuffixComponents)$/;"	f	class:ndntlvpeek::NdnTlvPeek
setMtu	daemon/face/transport.hpp	/^Transport::setMtu(ssize_t mtu)$/;"	f	class:nfd::face::Transport
setMustBeFresh	tools/ndn-tlv-peek.cpp	/^  setMustBeFresh()$/;"	f	class:ndntlvpeek::NdnTlvPeek
setName	core/logger.hpp	/^  setName(const std::string& name)$/;"	f	class:nfd::Logger
setName	rib/rib-entry.hpp	/^RibEntry::setName(const Name& prefix)$/;"	f	class:nfd::rib::RibEntry
setName	rib/rib-update.hpp	/^RibUpdate::setName(const Name& name)$/;"	f	class:nfd::rib::RibUpdate
setOptions	daemon/face/generic-link-service.hpp	/^GenericLinkService::setOptions(const GenericLinkService::Options& options)$/;"	f	class:nfd::face::GenericLinkService
setPacketFilter	daemon/face/ethernet-face.cpp	/^EthernetFace::setPacketFilter(const char* filterString)$/;"	f	class:nfd::EthernetFace
setParent	daemon/table/name-tree-entry.hpp	/^Entry::setParent(shared_ptr<Entry> parent)$/;"	f	class:nfd::name_tree::Entry
setParent	rib/rib-entry.hpp	/^RibEntry::setParent(shared_ptr<RibEntry> parent)$/;"	f	class:nfd::rib::RibEntry
setPayloadOnly	tools/ndn-tlv-peek.cpp	/^  setPayloadOnly()$/;"	f	class:ndntlvpeek::NdnTlvPeek
setPersistency	daemon/face/face.hpp	/^Face::setPersistency(ndn::nfd::FacePersistency persistency)$/;"	f	class:nfd::Face
setPersistency	daemon/face/lp-face-wrapper.cpp	/^LpFaceWrapper::setPersistency(ndn::nfd::FacePersistency persistency)$/;"	f	class:nfd::face::LpFaceWrapper
setPersistency	daemon/face/lp-face.hpp	/^LpFace::setPersistency(ndn::nfd::FacePersistency persistency)$/;"	f	class:nfd::face::LpFace
setPersistency	daemon/face/transport.hpp	/^Transport::setPersistency(ndn::nfd::FacePersistency persistency)$/;"	f	class:nfd::face::Transport
setPingEventId	daemon/face/websocket-face.hpp	/^  setPingEventId(scheduler::EventId& id)$/;"	f	class:nfd::WebSocketFace
setPingInterval	daemon/face/websocket-channel.cpp	/^WebSocketChannel::setPingInterval(time::milliseconds interval)$/;"	f	class:nfd::WebSocketChannel
setPolicy	daemon/table/cs.cpp	/^Cs::setPolicy(unique_ptr<Policy> policy)$/;"	f	class:nfd::cs::Cs
setPolicyImpl	daemon/table/cs.cpp	/^Cs::setPolicyImpl(unique_ptr<Policy>& policy)$/;"	f	class:nfd::cs::Cs
setPongTimeout	daemon/face/websocket-channel.cpp	/^WebSocketChannel::setPongTimeout(time::milliseconds timeout)$/;"	f	class:nfd::WebSocketChannel
setPrefixName	tools/ndn-tlv-peek.cpp	/^  setPrefixName(char* prefixName)$/;"	f	class:ndntlvpeek::NdnTlvPeek
setPrefixName	tools/ndn-tlv-poke.cpp	/^  setPrefixName(char* prefixName)$/;"	f	class:ndntlvpoke::NdnTlvPoke
setRate	tests/daemon/table/dead-nonce-list.t.cpp	/^  setRate(size_t nNoncesPerLifetime)$/;"	f	class:nfd::tests::PeriodicalInsertionFixture
setRemoteUri	daemon/face/transport.hpp	/^Transport::setRemoteUri(const FaceUri& uri)$/;"	f	class:nfd::face::Transport
setRightmostChildSelector	tools/ndn-tlv-peek.cpp	/^  setRightmostChildSelector()$/;"	f	class:ndntlvpeek::NdnTlvPeek
setRoute	rib/rib-update.hpp	/^RibUpdate::setRoute(const Route& route)$/;"	f	class:nfd::rib::RibUpdate
setScope	daemon/face/transport.hpp	/^Transport::setScope(ndn::nfd::FaceScope scope)$/;"	f	class:nfd::face::Transport
setSigningIdentity	rib/propagated-entry.cpp	/^PropagatedEntry::setSigningIdentity(const Name& identity)$/;"	f	class:nfd::rib::PropagatedEntry
setState	daemon/face/transport.cpp	/^Transport::setState(TransportState newState)$/;"	f	class:nfd::face::Transport
setState	tests/daemon/face/dummy-lp-face.cpp	/^DummyLpFace::setState(FaceState state)$/;"	f	class:nfd::face::tests::DummyLpFace
setState	tests/daemon/face/dummy-transport.hpp	/^  setState(FaceState state)$/;"	f	class:nfd::face::tests::DummyTransport
setStragglerTimer	daemon/fw/forwarder.cpp	/^Forwarder::setStragglerTimer(shared_ptr<pit::Entry> pitEntry, bool isSatisfied,$/;"	f	class:nfd::Forwarder
setStrategy	daemon/mgmt/strategy-choice-manager.cpp	/^StrategyChoiceManager::setStrategy(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::StrategyChoiceManager
setStrategy	daemon/table/strategy-choice-entry.hpp	/^Entry::setStrategy(fw::Strategy& strategy)$/;"	f	class:nfd::strategy_choice::Entry
setStrategy	tests/daemon/fw/topology-tester.hpp	/^  setStrategy(TopologyNode i, Name prefix = Name("ndn:\/"))$/;"	f	class:nfd::fw::tests::TopologyTester
setStrategy	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::setStrategy()$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
setStrategyChoiceEntry	daemon/table/name-tree-entry.cpp	/^Entry::setStrategyChoiceEntry(shared_ptr<strategy_choice::Entry> strategyChoiceEntry)$/;"	f	class:nfd::name_tree::Entry
setStrategyInfo	daemon/table/strategy-info-host.hpp	/^StrategyInfoHost::setStrategyInfo(shared_ptr<T> item)$/;"	f	class:nfd::StrategyInfoHost
setTimeout	tools/ndn-tlv-peek.cpp	/^  setTimeout(int timeout)$/;"	f	class:ndntlvpeek::NdnTlvPeek
setTimeout	tools/ndn-tlv-poke.cpp	/^  setTimeout(int timeout)$/;"	f	class:ndntlvpoke::NdnTlvPoke
setTopPrefixAndPrivilege	tests/daemon/mgmt/manager-common-fixture.cpp	/^ManagerCommonFixture::setTopPrefixAndPrivilege(const Name& topPrefix,$/;"	f	class:nfd::tests::ManagerCommonFixture
setUnsatisfyTimer	daemon/fw/forwarder.cpp	/^Forwarder::setUnsatisfyTimer(shared_ptr<pit::Entry> pitEntry)$/;"	f	class:nfd::Forwarder
setUri	daemon/face/channel.cpp	/^Channel::setUri(const FaceUri& uri)$/;"	f	class:nfd::Channel
setUseDigestSha256	tools/ndn-tlv-poke.cpp	/^  setUseDigestSha256()$/;"	f	class:ndntlvpoke::NdnTlvPoke
set_access_channels	websocketpp/websocketpp/endpoint.hpp	/^    void set_access_channels(log::level channels) {$/;"	f	class:websocketpp::endpoint
set_body	websocketpp/websocketpp/http/impl/parser.hpp	/^inline void parser::set_body(std::string const & value) {$/;"	f	class:websocketpp::http::parser::parser
set_body	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::set_body(std::string const & value) {$/;"	f	class:websocketpp::connection
set_c2s_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    lib::error_code set_c2s_max_window_bits(uint8_t bits, mode::value mode) {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
set_channels	websocketpp/websocketpp/logger/basic.hpp	/^    void set_channels(level channels) {$/;"	f	class:websocketpp::log::basic
set_channels	websocketpp/websocketpp/logger/stub.hpp	/^    void set_channels(level) {}$/;"	f	class:websocketpp::log::stub
set_close_handler	websocketpp/websocketpp/connection.hpp	/^    void set_close_handler(close_handler h) {$/;"	f	class:websocketpp::connection
set_close_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_close_handler(close_handler h) {$/;"	f	class:websocketpp::endpoint
set_close_handshake_timeout	websocketpp/websocketpp/connection.hpp	/^    void set_close_handshake_timeout(long dur) {$/;"	f	class:websocketpp::connection
set_close_handshake_timeout	websocketpp/websocketpp/endpoint.hpp	/^    void set_close_handshake_timeout(long dur) {$/;"	f	class:websocketpp::endpoint
set_compressed	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_compressed(bool value) {$/;"	f	class:websocketpp::message_buffer::message
set_error_channels	websocketpp/websocketpp/endpoint.hpp	/^    void set_error_channels(log::level channels) {$/;"	f	class:websocketpp::endpoint
set_fail_handler	websocketpp/websocketpp/connection.hpp	/^    void set_fail_handler(fail_handler h) {$/;"	f	class:websocketpp::connection
set_fail_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_fail_handler(fail_handler h) {$/;"	f	class:websocketpp::endpoint
set_fin	websocketpp/websocketpp/frame.hpp	/^inline void set_fin(basic_header & h, bool value) {$/;"	f	namespace:websocketpp::frame
set_fin	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_fin(bool value) {$/;"	f	class:websocketpp::message_buffer::message
set_handle	websocketpp/websocketpp/connection.hpp	/^    void set_handle(connection_hdl hdl) {$/;"	f	class:websocketpp::connection
set_handle	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_handle(connection_hdl hdl) {$/;"	f	class:websocketpp::transport::asio::connection
set_handle	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    void set_handle(connection_hdl hdl) {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
set_handle	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void set_handle(connection_hdl hdl) {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
set_handle	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void set_handle(connection_hdl) {}$/;"	f	class:websocketpp::transport::debug::connection
set_handle	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void set_handle(connection_hdl hdl) {$/;"	f	class:websocketpp::transport::iostream::connection
set_handle	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void set_handle(connection_hdl hdl) {}$/;"	f	class:websocketpp::transport::stub::connection
set_header	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_header(std::string const & header) {$/;"	f	class:websocketpp::message_buffer::message
set_http_handler	websocketpp/websocketpp/connection.hpp	/^    void set_http_handler(http_handler h) {$/;"	f	class:websocketpp::connection
set_http_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_http_handler(http_handler h) {$/;"	f	class:websocketpp::endpoint
set_interrupt_handler	websocketpp/websocketpp/connection.hpp	/^    void set_interrupt_handler(interrupt_handler h) {$/;"	f	class:websocketpp::connection
set_interrupt_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_interrupt_handler(interrupt_handler h) {$/;"	f	class:websocketpp::endpoint
set_listen_backlog	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void set_listen_backlog(int backlog) {$/;"	f	class:websocketpp::transport::asio::endpoint
set_masked	websocketpp/websocketpp/frame.hpp	/^inline void set_masked(basic_header & h, bool value) {$/;"	f	namespace:websocketpp::frame
set_max_body_size	websocketpp/websocketpp/http/parser.hpp	/^    void set_max_body_size(size_t value) {$/;"	f	class:websocketpp::http::parser::parser
set_max_http_body_size	websocketpp/websocketpp/connection.hpp	/^    void set_max_http_body_size(size_t new_value) {$/;"	f	class:websocketpp::connection
set_max_http_body_size	websocketpp/websocketpp/endpoint.hpp	/^    void set_max_http_body_size(size_t new_value) {$/;"	f	class:websocketpp::endpoint
set_max_message_size	websocketpp/websocketpp/connection.hpp	/^    void set_max_message_size(size_t new_value) {$/;"	f	class:websocketpp::connection
set_max_message_size	websocketpp/websocketpp/endpoint.hpp	/^    void set_max_message_size(size_t new_value) {$/;"	f	class:websocketpp::endpoint
set_max_message_size	websocketpp/websocketpp/processors/processor.hpp	/^    void set_max_message_size(size_t new_value) {$/;"	f	class:websocketpp::processor::processor
set_message_handler	websocketpp/websocketpp/connection.hpp	/^    void set_message_handler(message_handler h) {$/;"	f	class:websocketpp::connection
set_message_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_message_handler(message_handler h) {$/;"	f	class:websocketpp::endpoint
set_method	websocketpp/websocketpp/http/impl/request.hpp	/^inline void request::set_method(std::string const & method) {$/;"	f	class:websocketpp::http::parser::request
set_opcode	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_opcode(frame::opcode::value op) {$/;"	f	class:websocketpp::message_buffer::message
set_open_handler	websocketpp/websocketpp/connection.hpp	/^    void set_open_handler(open_handler h) {$/;"	f	class:websocketpp::connection
set_open_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_open_handler(open_handler h) {$/;"	f	class:websocketpp::endpoint
set_open_handshake_timeout	websocketpp/websocketpp/connection.hpp	/^    void set_open_handshake_timeout(long dur) {$/;"	f	class:websocketpp::connection
set_open_handshake_timeout	websocketpp/websocketpp/endpoint.hpp	/^    void set_open_handshake_timeout(long dur) {$/;"	f	class:websocketpp::endpoint
set_ostream	websocketpp/websocketpp/logger/basic.hpp	/^    void set_ostream(std::ostream * out = &std::cout) {$/;"	f	class:websocketpp::log::basic
set_payload	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_payload(std::string const & payload) {$/;"	f	class:websocketpp::message_buffer::message
set_payload	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_payload(void const * payload, size_t len) {$/;"	f	class:websocketpp::message_buffer::message
set_ping_handler	websocketpp/websocketpp/connection.hpp	/^    void set_ping_handler(ping_handler h) {$/;"	f	class:websocketpp::connection
set_ping_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_ping_handler(ping_handler h) {$/;"	f	class:websocketpp::endpoint
set_pong_handler	websocketpp/websocketpp/connection.hpp	/^    void set_pong_handler(pong_handler h) {$/;"	f	class:websocketpp::connection
set_pong_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_pong_handler(pong_handler h) {$/;"	f	class:websocketpp::endpoint
set_pong_timeout	websocketpp/websocketpp/connection.hpp	/^    void set_pong_timeout(long dur) {$/;"	f	class:websocketpp::connection
set_pong_timeout	websocketpp/websocketpp/endpoint.hpp	/^    void set_pong_timeout(long dur) {$/;"	f	class:websocketpp::endpoint
set_pong_timeout_handler	websocketpp/websocketpp/connection.hpp	/^    void set_pong_timeout_handler(pong_timeout_handler h) {$/;"	f	class:websocketpp::connection
set_pong_timeout_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_pong_timeout_handler(pong_timeout_handler h) {$/;"	f	class:websocketpp::endpoint
set_prepared	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_prepared(bool value) {$/;"	f	class:websocketpp::message_buffer::message
set_proxy	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_proxy(std::string const & uri) {$/;"	f	class:websocketpp::transport::asio::connection
set_proxy	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_proxy(std::string const & uri, lib::error_code & ec) {$/;"	f	class:websocketpp::transport::asio::connection
set_proxy_basic_auth	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_proxy_basic_auth(std::string const & username, std::string const &$/;"	f	class:websocketpp::transport::asio::connection
set_proxy_timeout	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_proxy_timeout(long duration) {$/;"	f	class:websocketpp::transport::asio::connection
set_proxy_timeout	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_proxy_timeout(long duration, lib::error_code & ec) {$/;"	f	class:websocketpp::transport::asio::connection
set_remote_endpoint	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void set_remote_endpoint(std::string) {}$/;"	f	class:websocketpp::transport::debug::connection
set_remote_endpoint	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void set_remote_endpoint(std::string value) {$/;"	f	class:websocketpp::transport::iostream::connection
set_remote_endpoint	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void set_remote_endpoint(std::string value) {}$/;"	f	class:websocketpp::transport::stub::connection
set_reuse_addr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void set_reuse_addr(bool value) {$/;"	f	class:websocketpp::transport::asio::endpoint
set_rsv1	websocketpp/websocketpp/frame.hpp	/^inline void set_rsv1(basic_header &h, bool value) {$/;"	f	namespace:websocketpp::frame
set_rsv2	websocketpp/websocketpp/frame.hpp	/^inline void set_rsv2(basic_header &h, bool value) {$/;"	f	namespace:websocketpp::frame
set_rsv3	websocketpp/websocketpp/frame.hpp	/^inline void set_rsv3(basic_header &h, bool value) {$/;"	f	namespace:websocketpp::frame
set_s2c_max_window_bits	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    lib::error_code set_s2c_max_window_bits(uint8_t bits, mode::value mode) {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
set_secure	websocketpp/websocketpp/transport/debug/connection.hpp	/^    void set_secure(bool) {}$/;"	f	class:websocketpp::transport::debug::connection
set_secure	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    void set_secure(bool) {}$/;"	f	class:websocketpp::transport::debug::endpoint
set_secure	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void set_secure(bool value) {$/;"	f	class:websocketpp::transport::iostream::connection
set_secure	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    void set_secure(bool value) {$/;"	f	class:websocketpp::transport::iostream::endpoint
set_secure	websocketpp/websocketpp/transport/stub/connection.hpp	/^    void set_secure(bool value) {}$/;"	f	class:websocketpp::transport::stub::connection
set_secure	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    void set_secure(bool value) {}$/;"	f	class:websocketpp::transport::stub::endpoint
set_shutdown_handler	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void set_shutdown_handler(shutdown_handler h) {$/;"	f	class:websocketpp::transport::iostream::connection
set_shutdown_handler	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    void set_shutdown_handler(shutdown_handler h) {$/;"	f	class:websocketpp::transport::iostream::endpoint
set_socket_init_handler	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    void set_socket_init_handler(socket_init_handler h) {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
set_socket_init_handler	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    void set_socket_init_handler(socket_init_handler h) {$/;"	f	class:websocketpp::transport::asio::basic_socket::endpoint
set_socket_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void set_socket_init_handler(socket_init_handler h) {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
set_socket_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void set_socket_init_handler(socket_init_handler h) {$/;"	f	class:websocketpp::transport::asio::tls_socket::endpoint
set_status	websocketpp/websocketpp/http/impl/response.hpp	/^inline void response::set_status(status_code::value code) {$/;"	f	class:websocketpp::http::parser::response
set_status	websocketpp/websocketpp/http/impl/response.hpp	/^inline void response::set_status(status_code::value code, std::string const &$/;"	f	class:websocketpp::http::parser::response
set_status	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::set_status(http::status_code::value code)$/;"	f	class:websocketpp::connection
set_status	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::set_status(http::status_code::value code,$/;"	f	class:websocketpp::connection
set_tcp_init_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_tcp_init_handler(tcp_init_handler h) {$/;"	f	class:websocketpp::transport::asio::connection
set_tcp_init_handler	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void set_tcp_init_handler(tcp_init_handler h) {$/;"	f	class:websocketpp::transport::asio::endpoint
set_tcp_post_init_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_tcp_post_init_handler(tcp_init_handler h) {$/;"	f	class:websocketpp::transport::asio::connection
set_tcp_post_init_handler	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void set_tcp_post_init_handler(tcp_init_handler h) {$/;"	f	class:websocketpp::transport::asio::endpoint
set_tcp_pre_init_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^    void set_tcp_pre_init_handler(tcp_init_handler h) {$/;"	f	class:websocketpp::transport::asio::connection
set_tcp_pre_init_handler	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void set_tcp_pre_init_handler(tcp_init_handler h) {$/;"	f	class:websocketpp::transport::asio::endpoint
set_terminal	websocketpp/websocketpp/message_buffer/message.hpp	/^    void set_terminal(bool value) {$/;"	f	class:websocketpp::message_buffer::message
set_termination_handler	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::set_termination_handler($/;"	f	class:websocketpp::connection
set_timer	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    void set_timer() {$/;"	f	class:telemetry_server
set_timer	websocketpp/websocketpp/transport/asio/connection.hpp	/^    timer_ptr set_timer(long duration, timer_handler callback) {$/;"	f	class:websocketpp::transport::asio::connection
set_timer	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    timer_ptr set_timer(long duration, timer_handler callback) {$/;"	f	class:websocketpp::transport::asio::endpoint
set_timer	websocketpp/websocketpp/transport/debug/connection.hpp	/^    timer_ptr set_timer(long, timer_handler handler) {$/;"	f	class:websocketpp::transport::debug::connection
set_timer	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    timer_ptr set_timer(long, timer_handler) {$/;"	f	class:websocketpp::transport::iostream::connection
set_timer	websocketpp/websocketpp/transport/stub/connection.hpp	/^    timer_ptr set_timer(long duration, timer_handler handler) {$/;"	f	class:websocketpp::transport::stub::connection
set_tls_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void set_tls_init_handler(tls_init_handler h) {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
set_tls_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    void set_tls_init_handler(tls_init_handler h) {$/;"	f	class:websocketpp::transport::asio::tls_socket::endpoint
set_uri	websocketpp/websocketpp/http/impl/request.hpp	/^inline void request::set_uri(std::string const & uri) {$/;"	f	class:websocketpp::http::parser::request
set_uri	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::set_uri(uri_ptr uri) {$/;"	f	class:websocketpp::connection
set_user_agent	websocketpp/websocketpp/endpoint.hpp	/^    void set_user_agent(std::string const & ua) {$/;"	f	class:websocketpp::endpoint
set_validate_handler	websocketpp/websocketpp/connection.hpp	/^    void set_validate_handler(validate_handler h) {$/;"	f	class:websocketpp::connection
set_validate_handler	websocketpp/websocketpp/endpoint.hpp	/^    void set_validate_handler(validate_handler h) {$/;"	f	class:websocketpp::endpoint
set_version	websocketpp/websocketpp/http/impl/parser.hpp	/^inline void parser::set_version(std::string const & version) {$/;"	f	class:websocketpp::http::parser::parser
set_write_handler	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    void set_write_handler(write_handler h) {$/;"	f	class:websocketpp::transport::iostream::connection
set_write_handler	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    void set_write_handler(write_handler h) {$/;"	f	class:websocketpp::transport::iostream::endpoint
setup	docs/redmine_issue.py	/^def setup(app):$/;"	f
sha1	websocketpp/websocketpp/sha1/sha1.hpp	/^namespace sha1 {$/;"	n	namespace:websocketpp
sha1_library	websocketpp/websocketpp/processors/base.hpp	/^    sha1_library,$/;"	e	enum:websocketpp::processor::error::processor_errors
sha1macro	websocketpp/websocketpp/sha1/sha1.hpp	109;"	d
sha1macro	websocketpp/websocketpp/sha1/sha1.hpp	69;"	d
short_key3	websocketpp/websocketpp/processors/base.hpp	/^    short_key3$/;"	e	enum:websocketpp::processor::error::processor_errors
shutdown	websocketpp/test/transport/iostream/connection.cpp	/^    void shutdown() {$/;"	f	struct:stub_con
shutdownSocket	daemon/face/stream-face.hpp	/^StreamFace<T, U>::shutdownSocket()$/;"	f	class:nfd::StreamFace
shutdown_handler	websocketpp/websocketpp/transport/base/connection.hpp	/^typedef lib::function<void(lib::error_code const &)> shutdown_handler;$/;"	t	namespace:websocketpp::transport
shutdown_handler	websocketpp/websocketpp/transport/iostream/base.hpp	/^typedef lib::function<lib::error_code(connection_hdl)> shutdown_handler;$/;"	t	namespace:websocketpp::transport::iostream
signData	tests/test-common.hpp	/^signData(shared_ptr<Data> data)$/;"	f	namespace:nfd::tests
signalHandler	tools/nfd-autoreg.cpp	/^  signalHandler()$/;"	f	class:ndn::nfd_autoreg::AutoregServer
silent_close	websocketpp/websocketpp/config/core.hpp	/^    static const bool silent_close = false;$/;"	m	struct:websocketpp::config::core
silent_close	websocketpp/websocketpp/config/core_client.hpp	/^    static const bool silent_close = false;$/;"	m	struct:websocketpp::config::core_client
silent_close	websocketpp/websocketpp/config/debug.hpp	/^    static const bool silent_close = false;$/;"	m	struct:websocketpp::config::debug_core
silent_close	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const bool silent_close = false;$/;"	m	struct:websocketpp::config::minimal_server
simulateSuccessfulResponse	tests/rib/fib-updates-common.hpp	/^  simulateSuccessfulResponse(const RibUpdate& update)$/;"	f	class:nfd::rib::tests::FibUpdatesFixture
sip_client	websocketpp/examples/sip_client/sip_client.cpp	/^client sip_client;$/;"	v
size	daemon/face/tcp-channel.cpp	/^TcpChannel::size() const$/;"	f	class:nfd::TcpChannel
size	daemon/face/udp-channel.cpp	/^UdpChannel::size() const$/;"	f	class:nfd::UdpChannel
size	daemon/face/websocket-channel.cpp	/^WebSocketChannel::size() const$/;"	f	class:nfd::WebSocketChannel
size	daemon/fw/face-table.cpp	/^FaceTable::size() const$/;"	f	class:nfd::FaceTable
size	daemon/table/cs.hpp	/^  size() const$/;"	f	class:nfd::cs::Cs
size	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::size() const$/;"	f	class:nfd::DeadNonceList
size	daemon/table/fib.hpp	/^Fib::size() const$/;"	f	class:nfd::Fib
size	daemon/table/measurements.hpp	/^Measurements::size() const$/;"	f	class:nfd::Measurements
size	daemon/table/name-tree.hpp	/^NameTree::size() const$/;"	f	class:nfd::NameTree
size	daemon/table/pit.hpp	/^Pit::size() const$/;"	f	class:nfd::Pit
size	daemon/table/strategy-choice.hpp	/^StrategyChoice::size() const$/;"	f	class:nfd::StrategyChoice
size	rib/rib-update-batch.cpp	/^RibUpdateBatch::size() const$/;"	f	class:nfd::rib::RibUpdateBatch
size	rib/rib.hpp	/^Rib::size() const$/;"	f	class:nfd::rib::Rib
slice	daemon/face/ndnlp-slicer.cpp	/^Slicer::slice(const Block& block)$/;"	f	class:nfd::ndnlp::Slicer
slicer	tests/daemon/face/ndnlp.t.cpp	/^  ndnlp::Slicer slicer;$/;"	m	class:nfd::ndnlp::tests::ReassembleFixture	file:
smallest	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    smallest$/;"	e	enum:websocketpp::extensions::permessage_deflate::mode::value
socket	tests/daemon/face/dummy-stream-sender.hpp	/^  Socket socket;$/;"	m	class:nfd::tests::DummyStreamSender
socket	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        socket,$/;"	e	enum:websocketpp::transport::asio::socket::error::value
socket	websocketpp/websocketpp/transport/asio/security/base.hpp	/^namespace socket {$/;"	n	namespace:websocketpp::transport::asio
socket_category	websocketpp/websocketpp/transport/asio/security/base.hpp	/^class socket_category : public lib::error_category {$/;"	c	namespace:websocketpp::transport::asio::socket
socket_con_ptr	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename socket_con_type::ptr socket_con_ptr;$/;"	t	class:websocketpp::transport::asio::connection
socket_con_ptr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef typename socket_con_type::ptr socket_con_ptr;$/;"	t	class:websocketpp::transport::asio::endpoint
socket_con_ptr	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef socket_con_type::ptr socket_con_ptr;$/;"	t	class:websocketpp::transport::asio::basic_socket::endpoint
socket_con_ptr	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef socket_con_type::ptr socket_con_ptr;$/;"	t	class:websocketpp::transport::asio::tls_socket::endpoint
socket_con_type	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef typename config::socket_type::socket_con_type socket_con_type;$/;"	t	class:websocketpp::transport::asio::connection
socket_con_type	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef typename socket_type::socket_con_type socket_con_type;$/;"	t	class:websocketpp::transport::asio::endpoint
socket_con_type	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef connection socket_con_type;$/;"	t	class:websocketpp::transport::asio::basic_socket::endpoint
socket_con_type	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef connection socket_con_type;$/;"	t	class:websocketpp::transport::asio::tls_socket::endpoint
socket_init_handler	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    socket_init_handler;$/;"	t	namespace:websocketpp::transport::asio::basic_socket
socket_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    boost::asio::ip::tcp::socket>&)> socket_init_handler;$/;"	t	namespace:websocketpp::transport::asio::tls_socket
socket_ptr	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef lib::shared_ptr<socket_type> socket_ptr;$/;"	t	class:websocketpp::transport::asio::basic_socket::connection
socket_ptr	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef lib::shared_ptr<socket_type> socket_ptr;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
socket_shutdown_handler	websocketpp/websocketpp/transport/asio/base.hpp	/^    socket_shutdown_handler;$/;"	t	namespace:websocketpp::transport::asio
socket_type	websocketpp/examples/debug_server/debug_server.cpp	/^            socket_type;$/;"	t	struct:debug_custom::transport_config	file:
socket_type	websocketpp/test/transport/asio/timers.cpp	/^    typedef websocketpp::transport::asio::tls_socket::endpoint socket_type;$/;"	t	struct:config	file:
socket_type	websocketpp/test/transport/integration.cpp	/^            socket_type;$/;"	t	struct:config::transport_config	file:
socket_type	websocketpp/test/transport/integration.cpp	/^            socket_type;$/;"	t	struct:config_tls::transport_config	file:
socket_type	websocketpp/websocketpp/config/asio.hpp	/^        typedef websocketpp::transport::asio::tls_socket::endpoint socket_type;$/;"	t	struct:websocketpp::config::asio_tls::transport_config
socket_type	websocketpp/websocketpp/config/asio_client.hpp	/^        typedef websocketpp::transport::asio::tls_socket::endpoint socket_type;$/;"	t	struct:websocketpp::config::asio_tls_client::transport_config
socket_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^            socket_type;$/;"	t	struct:websocketpp::config::asio::transport_config
socket_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^            socket_type;$/;"	t	struct:websocketpp::config::asio_client::transport_config
socket_type	websocketpp/websocketpp/config/debug_asio.hpp	/^        typedef websocketpp::transport::asio::tls_socket::endpoint socket_type;$/;"	t	struct:websocketpp::config::debug_asio_tls::transport_config
socket_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^            socket_type;$/;"	t	struct:websocketpp::config::debug_asio::transport_config
socket_type	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef typename config::socket_type socket_type;$/;"	t	class:websocketpp::transport::asio::endpoint
socket_type	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef boost::asio::ip::tcp::socket socket_type;$/;"	t	class:websocketpp::transport::asio::basic_socket::connection
socket_type	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> socket_type;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
sortNextHops	daemon/table/fib-entry.cpp	/^Entry::sortNextHops()$/;"	f	class:nfd::fib::Entry
sortRoutes	rib/rib.cpp	/^sortRoutes(const Route& lhs, const Route& rhs)$/;"	f	namespace:nfd::rib
source_suffix	docs/conf.py	/^source_suffix = '.rst'$/;"	v
src	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    endpoint(const endpoint& src) = delete;$/;"	m	class:websocketpp::transport::asio::endpoint
start	tests/daemon/face/dummy-stream-sender.hpp	/^  start(const Endpoint& endpoint)$/;"	f	class:nfd::tests::DummyStreamSender
start	tools/ndn-autoconfig/guess-from-identity-name.cpp	/^GuessFromIdentityName::start()$/;"	f	class:ndn::tools::autoconfig::GuessFromIdentityName
start	tools/ndn-autoconfig/guess-from-search-domains.cpp	/^GuessFromSearchDomains::start()$/;"	f	class:ndn::tools::autoconfig::GuessFromSearchDomains
start	tools/ndn-autoconfig/multicast-discovery.cpp	/^MulticastDiscovery::start()$/;"	f	class:ndn::tools::autoconfig::MulticastDiscovery
start	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::start(ndn::Face& face,$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
start	websocketpp/examples/debug_client/debug_client.cpp	/^    void start(std::string uri) {$/;"	f	class:perftest
start	websocketpp/test/transport/asio/timers.cpp	/^    void start() {$/;"	f	struct:mock_con
start	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::start() {$/;"	f	class:websocketpp::connection
startFaceCreate	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::startFaceCreate(const ndn::util::FaceUri& canonicalUri)$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
startFaceCreate	tools/nfdc.cpp	/^Nfdc::startFaceCreate(const ndn::util::FaceUri& canonicalUri)$/;"	f	class:nfdc::Nfdc
startFetchingFaceStatusDataset	tools/nfd-autoreg.cpp	/^  startFetchingFaceStatusDataset()$/;"	f	class:ndn::nfd_autoreg::AutoregServer
startGetFaceId	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::startGetFaceId(const ndn::util::FaceUri& faceUri)$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
startInterest	tests/daemon/table/cs.t.cpp	/^  startInterest(const Name& name)$/;"	f	class:nfd::cs::tests::FindFixture
startListening	rib/rib-manager.cpp	/^RibManager::startListening(const Name& commandPrefix, const ndn::OnInterest& onRequest)$/;"	f	class:nfd::rib::RibManager
startProcessData	daemon/fw/forwarder.cpp	/^Forwarder::startProcessData(Face& face, const Data& data)$/;"	f	class:nfd::Forwarder
startProcessInterest	daemon/fw/forwarder.cpp	/^Forwarder::startProcessInterest(Face& face, const Interest& interest)$/;"	f	class:nfd::Forwarder
startProcessNack	daemon/fw/forwarder.cpp	/^Forwarder::startProcessNack(Face& face, const lp::Nack& nack)$/;"	f	class:nfd::Forwarder
startProcessing	tools/nfd-autoreg.cpp	/^  startProcessing()$/;"	f	class:ndn::nfd_autoreg::AutoregServer
startPropagation	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::startPropagation(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
startPropagation	rib/propagated-entry.cpp	/^PropagatedEntry::startPropagation()$/;"	f	class:nfd::rib::PropagatedEntry
startRevocation	rib/auto-prefix-propagator.cpp	/^AutoPrefixPropagator::startRevocation(const ControlParameters& parameters,$/;"	f	class:nfd::rib::AutoPrefixPropagator
startStages	tools/ndn-autoconfig/main.cpp	/^  startStages()$/;"	f	class:ndn::tools::NdnAutoconfig	file:
start_accept	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    void start_accept() {$/;"	f	class:websocketpp::server
start_accept	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    void start_accept(lib::error_code & ec) {$/;"	f	class:websocketpp::server
start_perpetual	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void start_perpetual() {$/;"	f	class:websocketpp::transport::asio::endpoint
state	websocketpp/websocketpp/connection.hpp	/^namespace state {$/;"	n	namespace:websocketpp::session
state	websocketpp/websocketpp/http/parser.hpp	/^namespace state {$/;"	n	namespace:websocketpp::http::parser
state	websocketpp/websocketpp/http/response.hpp	/^    enum state {$/;"	g	class:websocketpp::http::parser::response
state	websocketpp/websocketpp/processors/hybi00.hpp	/^    enum state {$/;"	g	class:websocketpp::processor::hybi00
state	websocketpp/websocketpp/processors/hybi13.hpp	/^    enum state {$/;"	g	class:websocketpp::processor::hybi13
state	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    enum state {$/;"	g	class:websocketpp::transport::asio::endpoint
state	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    enum state {$/;"	g	class:websocketpp::transport::asio::basic_socket::connection
static_test	websocketpp/websocketpp/logger/basic.hpp	/^    _WEBSOCKETPP_CONSTEXPR_TOKEN_ bool static_test(level channel) const {$/;"	f	class:websocketpp::log::basic
static_test	websocketpp/websocketpp/logger/stub.hpp	/^    _WEBSOCKETPP_CONSTEXPR_TOKEN_ bool static_test(level) const {$/;"	f	class:websocketpp::log::stub
status	websocketpp/websocketpp/close.hpp	/^namespace status {$/;"	n	namespace:websocketpp::close
status	websocketpp/websocketpp/connection.hpp	/^namespace status {$/;"	n	namespace:websocketpp::session::fail
status_code	websocketpp/websocketpp/http/constants.hpp	/^    namespace status_code {$/;"	n	namespace:websocketpp::http
steadyClock	tests/test-common.hpp	/^  shared_ptr<time::UnitTestSteadyClock> steadyClock;$/;"	m	class:nfd::tests::UnitTestTimeFixture
stop	tests/daemon/face/dummy-stream-sender.hpp	/^  stop()$/;"	f	class:nfd::tests::DummyStreamSender
stop	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void stop() {$/;"	f	class:websocketpp::transport::asio::endpoint
stop_listening	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void stop_listening() {$/;"	f	class:websocketpp::transport::asio::endpoint
stop_listening	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void stop_listening(lib::error_code & ec) {$/;"	f	class:websocketpp::transport::asio::endpoint
stop_on_close	websocketpp/test/transport/integration.cpp	/^void stop_on_close(server * s, websocketpp::connection_hdl hdl) {$/;"	f
stop_perpetual	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    void stop_perpetual() {$/;"	f	class:websocketpp::transport::asio::endpoint
stopped	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    bool stopped() const {$/;"	f	class:websocketpp::transport::asio::endpoint
storage_	websocketpp/websocketpp/transport/asio/base.hpp	/^  boost::aligned_storage<1024> storage_;$/;"	m	class:websocketpp::transport::asio::handler_allocator
str	websocketpp/websocketpp/uri.hpp	/^    std::string str() const {$/;"	f	class:websocketpp::uri
strand_ptr	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef lib::shared_ptr<boost::asio::io_service::strand> strand_ptr;$/;"	t	class:websocketpp::transport::asio::connection
strand_ptr	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef lib::shared_ptr<boost::asio::io_service::strand> strand_ptr;$/;"	t	class:websocketpp::transport::asio::basic_socket::connection
strand_ptr	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef lib::shared_ptr<boost::asio::io_service::strand> strand_ptr;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
strategy	tests/daemon/fw/best-route-strategy2.t.cpp	/^  StrategyTester<fw::BestRouteStrategy2> strategy;$/;"	m	class:nfd::fw::tests::BestRouteStrategy2Fixture	file:
strategy1	tests/daemon/table/measurements-accessor.t.cpp	/^  shared_ptr<MeasurementsAccessorTestStrategy> strategy1;$/;"	m	class:nfd::tests::MeasurementsAccessorFixture	file:
strategy2	tests/daemon/table/measurements-accessor.t.cpp	/^  shared_ptr<MeasurementsAccessorTestStrategy> strategy2;$/;"	m	class:nfd::tests::MeasurementsAccessorFixture	file:
strategyChoiceSet	tools/nfdc.cpp	/^Nfdc::strategyChoiceSet()$/;"	f	class:nfdc::Nfdc
strategyChoiceUnset	tools/nfdc.cpp	/^Nfdc::strategyChoiceUnset()$/;"	f	class:nfdc::Nfdc
strategy_choice	daemon/table/strategy-choice-entry.cpp	/^namespace strategy_choice {$/;"	n	namespace:nfd	file:
strategy_choice	daemon/table/strategy-choice-entry.hpp	/^namespace strategy_choice {$/;"	n	namespace:nfd
string_replace_all	websocketpp/websocketpp/impl/utilities_impl.hpp	/^inline std::string string_replace_all(std::string subject, std::string const &$/;"	f	namespace:websocketpp::utility
strip_lws	websocketpp/websocketpp/http/parser.hpp	/^inline std::string strip_lws(std::string const & input) {$/;"	f	namespace:websocketpp::http::parser
stub	websocketpp/test/message_buffer/alloc.cpp	/^    stub(con_msg_man_ptr manager, websocketpp::frame::opcode::value op, size_t size = 128)$/;"	f	struct:stub
stub	websocketpp/test/message_buffer/alloc.cpp	/^struct stub {$/;"	s	file:
stub	websocketpp/test/message_buffer/message.cpp	/^    stub() : recycled(false) {}$/;"	f	struct:stub
stub	websocketpp/test/message_buffer/message.cpp	/^struct stub {$/;"	s	file:
stub	websocketpp/websocketpp/logger/stub.hpp	/^    _WEBSOCKETPP_CONSTEXPR_TOKEN_ stub() {}$/;"	f	class:websocketpp::log::stub
stub	websocketpp/websocketpp/logger/stub.hpp	/^    explicit stub(channel_type_hint::value) {}$/;"	f	class:websocketpp::log::stub
stub	websocketpp/websocketpp/logger/stub.hpp	/^    stub(level, channel_type_hint::value) {}$/;"	f	class:websocketpp::log::stub
stub	websocketpp/websocketpp/logger/stub.hpp	/^class stub {$/;"	c	namespace:websocketpp::log
stub	websocketpp/websocketpp/transport/stub/base.hpp	/^namespace stub {$/;"	n	namespace:websocketpp::transport
stub	websocketpp/websocketpp/transport/stub/connection.hpp	/^namespace stub {$/;"	n	namespace:websocketpp::transport
stub	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^namespace stub {$/;"	n	namespace:websocketpp::transport
stub_con	websocketpp/test/transport/iostream/connection.cpp	/^    stub_con(bool is_server, config::alog_type & a, config::elog_type & e)$/;"	f	struct:stub_con
stub_con	websocketpp/test/transport/iostream/connection.cpp	/^struct stub_con : public iostream_con {$/;"	s	file:
stub_config	websocketpp/test/connection/connection.cpp	/^struct stub_config : public websocketpp::config::core {$/;"	s	file:
stub_config	websocketpp/test/endpoint/endpoint.cpp	/^struct stub_config : public websocketpp::config::core {$/;"	s	file:
stub_config	websocketpp/test/processors/hybi00.cpp	/^struct stub_config {$/;"	s	file:
stub_config	websocketpp/test/processors/hybi07.cpp	/^struct stub_config {$/;"	s	file:
stub_config	websocketpp/test/processors/hybi08.cpp	/^struct stub_config {$/;"	s	file:
stub_config	websocketpp/test/processors/hybi13.cpp	/^struct stub_config {$/;"	s	file:
stub_config	websocketpp/test/roles/client.cpp	/^struct stub_config : public websocketpp::config::core {$/;"	s	file:
stub_config_ext	websocketpp/test/processors/hybi13.cpp	/^struct stub_config_ext {$/;"	s	file:
subprotocol_error	websocketpp/websocketpp/close.hpp	/^    static value const subprotocol_error = 3000;$/;"	m	namespace:websocketpp::close::status
subprotocol_parse_error	websocketpp/websocketpp/processors/base.hpp	/^    subprotocol_parse_error,$/;"	e	enum:websocketpp::processor::error::processor_errors
succeed	rib/propagated-entry.cpp	/^PropagatedEntry::succeed(const scheduler::EventId& event)$/;"	f	class:nfd::rib::PropagatedEntry
succeed	tools/nfdc.cpp	/^Nfdc::FaceIdFetcher::succeed(uint32_t faceId)$/;"	f	class:nfdc::Nfdc::FaceIdFetcher
suppressionInterval	daemon/fw/retx-suppression-exponential.cpp	/^  Duration suppressionInterval;$/;"	m	class:nfd::fw::RetxSuppressionExponential::PitInfo	file:
switching_protocols	websocketpp/websocketpp/http/constants.hpp	/^            switching_protocols = 101,$/;"	e	enum:websocketpp::http::status_code::value
syslog	websocketpp/websocketpp/logger/syslog.hpp	/^    syslog<concurrency,names>(channel_type_hint::value hint =$/;"	f	class:websocketpp::log::syslog
syslog	websocketpp/websocketpp/logger/syslog.hpp	/^    syslog<concurrency,names>(level channels, channel_type_hint::value hint =$/;"	f	class:websocketpp::log::syslog
syslog	websocketpp/websocketpp/logger/syslog.hpp	/^class syslog : public basic<concurrency, names> {$/;"	c	namespace:websocketpp::log
syslog_priority	websocketpp/websocketpp/logger/syslog.hpp	/^    int syslog_priority(level channel) const {$/;"	f	class:websocketpp::log::syslog
syslog_priority_access	websocketpp/websocketpp/logger/syslog.hpp	/^    _WEBSOCKETPP_CONSTEXPR_TOKEN_ int syslog_priority_access(level) const {$/;"	f	class:websocketpp::log::syslog
syslog_priority_error	websocketpp/websocketpp/logger/syslog.hpp	/^    int syslog_priority_error(level channel) const {$/;"	f	class:websocketpp::log::syslog
systemClock	tests/test-common.hpp	/^  shared_ptr<time::UnitTestSystemClock> systemClock;$/;"	m	class:nfd::tests::UnitTestTimeFixture
tcp	daemon/face/tcp-channel.hpp	/^namespace tcp {$/;"	n	namespace:nfd
tcp_init_handler	websocketpp/websocketpp/transport/asio/connection.hpp	/^typedef lib::function<void(connection_hdl)> tcp_init_handler;$/;"	t	namespace:websocketpp::transport::asio
telemetry_client	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    telemetry_client() : m_open(false),m_done(false) {$/;"	f	class:telemetry_client
telemetry_client	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^class telemetry_client {$/;"	c	file:
telemetry_loop	websocketpp/examples/telemetry_client/telemetry_client.cpp	/^    void telemetry_loop() {$/;"	f	class:telemetry_client
telemetry_server	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^    telemetry_server() : m_count(0) {$/;"	f	class:telemetry_server
telemetry_server	websocketpp/examples/telemetry_server/telemetry_server.cpp	/^class telemetry_server {$/;"	c	file:
templates_path	docs/conf.py	/^templates_path = ['_templates']$/;"	v
temporary_redirect	websocketpp/websocketpp/http/constants.hpp	/^            temporary_redirect = 307,$/;"	e	enum:websocketpp::http::status_code::value
terminal	websocketpp/websocketpp/close.hpp	/^    inline bool terminal(value code) {$/;"	f	namespace:websocketpp::close::status
terminate	daemon/main.cpp	/^  terminate(const boost::system::error_code& error, int signalNo)$/;"	f	class:nfd::NfdRunner
terminate	tools/ndn-autoconfig/main.cpp	/^  terminate(const boost::system::error_code& error, int signalNo)$/;"	f	class:ndn::tools::NdnAutoconfig
terminate	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::terminate(lib::error_code const & ec) {$/;"	f	class:websocketpp::connection
terminate_status	websocketpp/websocketpp/connection.hpp	/^    enum terminate_status {$/;"	g	class:websocketpp::connection
termination_handler	websocketpp/websocketpp/connection.hpp	/^    typedef lib::function<void(ptr)> termination_handler;$/;"	t	class:websocketpp::connection
termination_handler	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename connection_type::termination_handler termination_handler;$/;"	t	class:websocketpp::endpoint
test	waf	/^def test(dir):$/;"	f
test	websocketpp/websocketpp/error.hpp	/^    test,$/;"	e	enum:websocketpp::error::value
testModuleBPrint	tests/core/logger.t.cpp	/^testModuleBPrint()$/;"	f	namespace:nfd::tests
testee_config	websocketpp/examples/testee_server/testee_server.cpp	/^struct testee_config : public websocketpp::config::asio {$/;"	s	file:
tests	tests/core/algorithm.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/config-file.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/global-io.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/logger.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/ndebug.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/network-interface.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/network.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/privilege-helper.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/random.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/scheduler.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/segment-publisher.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/core/simple-notification.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/core/version.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/dummy-face.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/daemon/face/dummy-lp-face.cpp	/^namespace tests {$/;"	n	namespace:nfd::face	file:
tests	tests/daemon/face/dummy-lp-face.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/daemon/face/dummy-lp-face.hpp	/^namespace tests {$/;"	n	namespace:nfd::face
tests	tests/daemon/face/dummy-stream-sender.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/daemon/face/dummy-transport.hpp	/^namespace tests {$/;"	n	namespace:nfd::face
tests	tests/daemon/face/ethernet.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/face-counters.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/face-history.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/daemon/face/face.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/generic-link-service.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::face	file:
tests	tests/daemon/face/internal-face.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::face	file:
tests	tests/daemon/face/lp-face-wrapper.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::face	file:
tests	tests/daemon/face/multicast-udp-transport.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::face	file:
tests	tests/daemon/face/ndnlp.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::ndnlp	file:
tests	tests/daemon/face/null-face.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/packet-datasets.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/packet-datasets.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/daemon/face/tcp.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/udp.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/unicast-udp-transport.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::face	file:
tests	tests/daemon/face/unix-stream-transport.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::face	file:
tests	tests/daemon/face/unix-stream.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/face/websocket.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/fw/access-strategy.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/best-route-strategy2.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/broadcast-strategy.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/client-control-strategy.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/dummy-strategy.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/daemon/fw/face-table.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/fw/forwarder.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/fw/multicast-strategy.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/ncc-strategy.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/retx-suppression.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/rtt-estimator.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/fw/strategy-tester.hpp	/^namespace tests {$/;"	n	namespace:nfd::fw
tests	tests/daemon/fw/strategy.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/topology-tester.cpp	/^namespace tests {$/;"	n	namespace:nfd::fw	file:
tests	tests/daemon/fw/topology-tester.hpp	/^namespace tests {$/;"	n	namespace:nfd::fw
tests	tests/daemon/mgmt/command-validator.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/face-manager-process-config.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/face-manager.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/fib-manager.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/forwarder-status-manager.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/general-config-section.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::general	file:
tests	tests/daemon/mgmt/manager-base.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/manager-common-fixture.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/manager-common-fixture.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/daemon/mgmt/strategy-choice-manager.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/mgmt/tables-config-section.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/cs-policy-lru.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::cs	file:
tests	tests/daemon/table/cs-policy-priority-fifo.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::cs	file:
tests	tests/daemon/table/cs.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::cs	file:
tests	tests/daemon/table/dead-nonce-list.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/fib.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/measurements-accessor.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/measurements.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/name-tree.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/network-region-table.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/pit.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::pit	file:
tests	tests/daemon/table/strategy-choice.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/daemon/table/strategy-info-host.t.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/global-configuration.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/identity-management-fixture.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/identity-management-fixture.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/limited-io.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/limited-io.hpp	/^namespace tests {$/;"	n	namespace:nfd
tests	tests/other/cs-benchmark.cpp	/^namespace tests {$/;"	n	namespace:nfd	file:
tests	tests/rib/auto-prefix-propagator.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/fib-updates-common.hpp	/^namespace tests {$/;"	n	namespace:nfd::rib
tests	tests/rib/fib-updates-erase-face.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/fib-updates-new-face.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/fib-updates-new-namespace.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/fib-updates-update-face.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/propagated-entry.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/rib-manager.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/rib-status-publisher-common.hpp	/^namespace tests {$/;"	n	namespace:nfd::rib
tests	tests/rib/rib-status-publisher.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/rib-test-common.hpp	/^namespace tests {$/;"	n	namespace:nfd::rib
tests	tests/rib/rib-update.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/rib/rib.t.cpp	/^namespace tests {$/;"	n	namespace:nfd::rib	file:
tests	tests/test-common.hpp	/^namespace tests {$/;"	n	namespace:nfd
text	websocketpp/websocketpp/frame.hpp	/^        text = 0x1,$/;"	e	enum:websocketpp::frame::opcode::value
throwErrorOnUnknownSection	core/config-file.cpp	/^ConfigFile::throwErrorOnUnknownSection(const std::string& filename,$/;"	f	class:nfd::ConfigFile
timeUnit	tests/daemon/table/dead-nonce-list.t.cpp	/^  time::nanoseconds timeUnit;$/;"	m	class:nfd::tests::PeriodicalInsertionFixture	file:
timedRun	tests/other/cs-benchmark.cpp	/^  timedRun(std::function<void()> f)$/;"	f	class:nfd::tests::CsBenchmarkFixture
timeout	websocketpp/websocketpp/transport/base/connection.hpp	/^    timeout,$/;"	e	enum:websocketpp::transport::error::value
timeoutOnBestFace	daemon/fw/ncc-strategy.cpp	/^NccStrategy::timeoutOnBestFace(weak_ptr<pit::Entry> pitEntryWeak)$/;"	f	class:nfd::fw::NccStrategy
timeout_close_handshake	websocketpp/test/transport/integration.cpp	/^    static const long timeout_close_handshake = 500;$/;"	m	struct:config	file:
timeout_close_handshake	websocketpp/test/transport/integration.cpp	/^    static const long timeout_close_handshake = 500;$/;"	m	struct:config_tls	file:
timeout_close_handshake	websocketpp/websocketpp/config/core.hpp	/^    static const long timeout_close_handshake = 5000;$/;"	m	struct:websocketpp::config::core
timeout_close_handshake	websocketpp/websocketpp/config/core_client.hpp	/^    static const long timeout_close_handshake = 5000;$/;"	m	struct:websocketpp::config::core_client
timeout_close_handshake	websocketpp/websocketpp/config/debug.hpp	/^    static const long timeout_close_handshake = 5000;$/;"	m	struct:websocketpp::config::debug_core
timeout_close_handshake	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const long timeout_close_handshake = 5000;$/;"	m	struct:websocketpp::config::minimal_server
timeout_connect	websocketpp/test/connection/connection.cpp	/^        static const long timeout_connect = 5000;$/;"	m	struct:debug_config_client::transport_config	file:
timeout_connect	websocketpp/test/transport/asio/timers.cpp	/^    static const long timeout_connect = 1000;$/;"	m	struct:config	file:
timeout_connect	websocketpp/websocketpp/config/core.hpp	/^        static const long timeout_connect = 5000;$/;"	m	struct:websocketpp::config::core::transport_config
timeout_connect	websocketpp/websocketpp/config/core_client.hpp	/^        static const long timeout_connect = 5000;$/;"	m	struct:websocketpp::config::core_client::transport_config
timeout_connect	websocketpp/websocketpp/config/debug.hpp	/^        static const long timeout_connect = 5000;$/;"	m	struct:websocketpp::config::debug_core::transport_config
timeout_connect	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const long timeout_connect = 5000;$/;"	m	struct:websocketpp::config::minimal_server::transport_config
timeout_dns_resolve	websocketpp/test/transport/asio/timers.cpp	/^    static const long timeout_dns_resolve = 1000;$/;"	m	struct:config	file:
timeout_dns_resolve	websocketpp/websocketpp/config/core.hpp	/^        static const long timeout_dns_resolve = 5000;$/;"	m	struct:websocketpp::config::core::transport_config
timeout_dns_resolve	websocketpp/websocketpp/config/core_client.hpp	/^        static const long timeout_dns_resolve = 5000;$/;"	m	struct:websocketpp::config::core_client::transport_config
timeout_dns_resolve	websocketpp/websocketpp/config/debug.hpp	/^        static const long timeout_dns_resolve = 5000;$/;"	m	struct:websocketpp::config::debug_core::transport_config
timeout_dns_resolve	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const long timeout_dns_resolve = 5000;$/;"	m	struct:websocketpp::config::minimal_server::transport_config
timeout_open_handshake	websocketpp/examples/debug_server/debug_server.cpp	/^    static const long timeout_open_handshake = 0;$/;"	m	struct:debug_custom	file:
timeout_open_handshake	websocketpp/test/transport/integration.cpp	/^    static const long timeout_open_handshake = 500;$/;"	m	struct:config	file:
timeout_open_handshake	websocketpp/test/transport/integration.cpp	/^    static const long timeout_open_handshake = 500;$/;"	m	struct:config_tls	file:
timeout_open_handshake	websocketpp/websocketpp/config/core.hpp	/^    static const long timeout_open_handshake = 5000;$/;"	m	struct:websocketpp::config::core
timeout_open_handshake	websocketpp/websocketpp/config/core_client.hpp	/^    static const long timeout_open_handshake = 5000;$/;"	m	struct:websocketpp::config::core_client
timeout_open_handshake	websocketpp/websocketpp/config/debug.hpp	/^    static const long timeout_open_handshake = 5000;$/;"	m	struct:websocketpp::config::debug_core
timeout_open_handshake	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const long timeout_open_handshake = 5000;$/;"	m	struct:websocketpp::config::minimal_server
timeout_pong	websocketpp/test/transport/integration.cpp	/^    static const long timeout_pong = 500;$/;"	m	struct:config	file:
timeout_pong	websocketpp/test/transport/integration.cpp	/^    static const long timeout_pong = 500;$/;"	m	struct:config_tls	file:
timeout_pong	websocketpp/websocketpp/config/core.hpp	/^    static const long timeout_pong = 5000;$/;"	m	struct:websocketpp::config::core
timeout_pong	websocketpp/websocketpp/config/core_client.hpp	/^    static const long timeout_pong = 5000;$/;"	m	struct:websocketpp::config::core_client
timeout_pong	websocketpp/websocketpp/config/debug.hpp	/^    static const long timeout_pong = 5000;$/;"	m	struct:websocketpp::config::debug_core
timeout_pong	websocketpp/websocketpp/config/minimal_server.hpp	/^    static const long timeout_pong = 5000;$/;"	m	struct:websocketpp::config::minimal_server
timeout_proxy	websocketpp/test/connection/connection.cpp	/^        static const long timeout_proxy = 5000;$/;"	m	struct:debug_config_client::transport_config	file:
timeout_proxy	websocketpp/test/transport/asio/timers.cpp	/^    static const long timeout_proxy = 1000;$/;"	m	struct:config	file:
timeout_proxy	websocketpp/websocketpp/config/core.hpp	/^        static const long timeout_proxy = 5000;$/;"	m	struct:websocketpp::config::core::transport_config
timeout_proxy	websocketpp/websocketpp/config/core_client.hpp	/^        static const long timeout_proxy = 5000;$/;"	m	struct:websocketpp::config::core_client::transport_config
timeout_proxy	websocketpp/websocketpp/config/debug.hpp	/^        static const long timeout_proxy = 5000;$/;"	m	struct:websocketpp::config::debug_core::transport_config
timeout_proxy	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const long timeout_proxy = 5000;$/;"	m	struct:websocketpp::config::minimal_server::transport_config
timeout_proxy	websocketpp/websocketpp/transport/asio/connection.hpp	/^        long timeout_proxy;$/;"	m	struct:websocketpp::transport::asio::connection::proxy_data
timeout_socket_post_init	websocketpp/test/connection/connection.cpp	/^        static const long timeout_socket_post_init = 5000;$/;"	m	struct:debug_config_client::transport_config	file:
timeout_socket_post_init	websocketpp/test/transport/asio/timers.cpp	/^    static const long timeout_socket_post_init = 1000;$/;"	m	struct:config	file:
timeout_socket_post_init	websocketpp/websocketpp/config/core.hpp	/^        static const long timeout_socket_post_init = 5000;$/;"	m	struct:websocketpp::config::core::transport_config
timeout_socket_post_init	websocketpp/websocketpp/config/core_client.hpp	/^        static const long timeout_socket_post_init = 5000;$/;"	m	struct:websocketpp::config::core_client::transport_config
timeout_socket_post_init	websocketpp/websocketpp/config/debug.hpp	/^        static const long timeout_socket_post_init = 5000;$/;"	m	struct:websocketpp::config::debug_core::transport_config
timeout_socket_post_init	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const long timeout_socket_post_init = 5000;$/;"	m	struct:websocketpp::config::minimal_server::transport_config
timeout_socket_pre_init	websocketpp/test/connection/connection.cpp	/^        static const long timeout_socket_pre_init = 5000;$/;"	m	struct:debug_config_client::transport_config	file:
timeout_socket_pre_init	websocketpp/test/transport/asio/timers.cpp	/^    static const long timeout_socket_pre_init = 1000;$/;"	m	struct:config	file:
timeout_socket_pre_init	websocketpp/websocketpp/config/core.hpp	/^        static const long timeout_socket_pre_init = 5000;$/;"	m	struct:websocketpp::config::core::transport_config
timeout_socket_pre_init	websocketpp/websocketpp/config/core_client.hpp	/^        static const long timeout_socket_pre_init = 5000;$/;"	m	struct:websocketpp::config::core_client::transport_config
timeout_socket_pre_init	websocketpp/websocketpp/config/debug.hpp	/^        static const long timeout_socket_pre_init = 5000;$/;"	m	struct:websocketpp::config::debug_core::transport_config
timeout_socket_pre_init	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const long timeout_socket_pre_init = 5000;$/;"	m	struct:websocketpp::config::minimal_server::transport_config
timeout_socket_shutdown	websocketpp/test/connection/connection.cpp	/^        static const long timeout_socket_shutdown = 5000;$/;"	m	struct:debug_config_client::transport_config	file:
timeout_socket_shutdown	websocketpp/test/transport/asio/timers.cpp	/^    static const long timeout_socket_shutdown = 1000;$/;"	m	struct:config	file:
timeout_socket_shutdown	websocketpp/websocketpp/config/core.hpp	/^        static const long timeout_socket_shutdown = 5000;$/;"	m	struct:websocketpp::config::core::transport_config
timeout_socket_shutdown	websocketpp/websocketpp/config/core_client.hpp	/^        static const long timeout_socket_shutdown = 5000;$/;"	m	struct:websocketpp::config::core_client::transport_config
timeout_socket_shutdown	websocketpp/websocketpp/config/debug.hpp	/^        static const long timeout_socket_shutdown = 5000;$/;"	m	struct:websocketpp::config::debug_core::transport_config
timeout_socket_shutdown	websocketpp/websocketpp/config/minimal_server.hpp	/^        static const long timeout_socket_shutdown = 5000;$/;"	m	struct:websocketpp::config::minimal_server::transport_config
timer	websocketpp/websocketpp/transport/asio/connection.hpp	/^        timer_ptr timer;$/;"	m	struct:websocketpp::transport::asio::connection::proxy_data
timer	websocketpp/websocketpp/transport/debug/connection.hpp	/^struct timer {$/;"	s	namespace:websocketpp::transport::debug
timer	websocketpp/websocketpp/transport/iostream/connection.hpp	/^struct timer {$/;"	s	namespace:websocketpp::transport::iostream
timer	websocketpp/websocketpp/transport/stub/connection.hpp	/^struct timer {$/;"	s	namespace:websocketpp::transport::stub
timer_callback_stub	websocketpp/test/transport/iostream/connection.cpp	/^void timer_callback_stub(websocketpp::lib::error_code const &) {}$/;"	f
timer_handler	websocketpp/websocketpp/transport/base/connection.hpp	/^typedef lib::function<void(lib::error_code const &)> timer_handler;$/;"	t	namespace:websocketpp::transport
timer_ptr	websocketpp/test/transport/iostream/connection.cpp	/^    typedef iostream_con::timer_ptr timer_ptr;$/;"	t	struct:stub_con	file:
timer_ptr	websocketpp/websocketpp/connection.hpp	/^    typedef typename transport_con_type::timer_ptr timer_ptr;$/;"	t	class:websocketpp::connection
timer_ptr	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef lib::shared_ptr<boost::asio::deadline_timer> timer_ptr;$/;"	t	class:websocketpp::transport::asio::connection
timer_ptr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef lib::shared_ptr<boost::asio::deadline_timer> timer_ptr;$/;"	t	class:websocketpp::transport::asio::endpoint
timer_ptr	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef lib::shared_ptr<timer> timer_ptr;$/;"	t	class:websocketpp::transport::debug::connection
timer_ptr	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef lib::shared_ptr<timer> timer_ptr;$/;"	t	class:websocketpp::transport::iostream::connection
timer_ptr	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef lib::shared_ptr<timer> timer_ptr;$/;"	t	class:websocketpp::transport::stub::connection
timestamp	websocketpp/websocketpp/logger/basic.hpp	/^    static std::ostream & timestamp(std::ostream & os) {$/;"	f	class:websocketpp::log::basic
tls_error	websocketpp/websocketpp/transport/base/connection.hpp	/^    tls_error$/;"	e	enum:websocketpp::transport::error::value
tls_handshake	websocketpp/websocketpp/close.hpp	/^    static value const tls_handshake = 1015;$/;"	m	namespace:websocketpp::close::status
tls_handshake_failed	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        tls_handshake_failed$/;"	e	enum:websocketpp::transport::asio::socket::error::value
tls_handshake_timeout	websocketpp/websocketpp/transport/asio/security/base.hpp	/^        tls_handshake_timeout,$/;"	e	enum:websocketpp::transport::asio::socket::error::value
tls_init_handler	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    tls_init_handler;$/;"	t	namespace:websocketpp::transport::asio::tls_socket
tls_short_read	websocketpp/websocketpp/transport/base/connection.hpp	/^    tls_short_read,$/;"	e	enum:websocketpp::transport::error::value
tls_socket	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^namespace tls_socket {$/;"	n	namespace:websocketpp::transport::asio
tlv	common.hpp	/^namespace tlv {$/;"	n	namespace:nfd
tlv	daemon/face/ndnlp-tlv.hpp	/^namespace tlv {$/;"	n	namespace:nfd
to_hex	websocketpp/websocketpp/impl/utilities_impl.hpp	/^inline std::string to_hex(const char* input,size_t length) {$/;"	f	namespace:websocketpp::utility
to_hex	websocketpp/websocketpp/impl/utilities_impl.hpp	/^inline std::string to_hex(std::string const & input) {$/;"	f	namespace:websocketpp::utility
to_hex	websocketpp/websocketpp/impl/utilities_impl.hpp	/^inline std::string to_hex(uint8_t const * input, size_t length) {$/;"	f	namespace:websocketpp::utility
to_lower	websocketpp/websocketpp/impl/utilities_impl.hpp	/^inline std::string to_lower(std::string const & in) {$/;"	f	namespace:websocketpp::utility
to_ws	websocketpp/websocketpp/processors/base.hpp	/^inline close::status::value to_ws(lib::error_code ec) {$/;"	f	namespace:websocketpp::processor::error
toggle_connect	websocketpp/examples/telemetry_server/index.html	/^function toggle_connect() {$/;"	f
too_many_requests	websocketpp/websocketpp/http/constants.hpp	/^            too_many_requests = 429,$/;"	e	enum:websocketpp::http::status_code::value
tools	build/c4che/build.config.py	/^tools = [{'tool': 'ar', 'tooldir': None, 'funs': None}, {'tool': 'cxx', 'tooldir': None, 'funs': None}, {'tool': 'g++', 'tooldir': None, 'funs': None}, {'tool': 'compiler_cxx', 'tooldir': None, 'funs': None}, {'tool': 'gnu_dirs', 'tooldir': None, 'funs': None}, {'tool': 'default-compiler-flags', 'tooldir': None, 'funs': None}, {'tool': 'pch', 'tooldir': None, 'funs': None}, {'tool': 'boost-kqueue', 'tooldir': None, 'funs': None}, {'tool': 'boost', 'tooldir': None, 'funs': None}, {'tool': 'dependency-checker', 'tooldir': None, 'funs': None}, {'tool': 'websocket', 'tooldir': None, 'funs': None}, {'tool': 'doxygen', 'tooldir': None, 'funs': None}, {'tool': 'sphinx_build', 'tooldir': None, 'funs': None}, {'tool': 'type_traits', 'tooldir': None, 'funs': None}, {'tool': 'compiler-features', 'tooldir': None, 'funs': None}, {'tool': 'unix-socket', 'tooldir': None, 'funs': None}, {'tool': 'coverage', 'tooldir': None, 'funs': None}]$/;"	v
tools	tools/ndn-autoconfig/base-dns.cpp	/^namespace tools {$/;"	n	namespace:ndn	file:
tools	tools/ndn-autoconfig/base-dns.hpp	/^namespace tools {$/;"	n	namespace:ndn
tools	tools/ndn-autoconfig/base.cpp	/^namespace tools {$/;"	n	namespace:ndn	file:
tools	tools/ndn-autoconfig/base.hpp	/^namespace tools {$/;"	n	namespace:ndn
tools	tools/ndn-autoconfig/guess-from-identity-name.cpp	/^namespace tools {$/;"	n	namespace:ndn	file:
tools	tools/ndn-autoconfig/guess-from-identity-name.hpp	/^namespace tools {$/;"	n	namespace:ndn
tools	tools/ndn-autoconfig/guess-from-search-domains.cpp	/^namespace tools {$/;"	n	namespace:ndn	file:
tools	tools/ndn-autoconfig/guess-from-search-domains.hpp	/^namespace tools {$/;"	n	namespace:ndn
tools	tools/ndn-autoconfig/main.cpp	/^namespace tools {$/;"	n	namespace:ndn	file:
tools	tools/ndn-autoconfig/multicast-discovery.cpp	/^namespace tools {$/;"	n	namespace:ndn	file:
tools	tools/ndn-autoconfig/multicast-discovery.hpp	/^namespace tools {$/;"	n	namespace:ndn
topo	tests/daemon/fw/access-strategy.t.cpp	/^  TopologyTester topo;$/;"	m	class:nfd::fw::tests::TwoLaptopsFixture	file:
translate_ec	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    lib::error_code translate_ec(boost::system::error_code) {$/;"	f	class:websocketpp::transport::asio::basic_socket::connection
translate_ec	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    lib::error_code translate_ec(boost::system::error_code ec) {$/;"	f	class:websocketpp::transport::asio::tls_socket::connection
transmit	tests/daemon/fw/topology-tester.cpp	/^TopologyLink::transmit(TopologyNode i, const Block& packet)$/;"	f	class:nfd::fw::tests::TopologyLink
transport	tests/daemon/face/generic-link-service.t.cpp	/^  DummyTransport* transport;$/;"	m	class:nfd::face::tests::GenericLinkServiceFixture	file:
transport	websocketpp/websocketpp/transport/asio/base.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/asio/connection.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/asio/security/base.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/asio/security/none.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/base/connection.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/base/endpoint.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/debug/base.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/debug/connection.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/iostream/base.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/iostream/connection.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/stub/base.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/stub/connection.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^namespace transport {$/;"	n	namespace:websocketpp
transport_con_ptr	websocketpp/websocketpp/connection.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::connection
transport_con_ptr	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::endpoint
transport_con_ptr	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::client
transport_con_ptr	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::server
transport_con_ptr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::transport::asio::endpoint
transport_con_ptr	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::transport::debug::endpoint
transport_con_ptr	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::transport::iostream::endpoint
transport_con_ptr	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    typedef typename transport_con_type::ptr transport_con_ptr;$/;"	t	class:websocketpp::transport::stub::endpoint
transport_con_type	websocketpp/websocketpp/connection.hpp	/^        transport_con_type;$/;"	t	class:websocketpp::connection
transport_con_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename transport_type::transport_con_type transport_con_type;$/;"	t	class:websocketpp::endpoint
transport_con_type	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef typename transport_type::transport_con_type transport_con_type;$/;"	t	class:websocketpp::client
transport_con_type	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef typename transport_type::transport_con_type transport_con_type;$/;"	t	class:websocketpp::server
transport_con_type	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef asio::connection<config> transport_con_type;$/;"	t	class:websocketpp::transport::asio::endpoint
transport_con_type	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    typedef debug::connection<config> transport_con_type;$/;"	t	class:websocketpp::transport::debug::endpoint
transport_con_type	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    typedef iostream::connection<config> transport_con_type;$/;"	t	class:websocketpp::transport::iostream::endpoint
transport_con_type	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    typedef stub::connection<config> transport_con_type;$/;"	t	class:websocketpp::transport::stub::endpoint
transport_config	websocketpp/examples/debug_server/debug_server.cpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:debug_custom	file:
transport_config	websocketpp/examples/testee_server/testee_server.cpp	/^    struct transport_config : public core::transport_config {$/;"	s	struct:testee_config	file:
transport_config	websocketpp/test/connection/connection.cpp	/^    struct transport_config {$/;"	s	struct:debug_config_client	file:
transport_config	websocketpp/test/transport/integration.cpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:config	file:
transport_config	websocketpp/test/transport/integration.cpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:config_tls	file:
transport_config	websocketpp/websocketpp/config/asio.hpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:websocketpp::config::asio_tls
transport_config	websocketpp/websocketpp/config/asio_client.hpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:websocketpp::config::asio_tls_client
transport_config	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:websocketpp::config::asio
transport_config	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:websocketpp::config::asio_client
transport_config	websocketpp/websocketpp/config/core.hpp	/^    struct transport_config {$/;"	s	struct:websocketpp::config::core
transport_config	websocketpp/websocketpp/config/core_client.hpp	/^    struct transport_config {$/;"	s	struct:websocketpp::config::core_client
transport_config	websocketpp/websocketpp/config/debug.hpp	/^    struct transport_config {$/;"	s	struct:websocketpp::config::debug_core
transport_config	websocketpp/websocketpp/config/debug_asio.hpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:websocketpp::config::debug_asio_tls
transport_config	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    struct transport_config : public base::transport_config {$/;"	s	struct:websocketpp::config::debug_asio
transport_config	websocketpp/websocketpp/config/minimal_server.hpp	/^    struct transport_config {$/;"	s	struct:websocketpp::config::minimal_server
transport_type	websocketpp/examples/debug_server/debug_server.cpp	/^        transport_type;$/;"	t	struct:debug_custom	file:
transport_type	websocketpp/examples/enriched_storage/enriched_storage.cpp	/^    typedef core::transport_type transport_type;$/;"	t	struct:custom_config	file:
transport_type	websocketpp/examples/testee_server/testee_server.cpp	/^        transport_type;$/;"	t	struct:testee_config	file:
transport_type	websocketpp/test/connection/connection.cpp	/^        transport_type;$/;"	t	struct:debug_config_client	file:
transport_type	websocketpp/test/connection/connection.cpp	/^    typedef core::transport_type transport_type;$/;"	t	struct:stub_config	file:
transport_type	websocketpp/test/endpoint/endpoint.cpp	/^    typedef core::transport_type transport_type;$/;"	t	struct:stub_config	file:
transport_type	websocketpp/test/roles/client.cpp	/^    typedef core::transport_type transport_type;$/;"	t	struct:stub_config	file:
transport_type	websocketpp/test/transport/integration.cpp	/^        transport_type;$/;"	t	struct:config	file:
transport_type	websocketpp/test/transport/integration.cpp	/^        transport_type;$/;"	t	struct:config_tls	file:
transport_type	websocketpp/websocketpp/config/asio.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::asio_tls
transport_type	websocketpp/websocketpp/config/asio_client.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::asio_tls_client
transport_type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::asio
transport_type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::asio_client
transport_type	websocketpp/websocketpp/config/core.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::core
transport_type	websocketpp/websocketpp/config/core_client.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::core_client
transport_type	websocketpp/websocketpp/config/debug.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::debug_core
transport_type	websocketpp/websocketpp/config/debug_asio.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::debug_asio_tls
transport_type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::debug_asio
transport_type	websocketpp/websocketpp/config/minimal_server.hpp	/^        transport_type;$/;"	t	struct:websocketpp::config::minimal_server
transport_type	websocketpp/websocketpp/endpoint.hpp	/^    typedef typename config::transport_type transport_type;$/;"	t	class:websocketpp::endpoint
transport_type	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef typename config::transport_type transport_type;$/;"	t	class:websocketpp::client
transport_type	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef typename config::transport_type transport_type;$/;"	t	class:websocketpp::server
traverseSubTree	rib/fib-updater.cpp	/^FibUpdater::traverseSubTree(const RibEntry& entry, Rib::Rib::RouteSet routesToAdd,$/;"	f	class:nfd::rib::FibUpdater
try_again_later	websocketpp/websocketpp/close.hpp	/^    static value const try_again_later = 1013;$/;"	m	namespace:websocketpp::close::status
type	websocketpp/examples/broadcast_server/broadcast_server.cpp	/^    action_type type;$/;"	m	struct:action	file:
type	websocketpp/examples/debug_client/debug_client.cpp	/^    typedef perftest type;$/;"	t	class:perftest	file:
type	websocketpp/examples/debug_server/debug_server.cpp	/^    typedef debug_custom type;$/;"	t	struct:debug_custom	file:
type	websocketpp/test/connection/connection.cpp	/^    typedef debug_config_client type;$/;"	t	struct:debug_config_client	file:
type	websocketpp/test/transport/integration.cpp	/^    typedef config type;$/;"	t	struct:config	file:
type	websocketpp/test/transport/integration.cpp	/^    typedef config type;$/;"	t	struct:config_tls	file:
type	websocketpp/test/transport/iostream/connection.cpp	/^    typedef stub_con type;$/;"	t	struct:stub_con	file:
type	websocketpp/websocketpp/config/asio.hpp	/^    typedef asio_tls type;$/;"	t	struct:websocketpp::config::asio_tls
type	websocketpp/websocketpp/config/asio_client.hpp	/^    typedef asio_tls_client type;$/;"	t	struct:websocketpp::config::asio_tls_client
type	websocketpp/websocketpp/config/asio_no_tls.hpp	/^    typedef asio type;$/;"	t	struct:websocketpp::config::asio
type	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^    typedef asio_client type;$/;"	t	struct:websocketpp::config::asio_client
type	websocketpp/websocketpp/config/core.hpp	/^    typedef core type;$/;"	t	struct:websocketpp::config::core
type	websocketpp/websocketpp/config/core_client.hpp	/^    typedef core_client type;$/;"	t	struct:websocketpp::config::core_client
type	websocketpp/websocketpp/config/debug.hpp	/^    typedef debug_core type;$/;"	t	struct:websocketpp::config::debug_core
type	websocketpp/websocketpp/config/debug_asio.hpp	/^    typedef debug_asio_tls type;$/;"	t	struct:websocketpp::config::debug_asio_tls
type	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^    typedef debug_asio type;$/;"	t	struct:websocketpp::config::debug_asio
type	websocketpp/websocketpp/config/minimal_server.hpp	/^    typedef minimal_server type;$/;"	t	struct:websocketpp::config::minimal_server
type	websocketpp/websocketpp/connection.hpp	/^    typedef connection<config> type;$/;"	t	class:websocketpp::connection
type	websocketpp/websocketpp/endpoint.hpp	/^    typedef endpoint<connection,config> type;$/;"	t	class:websocketpp::endpoint
type	websocketpp/websocketpp/http/request.hpp	/^    typedef request type;$/;"	t	class:websocketpp::http::parser::request
type	websocketpp/websocketpp/http/response.hpp	/^    typedef response type;$/;"	t	class:websocketpp::http::parser::response
type	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    typedef con_msg_manager<message> type;$/;"	t	class:websocketpp::message_buffer::alloc::con_msg_manager
type	websocketpp/websocketpp/processors/hybi08.hpp	/^    typedef hybi08<config> type;$/;"	t	class:websocketpp::processor::hybi08
type	websocketpp/websocketpp/processors/processor.hpp	/^    typedef processor<config> type;$/;"	t	class:websocketpp::processor::processor
type	websocketpp/websocketpp/roles/client_endpoint.hpp	/^    typedef client<config> type;$/;"	t	class:websocketpp::client
type	websocketpp/websocketpp/roles/server_endpoint.hpp	/^    typedef server<config> type;$/;"	t	class:websocketpp::server
type	websocketpp/websocketpp/transport/asio/connection.hpp	/^    typedef connection<config> type;$/;"	t	class:websocketpp::transport::asio::connection
type	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef endpoint<config> type;$/;"	t	class:websocketpp::transport::asio::endpoint
type	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef connection type;$/;"	t	class:websocketpp::transport::asio::basic_socket::connection
type	websocketpp/websocketpp/transport/asio/security/none.hpp	/^    typedef endpoint type;$/;"	t	class:websocketpp::transport::asio::basic_socket::endpoint
type	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef connection type;$/;"	t	class:websocketpp::transport::asio::tls_socket::connection
type	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^    typedef endpoint type;$/;"	t	class:websocketpp::transport::asio::tls_socket::endpoint
type	websocketpp/websocketpp/transport/debug/connection.hpp	/^    typedef connection<config> type;$/;"	t	class:websocketpp::transport::debug::connection
type	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^    typedef endpoint type;$/;"	t	class:websocketpp::transport::debug::endpoint
type	websocketpp/websocketpp/transport/iostream/connection.hpp	/^    typedef connection<config> type;$/;"	t	class:websocketpp::transport::iostream::connection
type	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^    typedef endpoint type;$/;"	t	class:websocketpp::transport::iostream::endpoint
type	websocketpp/websocketpp/transport/stub/connection.hpp	/^    typedef connection<config> type;$/;"	t	class:websocketpp::transport::stub::connection
type	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^    typedef endpoint type;$/;"	t	class:websocketpp::transport::stub::endpoint
udp	daemon/face/udp-channel.hpp	/^namespace udp {$/;"	n	namespace:nfd
udp	daemon/face/udp-protocol.cpp	/^namespace udp {$/;"	n	namespace:nfd	file:
udp	daemon/face/udp-protocol.hpp	/^namespace udp {$/;"	n	namespace:nfd
uint128	core/city-hash.hpp	/^typedef std::pair<uint64, uint64> uint128;$/;"	t
uint16_converter	websocketpp/websocketpp/frame.hpp	/^union uint16_converter {$/;"	u	namespace:websocketpp::frame
uint32	core/city-hash.hpp	/^typedef uint32_t uint32;$/;"	t
uint32_converter	websocketpp/websocketpp/frame.hpp	/^union uint32_converter {$/;"	u	namespace:websocketpp::frame
uint32_in_expected_order	core/city-hash.cpp	90;"	d	file:
uint32_in_expected_order	core/city-hash.cpp	93;"	d	file:
uint64	core/city-hash.hpp	/^typedef uint64_t uint64;$/;"	t
uint64_converter	websocketpp/websocketpp/frame.hpp	/^union uint64_converter {$/;"	u	namespace:websocketpp::frame
uint64_in_expected_order	core/city-hash.cpp	91;"	d	file:
uint64_in_expected_order	core/city-hash.cpp	94;"	d	file:
uint8	core/city-hash.hpp	/^typedef uint8_t uint8;$/;"	t
unauthorized	websocketpp/websocketpp/http/constants.hpp	/^            unauthorized = 401,$/;"	e	enum:websocketpp::http::status_code::value
uninitialized	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    uninitialized,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
uninitialized	websocketpp/websocketpp/http/constants.hpp	/^            uninitialized = 0,$/;"	e	enum:websocketpp::http::status_code::value
unique_ptr_uchar_array	websocketpp/websocketpp/common/memory.hpp	/^    typedef std::unique_ptr<unsigned char[]> unique_ptr_uchar_array;$/;"	t	namespace:websocketpp::lib
unix_stream	daemon/face/unix-stream-channel.hpp	/^namespace unix_stream {$/;"	n	namespace:nfd
unix_stream	tests/daemon/face/unix-stream-transport.t.cpp	/^typedef boost::asio::local::stream_protocol unix_stream;$/;"	t	namespace:nfd::face::tests	file:
unknown	websocketpp/websocketpp/connection.hpp	/^        unknown$/;"	e	enum:websocketpp::connection::terminate_status
unknown	websocketpp/websocketpp/http/parser.hpp	/^        unknown,$/;"	e	enum:websocketpp::http::parser::body_encoding::value
unpack_wafdir	waf	/^def unpack_wafdir(dir, src):$/;"	f
unregisterEntry	rib/rib-manager.cpp	/^RibManager::unregisterEntry(const shared_ptr<const Interest>& request,$/;"	f	class:nfd::rib::RibManager
unrequested_subprotocol	websocketpp/websocketpp/error.hpp	/^    unrequested_subprotocol,$/;"	e	enum:websocketpp::error::value
unsetStrategy	daemon/mgmt/strategy-choice-manager.cpp	/^StrategyChoiceManager::unsetStrategy(const Name& topPrefix, const Interest& interest,$/;"	f	class:nfd::StrategyChoiceManager
unsetUnsolicited	daemon/table/cs-entry-impl.cpp	/^EntryImpl::unsetUnsolicited()$/;"	f	class:nfd::cs::EntryImpl
unsupported_attributes	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    unsupported_attributes,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
unsupported_data	websocketpp/websocketpp/close.hpp	/^    static value const unsupported_data = 1003;$/;"	m	namespace:websocketpp::close::status
unsupported_media_type	websocketpp/websocketpp/http/constants.hpp	/^            unsupported_media_type = 415,$/;"	e	enum:websocketpp::http::status_code::value
unsupported_version	websocketpp/websocketpp/error.hpp	/^    unsupported_version,$/;"	e	enum:websocketpp::error::value
update	daemon/table/pit-face-record.cpp	/^FaceRecord::update(const Interest& interest)$/;"	f	class:nfd::pit::FaceRecord
update	daemon/table/pit-in-record.cpp	/^InRecord::update(const Interest& interest)$/;"	f	class:nfd::pit::InRecord
updateBestFace	daemon/fw/ncc-strategy.cpp	/^NccStrategy::MeasurementsEntryInfo::updateBestFace(const Face& face) {$/;"	f	class:nfd::fw::NccStrategy::MeasurementsEntryInfo
updateMeasurements	daemon/fw/access-strategy.cpp	/^AccessStrategy::updateMeasurements(const Face& inFace, const Data& data,$/;"	f	class:nfd::fw::AccessStrategy
updateStaleTime	daemon/table/cs-entry.cpp	/^Entry::updateStaleTime()$/;"	f	class:nfd::cs::Entry
upgrade_required	websocketpp/websocketpp/error.hpp	/^    upgrade_required,$/;"	e	enum:websocketpp::error::value
upgrade_required	websocketpp/websocketpp/http/constants.hpp	/^            upgrade_required = 426,$/;"	e	enum:websocketpp::http::status_code::value
upgrade_token	websocketpp/websocketpp/processors/base.hpp	/^static char const upgrade_token[] = "websocket";$/;"	m	namespace:websocketpp::processor::constants
uri	websocketpp/websocketpp/uri.hpp	/^    explicit uri(std::string const & uri_string) : m_valid(false) {$/;"	f	class:websocketpp::uri
uri	websocketpp/websocketpp/uri.hpp	/^    uri(bool secure, std::string const & host, std::string const & port,$/;"	f	class:websocketpp::uri
uri	websocketpp/websocketpp/uri.hpp	/^    uri(bool secure, std::string const & host, std::string const & resource)$/;"	f	class:websocketpp::uri
uri	websocketpp/websocketpp/uri.hpp	/^    uri(bool secure, std::string const & host, uint16_t port,$/;"	f	class:websocketpp::uri
uri	websocketpp/websocketpp/uri.hpp	/^    uri(std::string const & scheme, std::string const & host, uint16_t port,$/;"	f	class:websocketpp::uri
uri	websocketpp/websocketpp/uri.hpp	/^    uri(std::string const & scheme, std::string const & host,$/;"	f	class:websocketpp::uri
uri	websocketpp/websocketpp/uri.hpp	/^    uri(std::string scheme, std::string const & host, std::string const & resource)$/;"	f	class:websocketpp::uri
uri	websocketpp/websocketpp/uri.hpp	/^class uri {$/;"	c	namespace:websocketpp
uri_default_port	websocketpp/websocketpp/uri.hpp	/^static uint16_t const uri_default_port = 80;$/;"	m	namespace:websocketpp
uri_default_secure_port	websocketpp/websocketpp/uri.hpp	/^static uint16_t const uri_default_secure_port = 443;$/;"	m	namespace:websocketpp
uri_ptr	websocketpp/websocketpp/uri.hpp	/^typedef lib::shared_ptr<uri> uri_ptr;$/;"	t	namespace:websocketpp
usage	tools/ndn-autoconfig-server.cpp	/^usage(const char* programName)$/;"	f	namespace:ndn
usage	tools/ndn-autoconfig/main.cpp	/^  usage(const char* programName)$/;"	f	class:ndn::tools::NdnAutoconfig
usage	tools/ndn-tlv-peek.cpp	/^  usage()$/;"	f	class:ndntlvpeek::NdnTlvPeek
usage	tools/ndn-tlv-poke.cpp	/^  usage()$/;"	f	class:ndntlvpoke::NdnTlvPoke
usage	tools/nfd-autoreg.cpp	/^  usage(std::ostream& os,$/;"	f	class:ndn::nfd_autoreg::AutoregServer
usage	tools/nfd-status.cpp	/^  usage()$/;"	f	class:ndn::NfdStatus
usage	tools/nfdc.cpp	/^usage(const char* programName)$/;"	f
use_proxy	websocketpp/websocketpp/http/constants.hpp	/^            use_proxy = 305,$/;"	e	enum:websocketpp::http::status_code::value
user_agent	websocketpp/websocketpp/version.hpp	/^static char const user_agent[] = "WebSocket++\/0.5.1";$/;"	m	namespace:websocketpp
utf8_accept	websocketpp/websocketpp/utf8_validator.hpp	/^static unsigned int const utf8_accept = 0;$/;"	m	namespace:websocketpp::utf8_validator
utf8_reject	websocketpp/websocketpp/utf8_validator.hpp	/^static unsigned int const utf8_reject = 1;$/;"	m	namespace:websocketpp::utf8_validator
utf8_validator	websocketpp/websocketpp/utf8_validator.hpp	/^namespace utf8_validator {$/;"	n	namespace:websocketpp
utf8d	websocketpp/websocketpp/utf8_validator.hpp	/^static uint8_t const utf8d[] = {$/;"	m	namespace:websocketpp::utf8_validator
utility	websocketpp/websocketpp/impl/utilities_impl.hpp	/^namespace utility {$/;"	n	namespace:websocketpp
utility	websocketpp/websocketpp/utilities.hpp	/^namespace utility {$/;"	n	namespace:websocketpp
validate	daemon/mgmt/command-validator.hpp	/^CommandValidator::validate(const Interest& interest,$/;"	f	class:nfd::CommandValidator
validate	tests/core/segment-publisher.t.cpp	/^  validate(const Data& data)$/;"	f	class:nfd::tests::SegmentPublisherFixture
validate	websocketpp/examples/debug_server/debug_server.cpp	/^bool validate(server *, websocketpp::connection_hdl) {$/;"	f
validate	websocketpp/examples/subprotocol_server/subprotocol_server.cpp	/^bool validate(server & s, connection_hdl hdl) {$/;"	f
validate	websocketpp/websocketpp/utf8_validator.hpp	/^inline bool validate(std::string const & s) {$/;"	f	namespace:websocketpp::utf8_validator
validateErase	tests/daemon/table/fib.t.cpp	/^validateErase(Fib& fib, const Name& target)$/;"	f	namespace:nfd::tests
validateErrorMessage	tests/daemon/mgmt/command-validator.t.cpp	/^validateErrorMessage(const std::string& expectedMessage, const ConfigFile::Error& error)$/;"	f	namespace:nfd::tests
validateFindExactMatch	tests/daemon/table/fib.t.cpp	/^validateFindExactMatch(const Fib& fib, const Name& target)$/;"	f	namespace:nfd::tests
validateNoExactMatch	tests/daemon/table/fib.t.cpp	/^validateNoExactMatch(const Fib& fib, const Name& target)$/;"	f	namespace:nfd::tests
validateParameters	daemon/mgmt/manager-base.cpp	/^ManagerBase::validateParameters(const nfd::ControlCommand& command, const ndn::mgmt::ControlParameters& parameters)$/;"	f	class:nfd::ManagerBase
validateParameters	rib/rib-manager.cpp	/^RibManager::validateParameters(const ControlCommand& command,$/;"	f	class:nfd::rib::RibManager
validateRibEntry	tests/rib/rib-status-publisher-common.hpp	/^  validateRibEntry(const Block& block, const Name& referenceName, const Route& referenceRoute)$/;"	f	class:nfd::rib::tests::RibStatusPublisherFixture
validateSocket	daemon/face/stream-face.hpp	/^  validateSocket(const typename Protocol::socket& socket)$/;"	f	struct:nfd::StreamFaceValidator
validateSocket	daemon/face/tcp-face.hpp	/^  validateSocket(const TcpLocalFace::protocol::socket& socket)$/;"	f	struct:nfd::StreamFaceValidator
validate_func	websocketpp/test/connection/connection.cpp	/^void validate_func(server* s, websocketpp::connection_hdl hdl, message_ptr msg) {$/;"	f
validate_func_subprotocol	websocketpp/test/roles/server.cpp	/^bool validate_func_subprotocol(server* s, std::string* out, std::string accept,$/;"	f
validate_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<bool(connection_hdl)> validate_handler;$/;"	t	namespace:websocketpp
validate_handshake	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code validate_handshake(request_type const & r) const {$/;"	f	class:websocketpp::processor::hybi00
validate_handshake	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code validate_handshake(request_type const & r) const {$/;"	f	class:websocketpp::processor::hybi13
validate_incoming_basic_header	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code validate_incoming_basic_header(frame::basic_header const & h,$/;"	f	class:websocketpp::processor::hybi13
validate_incoming_extended_header	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code validate_incoming_extended_header(frame::basic_header h,$/;"	f	class:websocketpp::processor::hybi13
validate_offer	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    lib::error_code validate_offer(http::attribute_list const &) {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
validate_server_handshake_response	websocketpp/websocketpp/processors/hybi00.hpp	/^    lib::error_code validate_server_handshake_response(request_type const &,$/;"	f	class:websocketpp::processor::hybi00
validate_server_handshake_response	websocketpp/websocketpp/processors/hybi13.hpp	/^    lib::error_code validate_server_handshake_response(request_type const & req,$/;"	f	class:websocketpp::processor::hybi13
validate_set_ua	websocketpp/test/connection/connection.cpp	/^bool validate_set_ua(server* s, websocketpp::connection_hdl hdl) {$/;"	f
validator	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  CommandValidator validator;$/;"	m	class:nfd::tests::FaceManagerNode	file:
validator	websocketpp/websocketpp/processors/hybi13.hpp	/^        utf8_validator::validator validator; \/\/ utf8 validation state$/;"	m	struct:websocketpp::processor::hybi13::msg_metadata
validator	websocketpp/websocketpp/utf8_validator.hpp	/^    validator() : m_state(utf8_accept),m_codepoint(0) {}$/;"	f	class:websocketpp::utf8_validator::validator
validator	websocketpp/websocketpp/utf8_validator.hpp	/^class validator {$/;"	c	namespace:websocketpp::utf8_validator
value	websocketpp/websocketpp/close.hpp	/^    typedef uint16_t value;$/;"	t	namespace:websocketpp::close::status
value	websocketpp/websocketpp/connection.hpp	/^    enum value {$/;"	g	namespace:websocketpp::session::fail::status
value	websocketpp/websocketpp/connection.hpp	/^    enum value {$/;"	g	namespace:websocketpp::session::internal_state
value	websocketpp/websocketpp/connection.hpp	/^    enum value {$/;"	g	namespace:websocketpp::session::state
value	websocketpp/websocketpp/error.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/error.hpp	/^enum value {$/;"	g	namespace:websocketpp::error
value	websocketpp/websocketpp/extensions/extension.hpp	/^    static const bool value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/extensions/extension.hpp	/^enum value {$/;"	g	namespace:websocketpp::extensions::error
value	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^enum value {$/;"	g	namespace:websocketpp::extensions::permessage_deflate::error
value	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^enum value {$/;"	g	namespace:websocketpp::extensions::permessage_deflate::mode
value	websocketpp/websocketpp/frame.hpp	/^    enum value {$/;"	g	namespace:websocketpp::frame::opcode
value	websocketpp/websocketpp/http/constants.hpp	/^        enum value {$/;"	g	namespace:websocketpp::http::status_code
value	websocketpp/websocketpp/http/parser.hpp	/^    enum value {$/;"	g	namespace:websocketpp::http::parser::body_encoding
value	websocketpp/websocketpp/http/parser.hpp	/^    enum value {$/;"	g	namespace:websocketpp::http::parser::state
value	websocketpp/websocketpp/logger/levels.hpp	/^    typedef uint32_t value;$/;"	t	struct:websocketpp::log::channel_type_hint
value	websocketpp/websocketpp/processors/base.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/processors/base.hpp	/^enum value {$/;"	g	namespace:websocketpp::processor::error_cat
value	websocketpp/websocketpp/transport/asio/base.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/transport/asio/base.hpp	/^enum value {$/;"	g	namespace:websocketpp::transport::asio::error
value	websocketpp/websocketpp/transport/asio/security/base.hpp	/^    enum value {$/;"	g	namespace:websocketpp::transport::asio::socket::error
value	websocketpp/websocketpp/transport/base/connection.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/transport/base/connection.hpp	/^enum value {$/;"	g	namespace:websocketpp::transport::error
value	websocketpp/websocketpp/transport/debug/base.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/transport/debug/base.hpp	/^enum value {$/;"	g	namespace:websocketpp::transport::debug::error
value	websocketpp/websocketpp/transport/iostream/base.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/transport/iostream/base.hpp	/^enum value {$/;"	g	namespace:websocketpp::transport::iostream::error
value	websocketpp/websocketpp/transport/stub/base.hpp	/^    static bool const value = true;$/;"	m	struct:is_error_code_enum
value	websocketpp/websocketpp/transport/stub/base.hpp	/^enum value {$/;"	g	namespace:websocketpp::transport::stub::error
version	build/c4che/build.config.py	/^version = 0x1080900$/;"	v
version	websocketpp/websocketpp/http/parser.hpp	/^        version,$/;"	e	enum:websocketpp::http::parser::state::value
versions_supported	websocketpp/websocketpp/connection.hpp	/^    static std::vector<int> const versions_supported = {0,7,8,13};$/;"	m	class:websocketpp::std
violatesScope	daemon/table/pit-entry.cpp	/^Entry::violatesScope(const Face& face) const$/;"	f	class:nfd::pit::Entry
wafdir	waf	/^wafdir = find_lib()$/;"	v
wantAfterReceiveInterestCalls	tests/daemon/fw/dummy-strategy.hpp	/^  bool wantAfterReceiveInterestCalls;$/;"	m	class:nfd::tests::DummyStrategy
wantNewNonce	tests/daemon/fw/strategy-tester.hpp	/^    bool wantNewNonce;$/;"	m	struct:nfd::fw::tests::StrategyTester::SendInterestArgs
warn	websocketpp/websocketpp/logger/levels.hpp	/^    static level const warn = 0x8;$/;"	m	struct:websocketpp::log::elevel
weak_ptr	websocketpp/test/message_buffer/message.cpp	/^    typedef websocketpp::lib::weak_ptr<stub> weak_ptr;$/;"	t	struct:stub	file:
weak_ptr	websocketpp/websocketpp/connection.hpp	/^    typedef lib::weak_ptr<type> weak_ptr;$/;"	t	class:websocketpp::connection
weak_ptr	websocketpp/websocketpp/message_buffer/alloc.hpp	/^    typedef lib::weak_ptr<con_msg_manager> weak_ptr;$/;"	t	class:websocketpp::message_buffer::alloc::con_msg_manager
weak_ptr	websocketpp/websocketpp/message_buffer/pool.hpp	/^    typedef lib::weak_ptr<con_msg_manager> weak_ptr;$/;"	t	class:websocketpp::message_buffer::alloc::con_msg_manager
websocket	daemon/face/websocket-channel.hpp	/^namespace websocket {$/;"	n	namespace:nfd
websocket	daemon/face/websocket-face.hpp	/^namespace websocket {$/;"	n	namespace:nfd
websocket_endpoint	websocketpp/examples/utility_client/utility_client.cpp	/^    websocket_endpoint () : m_next_id(0) {$/;"	f	class:websocket_endpoint
websocket_endpoint	websocketpp/examples/utility_client/utility_client.cpp	/^class websocket_endpoint {$/;"	c	file:
websocket_endpoint	websocketpp/tutorials/utility_client/step3.cpp	/^    websocket_endpoint () {$/;"	f	class:websocket_endpoint
websocket_endpoint	websocketpp/tutorials/utility_client/step3.cpp	/^class websocket_endpoint {$/;"	c	file:
websocket_endpoint	websocketpp/tutorials/utility_client/step4.cpp	/^    websocket_endpoint () : m_next_id(0) {$/;"	f	class:websocket_endpoint
websocket_endpoint	websocketpp/tutorials/utility_client/step4.cpp	/^class websocket_endpoint {$/;"	c	file:
websocket_endpoint	websocketpp/tutorials/utility_client/step5.cpp	/^    websocket_endpoint () : m_next_id(0) {$/;"	f	class:websocket_endpoint
websocket_endpoint	websocketpp/tutorials/utility_client/step5.cpp	/^class websocket_endpoint {$/;"	c	file:
websocket_endpoint	websocketpp/tutorials/utility_client/step6.cpp	/^    websocket_endpoint () : m_next_id(0) {$/;"	f	class:websocket_endpoint
websocket_endpoint	websocketpp/tutorials/utility_client/step6.cpp	/^class websocket_endpoint {$/;"	c	file:
websocketpp	websocketpp/websocketpp/base64/base64.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/close.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/chrono.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/connection_hdl.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/functional.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/md5.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/memory.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/network.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/random.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/regex.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/system_error.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/thread.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/common/time.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/concurrency/basic.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/concurrency/none.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/asio.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/asio_client.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/asio_no_tls.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/asio_no_tls_client.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/core.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/core_client.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/debug.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/debug_asio.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/debug_asio_no_tls.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/minimal_client.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/config/minimal_server.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/connection.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/connection_base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/endpoint_base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/error.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/extensions/extension.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/extensions/permessage_deflate/disabled.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/frame.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/http/constants.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/http/impl/parser.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/http/impl/request.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/http/impl/response.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/http/parser.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/http/request.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/http/response.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/impl/connection_impl.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/impl/endpoint_impl.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/impl/utilities_impl.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/logger/basic.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/logger/levels.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/logger/stub.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/logger/syslog.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/message_buffer/alloc.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/message_buffer/message.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/message_buffer/pool.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/processors/base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/processors/hybi00.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/processors/hybi07.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/processors/hybi08.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/processors/hybi13.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/processors/processor.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/random/none.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/random/random_device.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/roles/client_endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/roles/server_endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/sha1/sha1.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/asio/base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/asio/connection.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/asio/security/base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/asio/security/none.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/asio/security/tls.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/base/connection.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/base/endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/debug/base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/debug/connection.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/debug/endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/iostream/base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/iostream/connection.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/iostream/endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/stub/base.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/stub/connection.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/transport/stub/endpoint.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/uri.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/utf8_validator.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/utilities.hpp	/^namespace websocketpp {$/;"	n
websocketpp	websocketpp/websocketpp/version.hpp	/^namespace websocketpp {$/;"	n
what	core/privilege-helper.hpp	/^    what() const$/;"	f	class:nfd::PrivilegeHelper::Error
what	websocketpp/websocketpp/error.hpp	/^    virtual char const * what() const throw() {$/;"	f	class:websocketpp::exception
what	websocketpp/websocketpp/http/constants.hpp	/^        virtual const char* what() const throw() {$/;"	f	class:websocketpp::http::exception
wireDecode	tests/core/simple-notification.hpp	/^  wireDecode(const Block& block)$/;"	f	class:nfd::tests::SimpleNotification
wireEncode	tests/core/simple-notification.hpp	/^  wireEncode() const$/;"	f	class:nfd::tests::SimpleNotification
wireEncode	tools/ndn-autoconfig-server.cpp	/^  wireEncode() const$/;"	f	class:ndn::PrefixCollection
wireEncode	tools/ndn-autoconfig-server.cpp	/^  wireEncode(EncodingImpl<T>& encoder) const$/;"	f	class:ndn::PrefixCollection
word_mask_circ	websocketpp/websocketpp/frame.hpp	/^inline size_t word_mask_circ(uint8_t * input, uint8_t * output, size_t length,$/;"	f	namespace:websocketpp::frame
word_mask_circ	websocketpp/websocketpp/frame.hpp	/^inline size_t word_mask_circ(uint8_t* data, size_t length, size_t prepared_key){$/;"	f	namespace:websocketpp::frame
word_mask_exact	websocketpp/websocketpp/frame.hpp	/^inline void word_mask_exact(uint8_t* data, size_t length, const$/;"	f	namespace:websocketpp::frame
word_mask_exact	websocketpp/websocketpp/frame.hpp	/^inline void word_mask_exact(uint8_t* input, uint8_t* output, size_t length,$/;"	f	namespace:websocketpp::frame
work_ptr	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    typedef lib::shared_ptr<boost::asio::io_service::work> work_ptr;$/;"	t	class:websocketpp::transport::asio::endpoint
write	websocketpp/test/transport/iostream/connection.cpp	/^    void write(std::string msg) {$/;"	f	struct:stub_con
write	websocketpp/test/transport/iostream/connection.cpp	/^    void write(std::vector<websocketpp::transport::buffer> & bufs) {$/;"	f	struct:stub_con
write	websocketpp/websocketpp/logger/basic.hpp	/^    void write(level channel, char const * msg) {$/;"	f	class:websocketpp::log::basic
write	websocketpp/websocketpp/logger/basic.hpp	/^    void write(level channel, std::string const & msg) {$/;"	f	class:websocketpp::log::basic
write	websocketpp/websocketpp/logger/stub.hpp	/^    void write(level, char const *) {}$/;"	f	class:websocketpp::log::stub
write	websocketpp/websocketpp/logger/stub.hpp	/^    void write(level, std::string const &) {}$/;"	f	class:websocketpp::log::stub
write	websocketpp/websocketpp/logger/syslog.hpp	/^    void write(level channel, char const * msg) {$/;"	f	class:websocketpp::log::syslog
write	websocketpp/websocketpp/logger/syslog.hpp	/^    void write(level channel, std::string const & msg) {$/;"	f	class:websocketpp::log::syslog
writeLogs	tests/core/logger.t.cpp	/^  writeLogs()$/;"	f	class:nfd::tests::InClassLogger
writeLogs	tests/core/logger.t.cpp	/^  writeLogs()$/;"	f	class:nfd::tests::InClassTemplateLogger
write_buf	websocketpp/websocketpp/transport/asio/connection.hpp	/^        std::string write_buf;$/;"	m	struct:websocketpp::transport::asio::connection::proxy_data
write_frame	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::write_frame() {$/;"	f	class:websocketpp::connection
write_frame_handler	websocketpp/websocketpp/connection.hpp	/^typedef lib::function<void(lib::error_code const & ec)> write_frame_handler;$/;"	t	namespace:websocketpp
write_handler	websocketpp/test/transport/iostream/connection.cpp	/^websocketpp::lib::error_code write_handler(std::string & o, websocketpp::connection_hdl, char const * buf, size_t len) {$/;"	f
write_handler	websocketpp/websocketpp/transport/base/connection.hpp	/^typedef lib::function<void(lib::error_code const &)> write_handler;$/;"	t	namespace:websocketpp::transport
write_handler	websocketpp/websocketpp/transport/iostream/base.hpp	/^    write_handler;$/;"	t	namespace:websocketpp::transport::iostream
write_handler_error	websocketpp/test/transport/iostream/connection.cpp	/^websocketpp::lib::error_code write_handler_error(websocketpp::connection_hdl, char const *, size_t) {$/;"	f
write_pop	websocketpp/websocketpp/impl/connection_impl.hpp	/^typename config::message_type::ptr connection<config>::write_pop()$/;"	f	class:websocketpp::connection
write_push	websocketpp/websocketpp/impl/connection_impl.hpp	/^void connection<config>::write_push(typename config::message_type::ptr msg)$/;"	f	class:websocketpp::connection
zlib_error	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    zlib_error,$/;"	e	enum:websocketpp::extensions::permessage_deflate::error::value
~AcceptorWithCleanup	tests/daemon/face/unix-stream-transport.t.cpp	/^  ~AcceptorWithCleanup()$/;"	f	class:nfd::face::tests::AcceptorWithCleanup
~AccessStrategy	daemon/fw/access-strategy.cpp	/^AccessStrategy::~AccessStrategy()$/;"	f	class:nfd::fw::AccessStrategy
~BaseFixture	tests/test-common.hpp	/^  ~BaseFixture()$/;"	f	class:nfd::tests::BaseFixture
~BestRouteStrategy	daemon/fw/best-route-strategy.cpp	/^BestRouteStrategy::~BestRouteStrategy()$/;"	f	class:nfd::fw::BestRouteStrategy
~Channel	daemon/face/channel.cpp	/^Channel::~Channel()$/;"	f	class:nfd::Channel
~ClientControlStrategy	daemon/fw/client-control-strategy.cpp	/^ClientControlStrategy::~ClientControlStrategy()$/;"	f	class:nfd::fw::ClientControlStrategy
~CommandValidator	daemon/mgmt/command-validator.cpp	/^CommandValidator::~CommandValidator()$/;"	f	class:nfd::CommandValidator
~CommandValidatorTester	tests/daemon/mgmt/command-validator.t.cpp	/^  ~CommandValidatorTester()$/;"	f	class:nfd::tests::CommandValidatorTester
~DeadNonceList	daemon/table/dead-nonce-list.cpp	/^DeadNonceList::~DeadNonceList()$/;"	f	class:nfd::DeadNonceList
~DummyAllSubscriber	tests/core/config-file.t.cpp	/^  ~DummyAllSubscriber()$/;"	f	class:nfd::tests::DummyAllSubscriber
~DummyNoSubscriber	tests/core/config-file.t.cpp	/^  ~DummyNoSubscriber()$/;"	f	class:nfd::tests::DummyNoSubscriber
~DummyOneSubscriber	tests/core/config-file.t.cpp	/^  ~DummyOneSubscriber()$/;"	f	class:nfd::tests::DummyOneSubscriber
~DummyStrategyInfo	tests/daemon/table/strategy-info-host.t.cpp	/^  ~DummyStrategyInfo()$/;"	f	class:nfd::tests::DummyStrategyInfo
~DummySubscriber	tests/core/config-file.t.cpp	/^  ~DummySubscriber()$/;"	f	class:nfd::tests::DummySubscriber
~Entry	daemon/table/name-tree-entry.cpp	/^Entry::~Entry()$/;"	f	class:nfd::name_tree::Entry
~Face	daemon/face/face.cpp	/^Face::~Face()$/;"	f	class:nfd::Face
~FaceManagerFixture	tests/daemon/mgmt/face-manager-create-face.t.cpp	/^  ~FaceManagerFixture()$/;"	f	class:nfd::tests::FaceManagerFixture
~FaceTable	daemon/fw/face-table.cpp	/^FaceTable::~FaceTable()$/;"	f	class:nfd::FaceTable
~FakeNetworkInterfaceFixture	tests/core/network-interface.t.cpp	/^  ~FakeNetworkInterfaceFixture()$/;"	f	class:nfd::tests::FakeNetworkInterfaceFixture
~FakeNetworkInterfaceFixture	tests/daemon/face/tcp.t.cpp	/^  ~FakeNetworkInterfaceFixture()$/;"	f	class:nfd::tests::FakeNetworkInterfaceFixture
~FakeNetworkInterfaceFixture	tests/daemon/face/udp.t.cpp	/^  ~FakeNetworkInterfaceFixture()$/;"	f	class:nfd::tests::FakeNetworkInterfaceFixture
~Fib	daemon/table/fib.cpp	/^Fib::~Fib()$/;"	f	class:nfd::Fib
~Forwarder	daemon/fw/forwarder.cpp	/^Forwarder::~Forwarder()$/;"	f	class:nfd::Forwarder
~GeneralConfigSectionFixture	tests/daemon/mgmt/general-config-section.t.cpp	/^  ~GeneralConfigSectionFixture()$/;"	f	class:nfd::general::tests::GeneralConfigSectionFixture
~IdentityManagementFixture	tests/identity-management-fixture.cpp	/^IdentityManagementFixture::~IdentityManagementFixture()$/;"	f	class:nfd::tests::IdentityManagementFixture
~LinkService	daemon/face/link-service.cpp	/^LinkService::~LinkService()$/;"	f	class:nfd::face::LinkService
~LoggerFixture	tests/core/logger.t.cpp	/^  ~LoggerFixture()$/;"	f	class:nfd::tests::LoggerFixture
~MeasurementsAccessor	daemon/table/measurements-accessor.cpp	/^MeasurementsAccessor::~MeasurementsAccessor()$/;"	f	class:nfd::MeasurementsAccessor
~MeasurementsAccessorTestStrategy	tests/daemon/table/measurements-accessor.t.cpp	/^  ~MeasurementsAccessorTestStrategy()$/;"	f	class:nfd::tests::MeasurementsAccessorTestStrategy
~NameTree	daemon/table/name-tree.cpp	/^NameTree::~NameTree()$/;"	f	class:nfd::NameTree
~NccStrategy	daemon/fw/ncc-strategy.cpp	/^NccStrategy::~NccStrategy()$/;"	f	class:nfd::fw::NccStrategy
~Nfd	daemon/nfd.cpp	/^Nfd::~Nfd()$/;"	f	class:nfd::Nfd
~Nfdc	tools/nfdc.cpp	/^Nfdc::~Nfdc()$/;"	f	class:nfdc::Nfdc
~Node	daemon/table/name-tree-entry.cpp	/^Node::~Node()$/;"	f	class:nfd::name_tree::Node
~Nrd	rib/nrd.cpp	/^Nrd::~Nrd()$/;"	f	class:nfd::rib::Nrd
~Pit	daemon/table/pit.cpp	/^Pit::~Pit()$/;"	f	class:nfd::Pit
~PitEntryInfo	daemon/fw/ncc-strategy.cpp	/^NccStrategy::PitEntryInfo::~PitEntryInfo()$/;"	f	class:nfd::fw::NccStrategy::PitEntryInfo
~Policy	daemon/table/cs-policy.cpp	/^Policy::~Policy()$/;"	f	class:nfd::cs::Policy
~PriorityFifoPolicy	daemon/table/cs-policy-priority-fifo.cpp	/^PriorityFifoPolicy::~PriorityFifoPolicy()$/;"	f	class:nfd::cs::priority_fifo::PriorityFifoPolicy
~Rib	rib/rib.cpp	/^Rib::~Rib()$/;"	f	class:nfd::rib::Rib
~RibManager	rib/rib-manager.cpp	/^RibManager::~RibManager()$/;"	f	class:nfd::rib::RibManager
~RibManagerFixture	tests/rib/rib-manager.t.cpp	/^  ~RibManagerFixture()$/;"	f	class:nfd::rib::tests::RibManagerFixture
~RibStatusPublisher	rib/rib-status-publisher.cpp	/^RibStatusPublisher::~RibStatusPublisher()$/;"	f	class:nfd::rib::RibStatusPublisher
~ScopedEventId	core/scheduler.cpp	/^ScopedEventId::~ScopedEventId()$/;"	f	class:nfd::scheduler::ScopedEventId
~SegmentPublisher	core/segment-publisher.hpp	/^  ~SegmentPublisher()$/;"	f	class:nfd::SegmentPublisher
~SegmentPublisherTester	tests/core/segment-publisher.t.cpp	/^  ~SegmentPublisherTester()$/;"	f	class:nfd::tests::SegmentPublisherTester
~SimpleNotification	tests/core/simple-notification.hpp	/^  ~SimpleNotification()$/;"	f	class:nfd::tests::SimpleNotification
~Slicer	daemon/face/ndnlp-slicer.cpp	/^Slicer::~Slicer()$/;"	f	class:nfd::ndnlp::Slicer
~Strategy	daemon/fw/strategy.cpp	/^Strategy::~Strategy()$/;"	f	class:nfd::fw::Strategy
~StrategyInfo	daemon/fw/strategy-info.hpp	/^StrategyInfo::~StrategyInfo()$/;"	f	class:nfd::fw::StrategyInfo
~Transport	daemon/face/transport.cpp	/^Transport::~Transport()$/;"	f	class:nfd::face::Transport
~TwoValidatorFixture	tests/daemon/mgmt/command-validator.t.cpp	/^  ~TwoValidatorFixture()$/;"	f	class:nfd::tests::TwoValidatorFixture
~UnitTestTimeFixture	tests/test-common.hpp	/^  ~UnitTestTimeFixture()$/;"	f	class:nfd::tests::UnitTestTimeFixture
~UnixStreamChannel	daemon/face/unix-stream-channel.cpp	/^UnixStreamChannel::~UnixStreamChannel()$/;"	f	class:nfd::UnixStreamChannel
~const_iterator	daemon/table/fib.hpp	/^Fib::const_iterator::~const_iterator()$/;"	f	class:nfd::Fib::const_iterator
~const_iterator	daemon/table/name-tree.hpp	/^inline NameTree::const_iterator::~const_iterator()$/;"	f	class:nfd::NameTree::const_iterator
~const_iterator	daemon/table/pit.hpp	/^Pit::const_iterator::~const_iterator()$/;"	f	class:nfd::Pit::const_iterator
~const_iterator	daemon/table/strategy-choice.hpp	/^StrategyChoice::const_iterator::~const_iterator()$/;"	f	class:nfd::StrategyChoice::const_iterator
~enabled	websocketpp/websocketpp/extensions/permessage_deflate/enabled.hpp	/^    ~enabled() {$/;"	f	class:websocketpp::extensions::permessage_deflate::enabled
~endpoint	websocketpp/websocketpp/transport/asio/endpoint.hpp	/^    ~endpoint() {$/;"	f	class:websocketpp::transport::asio::endpoint
~exception	websocketpp/websocketpp/error.hpp	/^    ~exception() throw() {}$/;"	f	class:websocketpp::exception
~exception	websocketpp/websocketpp/http/constants.hpp	/^        ~exception() throw() {}$/;"	f	class:websocketpp::http::exception
~fake_lock_guard	websocketpp/websocketpp/concurrency/none.hpp	/^    ~fake_lock_guard() {}$/;"	f	class:websocketpp::concurrency::none_impl::fake_lock_guard
~fake_mutex	websocketpp/websocketpp/concurrency/none.hpp	/^    ~fake_mutex() {}$/;"	f	class:websocketpp::concurrency::none_impl::fake_mutex
~processor	websocketpp/websocketpp/processors/processor.hpp	/^    virtual ~processor() {}$/;"	f	class:websocketpp::processor::processor
~scoped_timer	websocketpp/test/http/parser_perf.cpp	/^    ~scoped_timer() {$/;"	f	class:scoped_timer
~websocket_endpoint	websocketpp/examples/utility_client/utility_client.cpp	/^    ~websocket_endpoint() {$/;"	f	class:websocket_endpoint
~websocket_endpoint	websocketpp/tutorials/utility_client/step5.cpp	/^    ~websocket_endpoint() {$/;"	f	class:websocket_endpoint
~websocket_endpoint	websocketpp/tutorials/utility_client/step6.cpp	/^    ~websocket_endpoint() {$/;"	f	class:websocket_endpoint
